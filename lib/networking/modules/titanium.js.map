{"version":3,"sources":["networking/modules/titanium.js"],"names":["get","post","del","log","url","qs","res","_pickLogger","Ti","API","window","console","start","Date","getTime","timestamp","toISOString","logger","now","elapsed","timestampDone","getHttpClient","Platform","osname","XMLHttpRequest","Network","createHTTPClient","keepAlive","xhr","_config","enableKeepAlive","xdr","method","params","body","endpoint","callback","status","operation","open","call","onload","error","statusCode","resp","JSON","parse","responseText","logVerbosity","onerror","e","errorData","category","_detectErrorCategory","timeout","Infinity","send","getStandardOrigin"],"mappings":"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","file":"titanium.js","sourcesContent":["/* @flow */\n/* global XMLHttpRequest, window, console */\n\nimport { EndpointDefinition, StatusAnnouncement } from '../../core/flow_interfaces';\nimport { buildUrl } from '../utils';\n\ndeclare var Ti: any;\n\nfunction log(url, qs, res) {\n  let _pickLogger = () => {\n    if (Ti && Ti.API && Ti.API.log) return Ti.API; // eslint-disable-line no-console\n    if (window && window.console && window.console.log) return window.console;\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<');                                               // eslint-disable-line no-console\n  logger.log(`[${timestamp}]`, '\\n', url, '\\n', qs);    // eslint-disable-line no-console\n  logger.log('-----');                                               // eslint-disable-line no-console\n\n  let now = new Date().getTime();\n  let elapsed = now - start;\n  let timestampDone = new Date().toISOString();\n\n  logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n  logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', url, '\\n', qs, '\\n', res);  // eslint-disable-line no-console\n  logger.log('-----');\n}\n\nfunction getHttpClient(): any {\n  if (Ti.Platform.osname === 'mobileweb') {\n    return new XMLHttpRequest();\n  } else {\n    return Ti.Network.createHTTPClient();\n  }\n}\n\nfunction keepAlive(xhr: any): void {\n  if (Ti.Platform.osname !== 'mobileweb' && this._config.keepAlive) {\n    xhr.enableKeepAlive = true;\n  }\n}\n\nfunction xdr(xhr: any, method: string, url: string, params: Object, body: Object, endpoint: EndpointDefinition, callback: Function): void {\n  let status: StatusAnnouncement = {};\n  status.operation = endpoint.operation;\n\n  xhr.open(method, buildUrl(url, params), true);\n\n  keepAlive.call(this, xhr);\n\n  xhr.onload = () => {\n    status.error = false;\n\n    if (xhr.status) {\n      status.statusCode = xhr.status;\n    }\n\n    let resp = JSON.parse(xhr.responseText);\n\n    if (this._config.logVerbosity) {\n      log(url, params, xhr.responseText);\n    }\n\n    return callback(status, resp);\n  };\n\n  xhr.onerror = (e) => {\n    status.error = true;\n    status.errorData = e.error;\n    status.category = this._detectErrorCategory(e.error);\n    return callback(status, null);\n  };\n\n  xhr.timeout = Ti.Platform.osname === 'android' ? 2147483647 : Infinity;\n\n  xhr.send(body);\n}\n\nexport function get(params: Object, endpoint: EndpointDefinition, callback: Function) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, xhr, 'GET', url, params, {}, endpoint, callback);\n}\n\nexport function post(params: Object, body: string, endpoint: EndpointDefinition, callback: Function) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, xhr, 'POST', url, params, JSON.parse(body), endpoint, callback);\n}\n\nexport function del(params: Object, endpoint: EndpointDefinition, callback: Function) {\n  let xhr = getHttpClient();\n\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, xhr, 'DELETE', url, params, {}, endpoint, callback);\n}\n"]}