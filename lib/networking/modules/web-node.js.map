{"version":3,"sources":["networking/modules/web-node.js"],"names":["get","post","del","log","req","_pickLogger","console","window","start","Date","getTime","timestamp","toISOString","logger","url","qs","on","res","now","elapsed","timestampDone","text","xdr","superagentConstruct","endpoint","callback","_config","logVerbosity","use","proxy","_modules","call","keepAlive","timeout","end","err","resp","status","error","operation","statusCode","errorData","category","_detectErrorCategory","parsedResponse","JSON","parse","message","service","params","getStandardOrigin","query","body","send","delete"],"mappings":"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","file":"web-node.js","sourcesContent":["/* @flow */\n/* global window */\n\nimport superagent from 'superagent';\nimport { EndpointDefinition, StatusAnnouncement } from '../../core/flow_interfaces';\n\nfunction log(req: Object) {\n  let _pickLogger = () => {\n    if (console && console.log) return console; // eslint-disable-line no-console\n    if (window && window.console && window.console.log) return window.console;\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<');                                               // eslint-disable-line no-console\n  logger.log(`[${timestamp}]`, '\\n', req.url, '\\n', req.qs);    // eslint-disable-line no-console\n  logger.log('-----');                                               // eslint-disable-line no-console\n\n  req.on('response', (res) => {\n    let now = new Date().getTime();\n    let elapsed = now - start;\n    let timestampDone = new Date().toISOString();\n\n    logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n    logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', req.url, '\\n', req.qs, '\\n', res.text);  // eslint-disable-line no-console\n    logger.log('-----');                                                                                   // eslint-disable-line no-console\n  });\n}\n\nfunction xdr(superagentConstruct: superagent, endpoint: EndpointDefinition, callback: Function): Object {\n  if (this._config.logVerbosity) {\n    superagentConstruct = superagentConstruct.use(log);\n  }\n\n  if (this._config.proxy && this._modules.proxy) {\n    superagentConstruct = this._modules.proxy.call(this, superagentConstruct);\n  }\n\n  if (this._config.keepAlive && this._modules.keepAlive) {\n    superagentConstruct = this._modules.keepAlive(superagentConstruct);\n  }\n\n  return superagentConstruct\n      .timeout(endpoint.timeout)\n      .end((err, resp) => {\n        let status: StatusAnnouncement = {};\n        status.error = err !== null;\n        status.operation = endpoint.operation;\n\n        if (resp && resp.status) {\n          status.statusCode = resp.status;\n        }\n\n        if (err) {\n          status.errorData = err;\n          status.category = this._detectErrorCategory(err);\n          return callback(status, null);\n        }\n\n        let parsedResponse = JSON.parse(resp.text);\n\n        if (parsedResponse.error && parsedResponse.error === 1 && parsedResponse.status && parsedResponse.message && parsedResponse.service) {\n          status.errorData = parsedResponse;\n          status.statusCode = parsedResponse.status;\n          status.error = true;\n          status.category = this._detectErrorCategory(status);\n          return callback(status, null);\n        }\n\n        return callback(status, parsedResponse);\n      });\n}\n\nexport function get(params: Object, endpoint: EndpointDefinition, callback: Function): superagent {\n  let superagentConstruct = superagent\n    .get(this.getStandardOrigin() + endpoint.url)\n    .query(params);\n  return xdr.call(this, superagentConstruct, endpoint, callback);\n}\n\nexport function post(params: Object, body: string, endpoint: EndpointDefinition, callback: Function): superagent {\n  let superagentConstruct = superagent\n    .post(this.getStandardOrigin() + endpoint.url)\n    .query(params)\n    .send(body);\n  return xdr.call(this, superagentConstruct, endpoint, callback);\n}\n\nexport function del(params: Object, endpoint: EndpointDefinition, callback: Function): superagent {\n  let superagentConstruct = superagent\n    .delete(this.getStandardOrigin() + endpoint.url)\n    .query(params);\n  return xdr.call(this, superagentConstruct, endpoint, callback);\n}\n"]}