{"version":3,"sources":["networking/modules/react_native.js"],"names":["get","post","del","log","url","qs","res","_pickLogger","console","start","Date","getTime","timestamp","toISOString","logger","now","elapsed","timestampDone","xdr","method","params","body","endpoint","callback","status","operation","fetch","then","response","error","statusCode","json","resp","_config","logVerbosity","catch","e","errorData","category","_detectErrorCategory","getStandardOrigin","call"],"mappings":"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","file":"react_native.js","sourcesContent":["/* @flow */\n/* global console */\n\nimport { EndpointDefinition, StatusAnnouncement } from '../../core/flow_interfaces';\nimport { buildUrl } from '../utils';\n\ndeclare var fetch: any;\n\nfunction log(url, qs, res) {\n  let _pickLogger = () => {\n    if (console && console.log) return console; // eslint-disable-line no-console\n    return console;\n  };\n\n  let start = new Date().getTime();\n  let timestamp = new Date().toISOString();\n  let logger = _pickLogger();\n  logger.log('<<<<<');                                               // eslint-disable-line no-console\n  logger.log(`[${timestamp}]`, '\\n', url, '\\n', qs);    // eslint-disable-line no-console\n  logger.log('-----');                                               // eslint-disable-line no-console\n\n  let now = new Date().getTime();\n  let elapsed = now - start;\n  let timestampDone = new Date().toISOString();\n\n  logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n  logger.log(`[${timestampDone} / ${elapsed}]`, '\\n', url, '\\n', qs, '\\n', res);  // eslint-disable-line no-console\n  logger.log('-----');\n}\n\nfunction xdr(method: string, url: string, params: Object, body: string, endpoint: EndpointDefinition, callback: Function): void {\n  let status: StatusAnnouncement = {};\n  status.operation = endpoint.operation;\n\n  fetch(buildUrl(url, params), { method, body })\n    .then((response) => {\n      status.error = false;\n\n      if (response.status) {\n        status.statusCode = response.status;\n      }\n\n      return response.json();\n    })\n    .then((response) => {\n      let resp = response;\n\n      if (this._config.logVerbosity) {\n        log(url, params, resp);\n      }\n\n      callback(status, resp);\n    })\n    .catch((e) => {\n      status.error = true;\n      status.errorData = e.error;\n      status.category = this._detectErrorCategory(e.error);\n      callback(status, null);\n    });\n}\n\nexport function get(params: Object, endpoint: EndpointDefinition, callback: Function) {\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, 'GET', url, params, '', endpoint, callback);\n}\n\nexport function post(params: Object, body: string, endpoint: EndpointDefinition, callback: Function) {\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, 'POST', url, params, body, endpoint, callback);\n}\n\nexport function del(params: Object, endpoint: EndpointDefinition, callback: Function) {\n  let url = this.getStandardOrigin() + endpoint.url;\n\n  return xdr.call(this, 'DELETE', url, params, '', endpoint, callback);\n}\n"]}