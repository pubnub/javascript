{"version":3,"sources":["core/endpoints/objects/channel/get.js"],"names":["endpoint","getOperation","operationConstants","PNGetChannelMetadataOperation","validateParams","_","params","channel","getURL","config","subscribeKey","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","include","customFields","handleResponse","response","status","data"],"mappings":";;;;;;;;;AAGA;;AAEA;;AAcA,IAAMA,QAA4E,GAAG;AACnFC,EAAAA,YAAY,EAAE;AAAA,WAAMC,uBAAmBC,6BAAzB;AAAA,GADqE;AAGnFC,EAAAA,cAAc,EAAE,wBAACC,CAAD,EAAIC,MAAJ,EAAe;AAC7B,QAAI,EAACA,MAAD,aAACA,MAAD,eAACA,MAAM,CAAEC,OAAT,CAAJ,EAAsB;AACpB,aAAO,yBAAP;AACD;AACF,GAPkF;AASnFC,EAAAA,MAAM,EAAE,sBAAaF,MAAb;AAAA,QAAGG,MAAH,QAAGA,MAAH;AAAA,iCAAuCA,MAAM,CAACC,YAA9C,uBAAuEC,kBAAMC,YAAN,CAAmBN,MAAM,CAACC,OAA1B,CAAvE;AAAA,GAT2E;AAWnFM,EAAAA,iBAAiB,EAAE;AAAA,QAAGJ,MAAH,SAAGA,MAAH;AAAA,WAAgBA,MAAM,CAACK,qBAAP,EAAhB;AAAA,GAXgE;AAanFC,EAAAA,eAAe,EAAE;AAAA,WAAM,IAAN;AAAA,GAbkE;AAenFC,EAAAA,aAAa,EAAE,uBAACX,CAAD,EAAIC,MAAJ;AAAA;;AAAA,WAAgB;AAC7BW,MAAAA,OAAO,EAAE,0BAACX,MAAD,aAACA,MAAD,0CAACA,MAAM,CAAEW,OAAT,oDAAC,gBAAiBC,YAAlB,yEAAkC,IAAlC,KAA2C;AADvB,KAAhB;AAAA,GAfoE;AAmBnFC,EAAAA,cAAc,EAAE,wBAACd,CAAD,EAAIe,QAAJ;AAAA,WAAkB;AAChCC,MAAAA,MAAM,EAAED,QAAQ,CAACC,MADe;AAEhCC,MAAAA,IAAI,EAAEF,QAAQ,CAACE;AAFiB,KAAlB;AAAA;AAnBmE,CAArF;eAyBetB,Q","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { ChannelMetadata } from './channel';\nimport utils from '../../../utils';\n\nexport type GetChannelMetadataParams = {|\n  channel: string,\n  include?: {|\n    customFields: ?boolean,\n  |},\n|};\n\nexport type GetChannelMetadataResult = {|\n  status: 200,\n  data: ChannelMetadata,\n|};\n\nconst endpoint: EndpointConfig<GetChannelMetadataParams, GetChannelMetadataResult> = {\n  getOperation: () => operationConstants.PNGetChannelMetadataOperation,\n\n  validateParams: (_, params) => {\n    if (!params?.channel) {\n      return 'Channel cannot be empty';\n    }\n  },\n\n  getURL: ({ config }, params) => `/v2/objects/${config.subscribeKey}/channels/${utils.encodeString(params.channel)}`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  prepareParams: (_, params) => ({\n    include: (params?.include?.customFields ?? true) && 'custom',\n  }),\n\n  handleResponse: (_, response) => ({\n    status: response.status,\n    data: response.data,\n  }),\n};\n\nexport default endpoint;\n"],"file":"get.js"}