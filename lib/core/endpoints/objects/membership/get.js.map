{"version":3,"sources":["core/endpoints/objects/membership/get.js"],"names":["endpoint","getOperation","operationConstants","PNGetMembershipsOperation","validateParams","getURL","params","config","subscribeKey","utils","encodeString","uuid","getUUID","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","_modules","queryParams","include","customFields","push","customChannelFields","channelFields","join","totalCount","count","page","next","start","prev","end","filter","limit","sort","Object","entries","map","key","value","handleResponse","_","response","status","data"],"mappings":"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","sourcesContent":["/** @flow */\n\nimport type { EndpointConfig } from '../../endpoint';\nimport operationConstants from '../../../constants/operations';\nimport type { Membership, PaginatedResultParams } from './membership';\nimport utils from '../../../utils';\n\nexport type GetMembershipsParams = {\n  uuid: string,\n} & PaginatedResultParams;\n\nexport type GetMembershipsResult = {|\n  status: 200,\n  data: Membership[],\n  totalCount?: number,\n  prev?: string,\n  next?: string,\n|};\n\nconst endpoint: EndpointConfig<GetMembershipsParams, GetMembershipsResult> = {\n  getOperation: () => operationConstants.PNGetMembershipsOperation,\n\n  // No required parameters.\n  validateParams: () => {},\n\n  getURL: ({ config }, params) => `/v2/objects/${config.subscribeKey}/uuids/${utils.encodeString(params?.uuid ?? config.getUUID())}/channels`,\n\n  getRequestTimeout: ({ config }) => config.getTransactionTimeout(),\n\n  isAuthSupported: () => true,\n\n  prepareParams: (_modules, params) => {\n    const queryParams = {};\n\n    if (params?.include) {\n      queryParams.include = [];\n\n      if (params.include?.customFields) {\n        queryParams.include.push('custom');\n      }\n\n      if (params.include?.customChannelFields) {\n        queryParams.include.push('channel.custom');\n      }\n\n      if (params.include?.channelFields) {\n        queryParams.include.push('channel');\n      }\n\n      queryParams.include = queryParams.include.join(',');\n    }\n\n    if (params?.include?.totalCount) {\n      queryParams.count = params.include?.totalCount;\n    }\n\n    if (params?.page?.next) {\n      queryParams.start = params.page?.next;\n    }\n\n    if (params?.page?.prev) {\n      queryParams.end = params.page?.prev;\n    }\n\n    if (params?.filter) {\n      queryParams.filter = params.filter;\n    }\n\n    queryParams.limit = params?.limit ?? 100;\n\n    if (params?.sort) {\n      queryParams.sort = Object.entries(params.sort ?? {}).map(([key, value]) => {\n        if (value === 'asc' || value === 'desc') {\n          return `${key}:${value}`;\n        } else {\n          return key;\n        }\n      });\n    }\n\n    return queryParams;\n  },\n\n  handleResponse: (_, response): GetMembershipsResult => ({\n    status: response.status,\n    data: response.data,\n    totalCount: response.totalCount,\n    prev: response.prev,\n    next: response.next,\n  }),\n};\n\nexport default endpoint;\n"],"file":"get.js"}