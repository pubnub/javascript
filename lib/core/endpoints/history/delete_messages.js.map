{"version":3,"sources":["core/endpoints/history/delete_messages.js"],"names":["getOperation","validateParams","useDelete","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNDeleteMessagesOperation","modules","incomingParams","channel","config","subscribeKey","utils","encodeString","getTransactionTimeout","start","end","outgoingParams","serverResponse","payload"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,S,GAAAA,S;QAIAC,M,GAAAA,M;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAWAC,c,GAAAA,c;;AA9ChB;;AACA;;;;AACA;;;;;;AAEO,SAASP,YAAT,GAAgC;AACrC,SAAOQ,qBAAmBC,yBAA1B;AACD;;AAEM,SAASR,cAAT,CAAwBS,OAAxB,EAAgDC,cAAhD,EAAuF;AAAA,MACtFC,OADsF,GAC1ED,cAD0E,CACtFC,OADsF;AAAA,MAEtFC,MAFsF,GAE3EH,OAF2E,CAEtFG,MAFsF;;;AAI5F,MAAI,CAACD,OAAL,EAAc,OAAO,iBAAP;AACd,MAAI,CAACC,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASZ,SAAT,GAAqB;AAC1B,SAAO,IAAP;AACD;;AAEM,SAASC,MAAT,CAAgBO,OAAhB,EAAwCC,cAAxC,EAAuF;AAAA,MACtFC,OADsF,GAC1ED,cAD0E,CACtFC,OADsF;AAAA,MAEtFC,MAFsF,GAE3EH,OAF2E,CAEtFG,MAFsF;;;AAI5F,kCAA8BA,OAAOC,YAArC,iBAA6DC,gBAAMC,YAAN,CAAmBJ,OAAnB,CAA7D;AACD;;AAEM,SAASR,iBAAT,OAA+D;AAAA,MAAlCS,MAAkC,QAAlCA,MAAkC;;AACpE,SAAOA,OAAOI,qBAAP,EAAP;AACD;;AAEM,SAASZ,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CC,cAA/C,EAA8F;AAAA,MAC3FO,KAD2F,GAC5EP,cAD4E,CAC3FO,KAD2F;AAAA,MACpFC,GADoF,GAC5ER,cAD4E,CACpFQ,GADoF;;;AAGnG,MAAIC,iBAAyB,EAA7B;;AAEA,MAAIF,KAAJ,EAAWE,eAAeF,KAAf,GAAuBA,KAAvB;AACX,MAAIC,GAAJ,EAASC,eAAeD,GAAf,GAAqBA,GAArB;;AAET,SAAOC,cAAP;AACD;;AAEM,SAASb,cAAT,CAAwBG,OAAxB,EAAgDW,cAAhD,EAAyF;AAC9F,SAAOA,eAAeC,OAAtB;AACD","file":"delete_messages.js","sourcesContent":["/* @flow */\r\n\r\nimport { FetchHistoryArguments, HistoryResponse, ModulesInject } from '../../flow_interfaces';\r\nimport operationConstants from '../../constants/operations';\r\nimport utils from '../../utils';\r\n\r\nexport function getOperation(): string {\r\n  return operationConstants.PNDeleteMessagesOperation;\r\n}\r\n\r\nexport function validateParams(modules: ModulesInject, incomingParams: FetchHistoryArguments) {\r\n  let { channel } = incomingParams;\r\n  let { config } = modules;\r\n\r\n  if (!channel) return 'Missing channel';\r\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\r\n}\r\n\r\nexport function useDelete() {\r\n  return true;\r\n}\r\n\r\nexport function getURL(modules: ModulesInject, incomingParams: FetchHistoryArguments): string {\r\n  let { channel } = incomingParams;\r\n  let { config } = modules;\r\n\r\n  return `/v3/history/sub-key/${config.subscribeKey}/channel/${utils.encodeString(channel)}`;\r\n}\r\n\r\nexport function getRequestTimeout({ config }: ModulesInject): boolean {\r\n  return config.getTransactionTimeout();\r\n}\r\n\r\nexport function isAuthSupported(): boolean {\r\n  return true;\r\n}\r\n\r\nexport function prepareParams(modules: ModulesInject, incomingParams: FetchHistoryArguments): Object {\r\n  const { start, end } = incomingParams;\r\n\r\n  let outgoingParams: Object = {};\r\n\r\n  if (start) outgoingParams.start = start;\r\n  if (end) outgoingParams.end = end;\r\n\r\n  return outgoingParams;\r\n}\r\n\r\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): HistoryResponse {\r\n  return serverResponse.payload;\r\n}\r\n"]}