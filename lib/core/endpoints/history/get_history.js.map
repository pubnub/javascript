{"version":3,"sources":["core/endpoints/history/get_history.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","__processMessage","modules","message","config","crypto","cipherKey","decrypt","e","operationConstants","PNHistoryOperation","incomingParams","channel","subscribeKey","utils","encodeString","getTransactionTimeout","start","end","reverse","count","stringifiedTimeToken","outgoingParams","include_token","string_message_token","toString","serverResponse","response","messages","startTimeToken","endTimeToken","forEach","serverHistoryItem","item","timetoken","entry","push"],"mappings":"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","file":"get_history.js","sourcesContent":["/* @flow */\r\n\r\nimport { FetchHistoryArguments, HistoryResponse, HistoryItem, ModulesInject } from '../../flow_interfaces';\r\nimport operationConstants from '../../constants/operations';\r\nimport utils from '../../utils';\r\n\r\nfunction __processMessage(modules, message: Object): Object | null {\r\n  let { config, crypto } = modules;\r\n  if (!config.cipherKey) return message;\r\n\r\n  try {\r\n    return crypto.decrypt(message);\r\n  } catch (e) {\r\n    return message;\r\n  }\r\n}\r\n\r\nexport function getOperation(): string {\r\n  return operationConstants.PNHistoryOperation;\r\n}\r\n\r\nexport function validateParams(modules: ModulesInject, incomingParams: FetchHistoryArguments) {\r\n  let { channel } = incomingParams;\r\n  let { config } = modules;\r\n\r\n  if (!channel) return 'Missing channel';\r\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\r\n}\r\n\r\nexport function getURL(modules: ModulesInject, incomingParams: FetchHistoryArguments): string {\r\n  let { channel } = incomingParams;\r\n  let { config } = modules;\r\n  return `/v2/history/sub-key/${config.subscribeKey}/channel/${utils.encodeString(channel)}`;\r\n}\r\n\r\nexport function getRequestTimeout({ config }: ModulesInject): boolean {\r\n  return config.getTransactionTimeout();\r\n}\r\n\r\nexport function isAuthSupported(): boolean {\r\n  return true;\r\n}\r\n\r\nexport function prepareParams(modules: ModulesInject, incomingParams: FetchHistoryArguments): Object {\r\n  const { start, end, reverse, count = 100, stringifiedTimeToken = false } = incomingParams;\r\n  let outgoingParams: Object = {\r\n    include_token: 'true'\r\n  };\r\n\r\n  outgoingParams.count = count;\r\n  if (start) outgoingParams.start = start;\r\n  if (end) outgoingParams.end = end;\r\n  if (stringifiedTimeToken) outgoingParams.string_message_token = 'true';\r\n  if (reverse != null) outgoingParams.reverse = reverse.toString();\r\n\r\n  return outgoingParams;\r\n}\r\n\r\nexport function handleResponse(modules: ModulesInject, serverResponse: FetchHistoryArguments): HistoryResponse {\r\n  const response: HistoryResponse = {\r\n    messages: [],\r\n    startTimeToken: serverResponse[1],\r\n    endTimeToken: serverResponse[2],\r\n  };\r\n\r\n  serverResponse[0].forEach((serverHistoryItem) => {\r\n    const item: HistoryItem = {\r\n      timetoken: serverHistoryItem.timetoken,\r\n      entry: __processMessage(modules, serverHistoryItem.message)\r\n    };\r\n\r\n    response.messages.push(item);\r\n  });\r\n\r\n  return response;\r\n}\r\n"]}