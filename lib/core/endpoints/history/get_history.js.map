{"version":3,"sources":["core/endpoints/history/get_history.js"],"names":["__processMessage","modules","message","config","crypto","cipherKey","decrypt","e","getOperation","operationConstants","PNHistoryOperation","validateParams","incomingParams","channel","subscribeKey","getURL","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","start","end","reverse","count","stringifiedTimeToken","includeMeta","outgoingParams","include_token","string_message_token","toString","include_meta","handleResponse","serverResponse","response","messages","startTimeToken","endTimeToken","Array","isArray","forEach","serverHistoryItem","item","timetoken","entry","meta","push"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport {\n  FetchHistoryArguments,\n  HistoryResponse,\n  HistoryItem,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nfunction __processMessage(modules, message: Object): Object | null {\n  let { config, crypto } = modules;\n  if (!config.cipherKey) return message;\n\n  try {\n    return crypto.decrypt(message);\n  } catch (e) {\n    return message;\n  }\n}\n\nexport function getOperation(): string {\n  return operationConstants.PNHistoryOperation;\n}\n\nexport function validateParams(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n) {\n  let { channel } = incomingParams;\n  let { config } = modules;\n\n  if (!channel) return 'Missing channel';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n): string {\n  let { channel } = incomingParams;\n  let { config } = modules;\n  return `/v2/history/sub-key/${\n    config.subscribeKey\n  }/channel/${utils.encodeString(channel)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): boolean {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: FetchHistoryArguments\n): Object {\n  const {\n    start,\n    end,\n    reverse,\n    count = 100,\n    stringifiedTimeToken = false,\n    includeMeta = false,\n  } = incomingParams;\n  let outgoingParams: Object = {\n    include_token: 'true',\n  };\n\n  outgoingParams.count = count;\n  if (start) outgoingParams.start = start;\n  if (end) outgoingParams.end = end;\n  if (stringifiedTimeToken) outgoingParams.string_message_token = 'true';\n  if (reverse != null) outgoingParams.reverse = reverse.toString();\n  if (includeMeta) outgoingParams.include_meta = 'true';\n\n  return outgoingParams;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  serverResponse: FetchHistoryArguments\n): HistoryResponse {\n  const response: HistoryResponse = {\n    messages: [],\n    startTimeToken: serverResponse[1],\n    endTimeToken: serverResponse[2],\n  };\n\n  if (Array.isArray(serverResponse[0])) {\n    serverResponse[0].forEach((serverHistoryItem) => {\n      const item: HistoryItem = {\n        timetoken: serverHistoryItem.timetoken,\n        entry: __processMessage(modules, serverHistoryItem.message),\n      };\n\n      if (serverHistoryItem.meta) {\n        item.meta = serverHistoryItem.meta;\n      }\n\n      response.messages.push(item);\n    });\n  }\n\n  return response;\n}\n"],"file":"get_history.js"}