{"version":3,"sources":["core/endpoints/users/update_user.js"],"names":["prepareMessagePayload","modules","incomingParams","getOperation","operationConstants","PNUpdateUserOperation","validateParams","config","id","name","custom","subscribeKey","Object","values","every","value","usePatch","getURL","utils","encodeString","patchURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","include","params","customFields","undefined","includes","push","includesString","join","length","patchPayload","handleResponse","usersResponse"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport {\n  UsersObjectInput,\n  UsersResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nfunction prepareMessagePayload(modules, incomingParams) {\n  return incomingParams;\n}\n\nexport function getOperation(): string {\n  return operationConstants.PNUpdateUserOperation;\n}\n\nexport function validateParams(\n  { config }: ModulesInject,\n  incomingParams: UsersObjectInput\n) {\n  let { id, name, custom } = incomingParams;\n\n  if (!id) return 'Missing User.id';\n  if (!name) return 'Missing User.name';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n\n  if (custom) {\n    if (\n      !Object.values(custom).every(\n        (value) => typeof value === 'string' ||\n                   typeof value === 'number' ||\n                   typeof value === 'boolean'\n      )\n    ) {\n      return 'Invalid custom type, only string, number and boolean values are allowed.';\n    }\n  }\n}\n\nexport function usePatch() {\n  return true;\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: UsersObjectInput): string {\n  let { config } = modules;\n  const { id } = incomingParams;\n  return `/v1/objects/${config.subscribeKey}/users/${utils.encodeString(id)}`;\n}\n\nexport function patchURL(modules: ModulesInject, incomingParams: UsersObjectInput): string {\n  const { config } = modules;\n  const { id } = incomingParams;\n  return `/v1/objects/${config.subscribeKey}/users/${utils.encodeString(id)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: UsersObjectInput\n): Object {\n  let { include } = incomingParams;\n  const params = {};\n\n  // default to include custom fields in response\n  if (!include) {\n    include = {\n      customFields: true\n    };\n  } else if (include.customFields === undefined) {\n    include.customFields = true;\n  }\n\n  if (include) {\n    let includes = [];\n\n    if (include.customFields) {\n      includes.push('custom');\n    }\n\n    let includesString = includes.join(',');\n\n    if (includesString.length > 0) {\n      params.include = includesString;\n    }\n  }\n\n  return params;\n}\n\nexport function patchPayload(\n  modules: ModulesInject,\n  incomingParams: UsersObjectInput\n): Object {\n  return prepareMessagePayload(modules, incomingParams);\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  usersResponse: Object\n): UsersResponse {\n  return usersResponse;\n}\n"],"file":"update_user.js"}