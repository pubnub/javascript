{"version":3,"sources":["core/endpoints/push/remove_device.js"],"names":["getOperation","operationConstants","PNRemoveAllPushNotificationsOperation","validateParams","modules","incomingParams","device","pushGateway","topic","config","subscribeKey","getURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","environment","parameters","type","Object","assign","handleResponse"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,qCAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgDC,cAAhD,EAAkF;AACvF,MAAMC,MAAN,GAAqCD,cAArC,CAAMC,MAAN;AAAA,MAAcC,WAAd,GAAqCF,cAArC,CAAcE,WAAd;AAAA,MAA2BC,KAA3B,GAAqCH,cAArC,CAA2BG,KAA3B;AACA,MAAMC,MAAN,GAAiBL,OAAjB,CAAMK,MAAN;AAEA,MAAI,CAACH,MAAL,EAAa,OAAO,4BAAP;AACb,MAAI,CAACC,WAAL,EAAkB,OAAO,mDAAP;AAClB,MAAIA,WAAW,KAAK,OAAhB,IAA2B,CAACC,KAAhC,EAAuC,OAAO,qBAAP;AACvC,MAAI,CAACC,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBP,OAAhB,EAAwCC,cAAxC,EAAkF;AACvF,MAAMC,MAAN,GAA8BD,cAA9B,CAAMC,MAAN;AAAA,MAAcC,WAAd,GAA8BF,cAA9B,CAAcE,WAAd;AACA,MAAME,MAAN,GAAiBL,OAAjB,CAAMK,MAAN;;AAEA,MAAIF,WAAW,KAAK,OAApB,EAA6B;AAC3B,sCAA2BE,MAAM,CAACC,YAAlC,4BAAgEJ,MAAhE;AACD;;AAED,oCAA2BG,MAAM,CAACC,YAAlC,sBAA0DJ,MAA1D;AACD;;AAEM,SAASM,iBAAT,OAA8D;AAAA,MAAjCH,MAAiC,QAAjCA,MAAiC;AACnE,SAAOA,MAAM,CAACI,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBX,OAAvB,EAA+CC,cAA/C,EAAyF;AAC9F,MAAME,WAAN,GAA0DF,cAA1D,CAAME,WAAN;AAAA,8BAA0DF,cAA1D,CAAmBW,WAAnB;AAAA,MAAmBA,WAAnB,sCAAiC,aAAjC;AAAA,MAAgDR,KAAhD,GAA0DH,cAA1D,CAAgDG,KAAhD;AACA,MAAIS,UAAU,GAAG;AAAEC,IAAAA,IAAI,EAAEX;AAAR,GAAjB;;AAEA,MAAIA,WAAW,KAAK,OAApB,EAA6B;AAC3BU,IAAAA,UAAU,GAAGE,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBH,UAAlB,EAA8B;AAAED,MAAAA,WAAW,EAAXA,WAAF;AAAeR,MAAAA,KAAK,EAALA;AAAf,KAA9B,CAAb;AACA,WAAOS,UAAU,CAACC,IAAlB;AACD;;AAED,SAAOD,UAAP;AACD;;AAEM,SAASI,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","sourcesContent":["/* @flow */\n\nimport { RemoveDeviceArgs, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNRemoveAllPushNotificationsOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: RemoveDeviceArgs) {\n  let { device, pushGateway, topic } = incomingParams;\n  let { config } = modules;\n\n  if (!device) return 'Missing Device ID (device)';\n  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm, apns or apns2)';\n  if (pushGateway === 'apns2' && !topic) return 'Missing APNS2 topic';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: RemoveDeviceArgs): string {\n  let { device, pushGateway } = incomingParams;\n  let { config } = modules;\n\n  if (pushGateway === 'apns2') {\n    return `/v2/push/sub-key/${config.subscribeKey}/devices-apns2/${device}/remove`;\n  }\n\n  return `/v1/push/sub-key/${config.subscribeKey}/devices/${device}/remove`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: RemoveDeviceArgs): Object {\n  let { pushGateway, environment = 'development', topic } = incomingParams;\n  let parameters = { type: pushGateway };\n\n  if (pushGateway === 'apns2') {\n    parameters = Object.assign({}, parameters, { environment, topic });\n    delete parameters.type;\n  }\n\n  return parameters;\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"],"file":"remove_device.js"}