{"version":3,"sources":["core/endpoints/push/add_push_channels.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNPushNotificationEnabledChannelsOperation","modules","incomingParams","device","pushGateway","channels","config","length","subscribeKey","getTransactionTimeout","type","add","join"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAUAC,M,GAAAA,M;QAMAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAKAC,c,GAAAA,c;;AApChB;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,0CAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgDC,cAAhD,EAAkF;AAAA,MACjFC,MADiF,GAC/CD,cAD+C,CACjFC,MADiF;AAAA,MACzEC,WADyE,GAC/CF,cAD+C,CACzEE,WADyE;AAAA,MAC5DC,QAD4D,GAC/CH,cAD+C,CAC5DG,QAD4D;AAAA,MAEjFC,MAFiF,GAEtEL,OAFsE,CAEjFK,MAFiF;;;AAIvF,MAAI,CAACH,MAAL,EAAa,OAAO,4BAAP;AACb,MAAI,CAACC,WAAL,EAAkB,OAAO,4CAAP;AAClB,MAAI,CAACC,QAAD,IAAaA,SAASE,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAACD,OAAOE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASd,MAAT,CAAgBO,OAAhB,EAAwCC,cAAxC,EAAkF;AAAA,MACjFC,MADiF,GACtED,cADsE,CACjFC,MADiF;AAAA,MAEjFG,MAFiF,GAEtEL,OAFsE,CAEjFK,MAFiF;;AAGvF,+BAA2BA,OAAOE,YAAlC,iBAA0DL,MAA1D;AACD;;AAEM,SAASR,iBAAT,OAAsD;AAAA,MAAzBW,MAAyB,QAAzBA,MAAyB;;AAC3D,SAAOA,OAAOG,qBAAP,EAAP;AACD;;AAEM,SAASb,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CC,cAA/C,EAAyF;AAAA,MACxFE,WADwF,GACzDF,cADyD,CACxFE,WADwF;AAAA,8BACzDF,cADyD,CAC3EG,QAD2E;AAAA,MAC3EA,QAD2E,yCAChE,EADgE;;AAE9F,SAAO,EAAEK,MAAMN,WAAR,EAAqBO,KAAKN,SAASO,IAAT,CAAc,GAAd,CAA1B,EAAP;AACD;;AAEM,SAASd,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"add_push_channels.js","sourcesContent":["/* @flow */\n\nimport { ModifyDeviceArgs, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNPushNotificationEnabledChannelsOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: ModifyDeviceArgs) {\n  let { device, pushGateway, channels } = incomingParams;\n  let { config } = modules;\n\n  if (!device) return 'Missing Device ID (device)';\n  if (!pushGateway) return 'Missing GW Type (pushGateway: gcm or apns)';\n  if (!channels || channels.length === 0) return 'Missing Channels';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: ModifyDeviceArgs): string {\n  let { device } = incomingParams;\n  let { config } = modules;\n  return `/v1/push/sub-key/${config.subscribeKey}/devices/${device}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: ModifyDeviceArgs): Object {\n  let { pushGateway, channels = [] } = incomingParams;\n  return { type: pushGateway, add: channels.join(',') };\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"]}