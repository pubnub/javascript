{"version":3,"sources":["core/endpoints/channel_groups/list_channels.js"],"names":["getOperation","operationConstants","PNChannelsForGroupOperation","validateParams","modules","incomingParams","channelGroup","config","subscribeKey","getURL","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","handleResponse","serverResponse","channels","payload"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,2BAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgDC,cAAhD,EAAoF;AACzF,MAAMC,YAAN,GAAuBD,cAAvB,CAAMC,YAAN;AACA,MAAMC,MAAN,GAAiBH,OAAjB,CAAMG,MAAN;AAEA,MAAI,CAACD,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAACC,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBL,OAAhB,EAAwCC,cAAxC,EAAoF;AACzF,MAAMC,YAAN,GAAuBD,cAAvB,CAAMC,YAAN;AACA,MAAMC,MAAN,GAAiBH,OAAjB,CAAMG,MAAN;AACA,oDAA2CA,MAAM,CAACC,YAAlD,4BAAgFE,kBAAMC,YAAN,CAAmBL,YAAnB,CAAhF;AACD;;AAEM,SAASM,iBAAT,OAAsD;AAAA,MAAzBL,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACM,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,GAAiC;AACtC,SAAO,EAAP;AACD;;AAEM,SAASC,cAAT,CAAwBZ,OAAxB,EAAgDa,cAAhD,EAA8F;AACnG,SAAO;AACLC,IAAAA,QAAQ,EAAED,cAAc,CAACE,OAAf,CAAuBD;AAD5B,GAAP;AAGD","sourcesContent":["/* @flow */\n\nimport { ListChannelsParams, ListChannelsResponse, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNChannelsForGroupOperation;\n}\n\nexport function validateParams(modules: ModulesInject, incomingParams: ListChannelsParams) {\n  let { channelGroup } = incomingParams;\n  let { config } = modules;\n\n  if (!channelGroup) return 'Missing Channel Group';\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: ListChannelsParams): string {\n  let { channelGroup } = incomingParams;\n  let { config } = modules;\n  return `/v1/channel-registration/sub-key/${config.subscribeKey}/channel-group/${utils.encodeString(channelGroup)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(): Object {\n  return {};\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): ListChannelsResponse {\n  return {\n    channels: serverResponse.payload.channels\n  };\n}\n"],"file":"list_channels.js"}