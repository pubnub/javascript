{"version":3,"sources":["core/endpoints/channel_groups/remove_channels.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNRemoveChannelsFromGroupOperation","modules","incomingParams","channels","channelGroup","config","length","subscribeKey","utils","encodeString","getTransactionTimeout","remove","join"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QASAC,M,GAAAA,M;QAMAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAQAC,c,GAAAA,c;;AAvChB;;AACA;;;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,kCAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgDC,cAAhD,EAAqF;AAAA,MACpFC,QADoF,GACzDD,cADyD,CACpFC,QADoF;AAAA,MAC1EC,YAD0E,GACzDF,cADyD,CAC1EE,YAD0E;AAAA,MAEpFC,MAFoF,GAEzEJ,OAFyE,CAEpFI,MAFoF;;;AAI1F,MAAI,CAACD,YAAL,EAAmB,OAAO,uBAAP;AACnB,MAAI,CAACD,QAAD,IAAaA,SAASG,MAAT,KAAoB,CAArC,EAAwC,OAAO,kBAAP;AACxC,MAAI,CAACD,OAAOE,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASb,MAAT,CAAgBO,OAAhB,EAAwCC,cAAxC,EAAqF;AAAA,MACpFE,YADoF,GACnEF,cADmE,CACpFE,YADoF;AAAA,MAEpFC,MAFoF,GAEzEJ,OAFyE,CAEpFI,MAFoF;;AAG1F,+CAA2CA,OAAOE,YAAlD,uBAAgFC,gBAAMC,YAAN,CAAmBL,YAAnB,CAAhF;AACD;;AAEM,SAAST,iBAAT,OAAsD;AAAA,MAAzBU,MAAyB,QAAzBA,MAAyB;;AAC3D,SAAOA,OAAOK,qBAAP,EAAP;AACD;;AAEM,SAASd,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CC,cAA/C,EAA4F;AAAA,8BACzEA,cADyE,CAC3FC,QAD2F;AAAA,MAC3FA,QAD2F,yCAChF,EADgF;;;AAGjG,SAAO;AACLQ,YAAQR,SAASS,IAAT,CAAc,GAAd;AADH,GAAP;AAGD;;AAEM,SAASd,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"remove_channels.js","sourcesContent":["/* @flow */\r\n\r\nimport { RemoveChannelParams, ModulesInject } from '../../flow_interfaces';\r\nimport operationConstants from '../../constants/operations';\r\nimport utils from '../../utils';\r\n\r\nexport function getOperation(): string {\r\n  return operationConstants.PNRemoveChannelsFromGroupOperation;\r\n}\r\n\r\nexport function validateParams(modules: ModulesInject, incomingParams: RemoveChannelParams) {\r\n  let { channels, channelGroup } = incomingParams;\r\n  let { config } = modules;\r\n\r\n  if (!channelGroup) return 'Missing Channel Group';\r\n  if (!channels || channels.length === 0) return 'Missing Channels';\r\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\r\n}\r\n\r\nexport function getURL(modules: ModulesInject, incomingParams: RemoveChannelParams): string {\r\n  let { channelGroup } = incomingParams;\r\n  let { config } = modules;\r\n  return `/v1/channel-registration/sub-key/${config.subscribeKey}/channel-group/${utils.encodeString(channelGroup)}`;\r\n}\r\n\r\nexport function getRequestTimeout({ config }: ModulesInject) {\r\n  return config.getTransactionTimeout();\r\n}\r\n\r\nexport function isAuthSupported() {\r\n  return true;\r\n}\r\n\r\nexport function prepareParams(modules: ModulesInject, incomingParams: RemoveChannelParams): Object {\r\n  let { channels = [] } = incomingParams;\r\n\r\n  return {\r\n    remove: channels.join(',')\r\n  };\r\n}\r\n\r\nexport function handleResponse(): Object {\r\n  return {};\r\n}\r\n"]}