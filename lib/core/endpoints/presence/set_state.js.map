{"version":3,"sources":["core/endpoints/presence/set_state.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNSetStateOperation","modules","incomingParams","config","state","channels","channelGroups","subscribeKey","length","stringifiedChannels","join","utils","encodeString","UUID","getTransactionTimeout","params","JSON","stringify","serverResponse","payload"],"mappings":";;;;;QAMgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QASAC,M,GAAAA,M;QAOAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAaAC,c,GAAAA,c;;AA7ChB;;AACA;;;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,mBAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgDC,cAAhD,EAAmF;AAAA,MAClFC,MADkF,GACvEF,OADuE,CAClFE,MADkF;AAAA,MAElFC,KAFkF,GAErCF,cAFqC,CAElFE,KAFkF;AAAA,8BAErCF,cAFqC,CAE3EG,QAF2E;AAAA,MAE3EA,QAF2E,yCAEhE,EAFgE;AAAA,+BAErCH,cAFqC,CAE5DI,aAF4D;AAAA,MAE5DA,aAF4D,0CAE5C,EAF4C;;;AAIxF,MAAI,CAACF,KAAL,EAAY,OAAO,eAAP;AACZ,MAAI,CAACD,OAAOI,YAAZ,EAA0B,OAAO,uBAAP;AAC1B,MAAIF,SAASG,MAAT,KAAoB,CAApB,IAAyBF,cAAcE,MAAd,KAAyB,CAAtD,EAAyD,OAAO,yDAAP;AAC1D;;AAEM,SAASd,MAAT,CAAgBO,OAAhB,EAAwCC,cAAxC,EAAmF;AAAA,MAClFC,MADkF,GACvEF,OADuE,CAClFE,MADkF;AAAA,+BAEhED,cAFgE,CAElFG,QAFkF;AAAA,MAElFA,QAFkF,0CAEvE,EAFuE;;AAGxF,MAAII,sBAAsBJ,SAASG,MAAT,GAAkB,CAAlB,GAAsBH,SAASK,IAAT,CAAc,GAAd,CAAtB,GAA2C,GAArE;AACA,mCAA+BP,OAAOI,YAAtC,iBAA8DI,gBAAMC,YAAN,CAAmBH,mBAAnB,CAA9D,cAA8GN,OAAOU,IAArH;AACD;;AAEM,SAASlB,iBAAT,OAA8D;AAAA,MAAjCQ,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOW,qBAAP,EAAP;AACD;;AAEM,SAASlB,eAAT,GAAoC;AACzC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CC,cAA/C,EAA0F;AAAA,MACzFE,KADyF,GAC3DF,cAD2D,CACzFE,KADyF;AAAA,+BAC3DF,cAD2D,CAClFI,aADkF;AAAA,MAClFA,aADkF,0CAClE,EADkE;;AAE/F,MAAMS,SAAS,EAAf;;AAEAA,SAAOX,KAAP,GAAeY,KAAKC,SAAL,CAAeb,KAAf,CAAf;;AAEA,MAAIE,cAAcE,MAAd,GAAuB,CAA3B,EAA8B;AAC5BO,WAAO,eAAP,IAA0BT,cAAcI,IAAd,CAAmB,GAAnB,CAA1B;AACD;;AAED,SAAOK,MAAP;AACD;;AAEM,SAASjB,cAAT,CAAwBG,OAAxB,EAAgDiB,cAAhD,EAA0F;AAC/F,SAAO,EAAEd,OAAOc,eAAeC,OAAxB,EAAP;AACD","file":"set_state.js","sourcesContent":["/* @flow */\r\n\r\nimport { SetStateArguments, SetStateResponse, ModulesInject } from '../../flow_interfaces';\r\nimport operationConstants from '../../constants/operations';\r\nimport utils from '../../utils';\r\n\r\nexport function getOperation(): string {\r\n  return operationConstants.PNSetStateOperation;\r\n}\r\n\r\nexport function validateParams(modules: ModulesInject, incomingParams: SetStateArguments) {\r\n  let { config } = modules;\r\n  let { state, channels = [], channelGroups = [] } = incomingParams;\r\n\r\n  if (!state) return 'Missing State';\r\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\r\n  if (channels.length === 0 && channelGroups.length === 0) return 'Please provide a list of channels and/or channel-groups';\r\n}\r\n\r\nexport function getURL(modules: ModulesInject, incomingParams: SetStateArguments): string {\r\n  let { config } = modules;\r\n  let { channels = [] } = incomingParams;\r\n  let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\r\n  return `/v2/presence/sub-key/${config.subscribeKey}/channel/${utils.encodeString(stringifiedChannels)}/uuid/${config.UUID}/data`;\r\n}\r\n\r\nexport function getRequestTimeout({ config }: ModulesInject): number {\r\n  return config.getTransactionTimeout();\r\n}\r\n\r\nexport function isAuthSupported(): boolean {\r\n  return true;\r\n}\r\n\r\nexport function prepareParams(modules: ModulesInject, incomingParams: SetStateArguments): Object {\r\n  let { state, channelGroups = [] } = incomingParams;\r\n  const params = {};\r\n\r\n  params.state = JSON.stringify(state);\r\n\r\n  if (channelGroups.length > 0) {\r\n    params['channel-group'] = channelGroups.join(',');\r\n  }\r\n\r\n  return params;\r\n}\r\n\r\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): SetStateResponse {\r\n  return { state: serverResponse.payload };\r\n}\r\n"]}