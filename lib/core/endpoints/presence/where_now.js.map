{"version":3,"sources":["core/endpoints/presence/where_now.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNWhereNowOperation","modules","config","subscribeKey","incomingParams","uuid","UUID","getTransactionTimeout","serverResponse","payload","channels"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAMAC,M,GAAAA,M;QAMAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAIAC,c,GAAAA,c;;AA/BhB;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAO,qBAAmBO,mBAA1B;AACD;;AAEM,SAASN,cAAT,CAAwBO,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;;AAGrD,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASR,MAAT,CAAgBM,OAAhB,EAAwCG,cAAxC,EAAmF;AAAA,MAClFF,MADkF,GACvED,OADuE,CAClFC,MADkF;AAAA,6BAE3DE,cAF2D,CAElFC,IAFkF;AAAA,MAElFA,IAFkF,wCAE3EH,OAAOI,IAFoE;;AAGxF,mCAA+BJ,OAAOC,YAAtC,cAA2DE,IAA3D;AACD;;AAEM,SAAST,iBAAT,OAAsD;AAAA,MAAzBM,MAAyB,QAAzBA,MAAyB;;AAC3D,SAAOA,OAAOK,qBAAP,EAAP;AACD;;AAEM,SAASV,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,GAAiC;AACtC,SAAO,EAAP;AACD;;AAEM,SAASC,cAAT,CAAwBE,OAAxB,EAAgDO,cAAhD,EAA0F;AAG/F,MAAI,CAACA,eAAeC,OAApB,EAA6B;AAC3B,WAAO,EAAEC,UAAU,EAAZ,EAAP;AACD;AACD,SAAO,EAAEA,UAAUF,eAAeC,OAAf,CAAuBC,QAAnC,EAAP;AACD","file":"where_now.js","sourcesContent":["/* @flow */\n\nimport { WhereNowArguments, WhereNowResponse, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNWhereNowOperation;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: WhereNowArguments): string {\n  let { config } = modules;\n  let { uuid = config.UUID } = incomingParams;\n  return `/v2/presence/sub-key/${config.subscribeKey}/uuid/${uuid}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(): Object {\n  return {};\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): WhereNowResponse {\n  // This is a quick fix for when the server does not include a payload\n  // in where now responses\n  if (!serverResponse.payload) {\n    return { channels: [] };\n  }\n  return { channels: serverResponse.payload.channels };\n}\n"]}