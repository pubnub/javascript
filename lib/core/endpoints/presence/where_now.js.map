{"version":3,"sources":["core/endpoints/presence/where_now.js"],"names":["getOperation","operationConstants","PNWhereNowOperation","validateParams","modules","config","subscribeKey","getURL","incomingParams","uuid","UUID","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","handleResponse","serverResponse","payload","channels"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AACA;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,mBAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgD;AACrD,MAAMC,MAAN,GAAiBD,OAAjB,CAAMC,MAAN;AAEA,MAAI,CAACA,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBH,OAAhB,EAAwCI,cAAxC,EAAmF;AACxF,MAAMH,MAAN,GAAiBD,OAAjB,CAAMC,MAAN;AACA,6BAA6BG,cAA7B,CAAMC,IAAN;AAAA,MAAMA,IAAN,qCAAaJ,MAAM,CAACK,IAApB;AACA,wCAA+BL,MAAM,CAACC,YAAtC,mBAA2DK,kBAAMC,YAAN,CAAmBH,IAAnB,CAA3D;AACD;;AAEM,SAASI,iBAAT,OAAsD;AAAA,MAAzBR,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACS,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,GAAiC;AACtC,SAAO,EAAP;AACD;;AAEM,SAASC,cAAT,CAAwBb,OAAxB,EAAgDc,cAAhD,EAA0F;AAG/F,MAAI,CAACA,cAAc,CAACC,OAApB,EAA6B;AAC3B,WAAO;AAAEC,MAAAA,QAAQ,EAAE;AAAZ,KAAP;AACD;;AACD,SAAO;AAAEA,IAAAA,QAAQ,EAAEF,cAAc,CAACC,OAAf,CAAuBC;AAAnC,GAAP;AACD","sourcesContent":["/* @flow */\n\nimport { WhereNowArguments, WhereNowResponse, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNWhereNowOperation;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: WhereNowArguments): string {\n  let { config } = modules;\n  let { uuid = config.UUID } = incomingParams;\n  return `/v2/presence/sub-key/${config.subscribeKey}/uuid/${utils.encodeString(uuid)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(): Object {\n  return {};\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): WhereNowResponse {\n  // This is a quick fix for when the server does not include a payload\n  // in where now responses\n  if (!serverResponse.payload) {\n    return { channels: [] };\n  }\n  return { channels: serverResponse.payload.channels };\n}\n"],"file":"where_now.js"}