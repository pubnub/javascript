{"version":3,"sources":["core/endpoints/presence/here_now.js"],"names":["getOperation","operationConstants","PNHereNowOperation","validateParams","modules","config","subscribeKey","getURL","incomingParams","channels","channelGroups","baseURL","length","stringifiedChannels","join","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","includeUUIDs","includeState","queryParameters","params","disable_uuids","state","handleResponse","serverResponse","prepareSingularChannel","response","occupantsList","totalChannels","totalOccupancy","occupancy","occupants","name","uuids","forEach","uuidEntry","push","uuid","prepareMultipleChannel","payload","total_channels","total_occupancy","Object","keys","channelName","channelEntry","handleError","status","statusCode","includes","errorData","message"],"mappings":"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","sourcesContent":["/* @flow */\n\nimport { HereNowArguments, ModulesInject, StatusAnnouncement } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNHereNowOperation;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(\n  modules: ModulesInject,\n  incomingParams: HereNowArguments\n): string {\n  let { config } = modules;\n  let { channels = [], channelGroups = [] } = incomingParams;\n  let baseURL = `/v2/presence/sub-key/${config.subscribeKey}`;\n\n  if (channels.length > 0 || channelGroups.length > 0) {\n    let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n    baseURL += `/channel/${utils.encodeString(stringifiedChannels)}`;\n  }\n\n  return baseURL;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: HereNowArguments\n): Object {\n  let {\n    channelGroups = [],\n    includeUUIDs = true,\n    includeState = false,\n    queryParameters = {}\n  } = incomingParams;\n  let params = {};\n\n  if (!includeUUIDs) params.disable_uuids = 1;\n  if (includeState) params.state = 1;\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  params = { ...params, ...queryParameters };\n\n  return params;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  serverResponse: Object,\n  incomingParams: HereNowArguments\n): Object {\n  let {\n    channels = [],\n    channelGroups = [],\n    includeUUIDs = true,\n    includeState = false,\n  } = incomingParams;\n\n  let prepareSingularChannel = () => {\n    let response = {};\n    let occupantsList = [];\n    response.totalChannels = 1;\n    response.totalOccupancy = serverResponse.occupancy;\n    response.channels = {};\n    response.channels[channels[0]] = {\n      occupants: occupantsList,\n      name: channels[0],\n      occupancy: serverResponse.occupancy,\n    };\n\n    // We have had issues in the past with server returning responses\n    // that contain no uuids array\n    if (includeUUIDs && serverResponse.uuids) {\n      serverResponse.uuids.forEach((uuidEntry) => {\n        if (includeState) {\n          occupantsList.push({ state: uuidEntry.state, uuid: uuidEntry.uuid });\n        } else {\n          occupantsList.push({ state: null, uuid: uuidEntry });\n        }\n      });\n    }\n\n    return response;\n  };\n\n  let prepareMultipleChannel = () => {\n    let response = {};\n    response.totalChannels = serverResponse.payload.total_channels;\n    response.totalOccupancy = serverResponse.payload.total_occupancy;\n    response.channels = {};\n\n    Object.keys(serverResponse.payload.channels).forEach((channelName) => {\n      let channelEntry = serverResponse.payload.channels[channelName];\n      let occupantsList = [];\n      response.channels[channelName] = {\n        occupants: occupantsList,\n        name: channelName,\n        occupancy: channelEntry.occupancy,\n      };\n\n      if (includeUUIDs) {\n        channelEntry.uuids.forEach((uuidEntry) => {\n          if (includeState) {\n            occupantsList.push({\n              state: uuidEntry.state,\n              uuid: uuidEntry.uuid,\n            });\n          } else {\n            occupantsList.push({ state: null, uuid: uuidEntry });\n          }\n        });\n      }\n\n      return response;\n    });\n\n    return response;\n  };\n\n  let response;\n  if (\n    channels.length > 1 ||\n    channelGroups.length > 0 ||\n    (channelGroups.length === 0 && channels.length === 0)\n  ) {\n    response = prepareMultipleChannel();\n  } else {\n    response = prepareSingularChannel();\n  }\n\n  return response;\n}\n\nexport function handleError(modules: ModulesInject, params: HereNowArguments, status: StatusAnnouncement) {\n  if (status.statusCode === 402 && !this.getURL(modules, params).includes('channel')) {\n    status.errorData.message = 'You have tried to perform a Global Here Now operation, your keyset configuration does not support that. Please provide a channel, or enable the Global Here Now feature from the Portal.';\n  }\n}\n"],"file":"here_now.js"}