{"version":3,"sources":["core/endpoints/presence/here_now.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","PNHereNowOperation","modules","config","subscribeKey","incomingParams","channels","channelGroups","baseURL","length","stringifiedChannels","join","encodeString","getTransactionTimeout","includeUUIDs","includeState","params","disable_uuids","state","serverResponse","prepareSingularChannel","response","occupantsList","totalChannels","totalOccupancy","occupancy","occupants","name","uuids","forEach","uuidEntry","push","uuid","prepareMultipleChannel","payload","total_channels","total_occupancy","Object","keys","channelName","channelEntry"],"mappings":"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","file":"here_now.js","sourcesContent":["/* @flow */\n\nimport { HereNowArguments, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\nexport function getOperation(): string {\n  return operationConstants.PNHereNowOperation;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject, incomingParams: HereNowArguments): string {\n  let { config } = modules;\n  let { channels = [], channelGroups = [] } = incomingParams;\n  let baseURL = `/v2/presence/sub-key/${config.subscribeKey}`;\n\n  if (channels.length > 0 || channelGroups.length > 0) {\n    let stringifiedChannels = channels.length > 0 ? channels.join(',') : ',';\n    baseURL += `/channel/${utils.encodeString(stringifiedChannels)}`;\n  }\n\n  return baseURL;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return true;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: HereNowArguments): Object {\n  let { channelGroups = [], includeUUIDs = true, includeState = false } = incomingParams;\n  const params = {};\n\n  if (!includeUUIDs) params.disable_uuids = 1;\n  if (includeState) params.state = 1;\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object, incomingParams: HereNowArguments): Object {\n  let { channels = [], channelGroups = [], includeUUIDs = true, includeState = false } = incomingParams;\n\n  let prepareSingularChannel = () => {\n    let response = {};\n    let occupantsList = [];\n    response.totalChannels = 1;\n    response.totalOccupancy = serverResponse.occupancy;\n    response.channels = {};\n    response.channels[channels[0]] = {\n      occupants: occupantsList,\n      name: channels[0],\n      occupancy: serverResponse.occupancy\n    };\n\n    // We have had issues in the past with server returning responses\n    // that contain no uuids array\n    if (includeUUIDs && serverResponse.uuids) {\n      serverResponse.uuids.forEach((uuidEntry) => {\n        if (includeState) {\n          occupantsList.push({ state: uuidEntry.state, uuid: uuidEntry.uuid });\n        } else {\n          occupantsList.push({ state: null, uuid: uuidEntry });\n        }\n      });\n    }\n\n    return response;\n  };\n\n  let prepareMultipleChannel = () => {\n    let response = {};\n    response.totalChannels = serverResponse.payload.total_channels;\n    response.totalOccupancy = serverResponse.payload.total_occupancy;\n    response.channels = {};\n\n    Object.keys(serverResponse.payload.channels).forEach((channelName) => {\n      let channelEntry = serverResponse.payload.channels[channelName];\n      let occupantsList = [];\n      response.channels[channelName] = {\n        occupants: occupantsList,\n        name: channelName,\n        occupancy: channelEntry.occupancy\n      };\n\n      if (includeUUIDs) {\n        channelEntry.uuids.forEach((uuidEntry) => {\n          if (includeState) {\n            occupantsList.push({ state: uuidEntry.state, uuid: uuidEntry.uuid });\n          } else {\n            occupantsList.push({ state: null, uuid: uuidEntry });\n          }\n        });\n      }\n\n      return response;\n    });\n\n    return response;\n  };\n\n  let response;\n  if (channels.length > 1 || channelGroups.length > 0 || (channelGroups.length === 0 && channels.length === 0)) {\n    response = prepareMultipleChannel();\n  } else {\n    response = prepareSingularChannel();\n  }\n\n  return response;\n}\n"]}