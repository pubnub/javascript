{"version":3,"sources":["core/endpoints/access_manager/audit.js"],"names":["getOperation","operationConstants","PNAccessManagerAudit","validateParams","modules","config","subscribeKey","getURL","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","incomingParams","channel","channelGroup","authKeys","params","length","auth","join","handleResponse","serverResponse","payload"],"mappings":";;;;;;;;;;;;;;;AAEA;;AACA;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,oBAA1B;AACD;;AAEM,SAASC,cAAT,CAAwBC,OAAxB,EAAgD;AACrD,MAAMC,MAAN,GAAiBD,OAAjB,CAAMC,MAAN;AAEA,MAAI,CAACA,MAAM,CAACC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAASC,MAAT,CAAgBH,OAAhB,EAAgD;AACrD,MAAMC,MAAN,GAAiBD,OAAjB,CAAMC,MAAN;AACA,0CAAiCA,MAAM,CAACC,YAAxC;AACD;;AAEM,SAASE,iBAAT,OAA8D;AAAA,MAAjCH,MAAiC,QAAjCA,MAAiC;AACnE,SAAOA,MAAM,CAACI,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAAoC;AACzC,SAAO,KAAP;AACD;;AAEM,SAASC,aAAT,CAAuBP,OAAvB,EAA+CQ,cAA/C,EAAuF;AAC5F,MAAQC,OAAR,GAAiDD,cAAjD,CAAQC,OAAR;AAAA,MAAiBC,YAAjB,GAAiDF,cAAjD,CAAiBE,YAAjB;AAAA,8BAAiDF,cAAjD,CAA+BG,QAA/B;AAAA,MAA+BA,QAA/B,sCAA0C,EAA1C;AACA,MAAMC,MAAM,GAAG,EAAf;;AAEA,MAAIH,OAAJ,EAAa;AACXG,IAAAA,MAAM,CAACH,OAAP,GAAiBA,OAAjB;AACD;;AAED,MAAIC,YAAJ,EAAkB;AAChBE,IAAAA,MAAM,CAAC,eAAD,CAAN,GAA0BF,YAA1B;AACD;;AAED,MAAIC,QAAQ,CAACE,MAAT,GAAkB,CAAtB,EAAyB;AACvBD,IAAAA,MAAM,CAACE,IAAP,GAAcH,QAAQ,CAACI,IAAT,CAAc,GAAd,CAAd;AACD;;AAED,SAAOH,MAAP;AACD;;AAEM,SAASI,cAAT,CAAwBhB,OAAxB,EAAgDiB,cAAhD,EAAgF;AACrF,SAAOA,cAAc,CAACC,OAAtB;AACD","sourcesContent":["/* @flow */\n\nimport { AuditArguments, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNAccessManagerAudit;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n}\n\nexport function getURL(modules: ModulesInject): string {\n  let { config } = modules;\n  return `/v2/auth/audit/sub-key/${config.subscribeKey}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return false;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: AuditArguments): Object {\n  const { channel, channelGroup, authKeys = [] } = incomingParams;\n  const params = {};\n\n  if (channel) {\n    params.channel = channel;\n  }\n\n  if (channelGroup) {\n    params['channel-group'] = channelGroup;\n  }\n\n  if (authKeys.length > 0) {\n    params.auth = authKeys.join(',');\n  }\n\n  return params;\n}\n\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): Object {\n  return serverResponse.payload;\n}\n"],"file":"audit.js"}