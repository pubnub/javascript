{"version":3,"sources":["core/endpoints/access_manager/audit.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNAccessManagerAudit","modules","config","subscribeKey","getTransactionTimeout","incomingParams","channel","channelGroup","authKeys","params","length","auth","join","serverResponse","payload"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAMAC,M,GAAAA,M;QAKAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QAmBAC,c,GAAAA,c;;AA7ChB;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,oBAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;;AAGrD,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC3B;;AAEM,SAAST,MAAT,CAAgBO,OAAhB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;AAErD,qCAAiCA,OAAOC,YAAxC;AACD;;AAEM,SAASR,iBAAT,OAA8D;AAAA,MAAjCO,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOE,qBAAP,EAAP;AACD;;AAEM,SAASR,eAAT,GAAoC;AACzC,SAAO,KAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CI,cAA/C,EAAuF;AAAA,MACpFC,OADoF,GAC3CD,cAD2C,CACpFC,OADoF;AAAA,MAC3EC,YAD2E,GAC3CF,cAD2C,CAC3EE,YAD2E;AAAA,8BAC3CF,cAD2C,CAC7DG,QAD6D;AAAA,MAC7DA,QAD6D,yCAClD,EADkD;;AAE5F,MAAMC,SAAS,EAAf;;AAEA,MAAIH,OAAJ,EAAa;AACXG,WAAOH,OAAP,GAAiBA,OAAjB;AACD;;AAED,MAAIC,YAAJ,EAAkB;AAChBE,WAAO,eAAP,IAA0BF,YAA1B;AACD;;AAED,MAAIC,SAASE,MAAT,GAAkB,CAAtB,EAAyB;AACvBD,WAAOE,IAAP,GAAcH,SAASI,IAAT,CAAc,GAAd,CAAd;AACD;;AAED,SAAOH,MAAP;AACD;;AAEM,SAASX,cAAT,CAAwBG,OAAxB,EAAgDY,cAAhD,EAAgF;AACrF,SAAOA,eAAeC,OAAtB;AACD","file":"audit.js","sourcesContent":["/* @flow */\r\n\r\nimport { AuditArguments, ModulesInject } from '../../flow_interfaces';\r\nimport operationConstants from '../../constants/operations';\r\n\r\nexport function getOperation(): string {\r\n  return operationConstants.PNAccessManagerAudit;\r\n}\r\n\r\nexport function validateParams(modules: ModulesInject) {\r\n  let { config } = modules;\r\n\r\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\r\n}\r\n\r\nexport function getURL(modules: ModulesInject): string {\r\n  let { config } = modules;\r\n  return `/v2/auth/audit/sub-key/${config.subscribeKey}`;\r\n}\r\n\r\nexport function getRequestTimeout({ config }: ModulesInject): number {\r\n  return config.getTransactionTimeout();\r\n}\r\n\r\nexport function isAuthSupported(): boolean {\r\n  return false;\r\n}\r\n\r\nexport function prepareParams(modules: ModulesInject, incomingParams: AuditArguments): Object {\r\n  const { channel, channelGroup, authKeys = [] } = incomingParams;\r\n  const params = {};\r\n\r\n  if (channel) {\r\n    params.channel = channel;\r\n  }\r\n\r\n  if (channelGroup) {\r\n    params['channel-group'] = channelGroup;\r\n  }\r\n\r\n  if (authKeys.length > 0) {\r\n    params.auth = authKeys.join(',');\r\n  }\r\n\r\n  return params;\r\n}\r\n\r\nexport function handleResponse(modules: ModulesInject, serverResponse: Object): Object {\r\n  return serverResponse.payload;\r\n}\r\n"]}