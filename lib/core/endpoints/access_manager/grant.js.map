{"version":3,"sources":["core/endpoints/access_manager/grant.js"],"names":["getOperation","validateParams","getURL","getRequestTimeout","isAuthSupported","prepareParams","handleResponse","operationConstants","PNAccessManagerGrant","modules","config","subscribeKey","publishKey","secretKey","getTransactionTimeout","incomingParams","channels","channelGroups","ttl","read","write","manage","authKeys","params","r","w","m","length","channel","join","auth"],"mappings":";;;;;QAKgBA,Y,GAAAA,Y;QAIAC,c,GAAAA,c;QAQAC,M,GAAAA,M;QAKAC,iB,GAAAA,iB;QAIAC,e,GAAAA,e;QAIAC,a,GAAAA,a;QA2BAC,c,GAAAA,c;;AAvDhB;;AACA;;;;;;AAEO,SAASN,YAAT,GAAgC;AACrC,SAAOO,qBAAmBC,oBAA1B;AACD;;AAEM,SAASP,cAAT,CAAwBQ,OAAxB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;;AAGrD,MAAI,CAACA,OAAOC,YAAZ,EAA0B,OAAO,uBAAP;AAC1B,MAAI,CAACD,OAAOE,UAAZ,EAAwB,OAAO,qBAAP;AACxB,MAAI,CAACF,OAAOG,SAAZ,EAAuB,OAAO,oBAAP;AACxB;;AAEM,SAASX,MAAT,CAAgBO,OAAhB,EAAgD;AAAA,MAC/CC,MAD+C,GACpCD,OADoC,CAC/CC,MAD+C;;AAErD,qCAAiCA,OAAOC,YAAxC;AACD;;AAEM,SAASR,iBAAT,OAA8D;AAAA,MAAjCO,MAAiC,QAAjCA,MAAiC;;AACnE,SAAOA,OAAOI,qBAAP,EAAP;AACD;;AAEM,SAASV,eAAT,GAAoC;AACzC,SAAO,KAAP;AACD;;AAEM,SAASC,aAAT,CAAuBI,OAAvB,EAA+CM,cAA/C,EAAuF;AAAA,8BACmBA,cADnB,CACpFC,QADoF;AAAA,MACpFA,QADoF,yCACzE,EADyE;AAAA,+BACmBD,cADnB,CACrEE,aADqE;AAAA,MACrEA,aADqE,0CACrD,EADqD;AAAA,MACjDC,GADiD,GACmBH,cADnB,CACjDG,GADiD;AAAA,6BACmBH,cADnB,CAC5CI,IAD4C;AAAA,MAC5CA,IAD4C,wCACrC,KADqC;AAAA,8BACmBJ,cADnB,CAC9BK,KAD8B;AAAA,MAC9BA,KAD8B,yCACtB,KADsB;AAAA,8BACmBL,cADnB,CACfM,MADe;AAAA,MACfA,MADe,yCACN,KADM;AAAA,8BACmBN,cADnB,CACCO,QADD;AAAA,MACCA,QADD,yCACY,EADZ;;AAE5F,MAAMC,SAAS,EAAf;;AAEAA,SAAOC,CAAP,GAAYL,IAAD,GAAS,GAAT,GAAe,GAA1B;AACAI,SAAOE,CAAP,GAAYL,KAAD,GAAU,GAAV,GAAgB,GAA3B;AACAG,SAAOG,CAAP,GAAYL,MAAD,GAAW,GAAX,GAAiB,GAA5B;;AAEA,MAAIL,SAASW,MAAT,GAAkB,CAAtB,EAAyB;AACvBJ,WAAOK,OAAP,GAAiBZ,SAASa,IAAT,CAAc,GAAd,CAAjB;AACD;;AAED,MAAIZ,cAAcU,MAAd,GAAuB,CAA3B,EAA8B;AAC5BJ,WAAO,eAAP,IAA0BN,cAAcY,IAAd,CAAmB,GAAnB,CAA1B;AACD;;AAED,MAAIP,SAASK,MAAT,GAAkB,CAAtB,EAAyB;AACvBJ,WAAOO,IAAP,GAAcR,SAASO,IAAT,CAAc,GAAd,CAAd;AACD;;AAED,MAAIX,OAAOA,QAAQ,CAAnB,EAAsB;AACpBK,WAAOL,GAAP,GAAaA,GAAb;AACD;;AAED,SAAOK,MAAP;AACD;;AAEM,SAASjB,cAAT,GAAkC;AACvC,SAAO,EAAP;AACD","file":"grant.js","sourcesContent":["/* @flow */\n\nimport { GrantArguments, ModulesInject } from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNAccessManagerGrant;\n}\n\nexport function validateParams(modules: ModulesInject) {\n  let { config } = modules;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n  if (!config.publishKey) return 'Missing Publish Key';\n  if (!config.secretKey) return 'Missing Secret Key';\n}\n\nexport function getURL(modules: ModulesInject): string {\n  let { config } = modules;\n  return `/v2/auth/grant/sub-key/${config.subscribeKey}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject): number {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported(): boolean {\n  return false;\n}\n\nexport function prepareParams(modules: ModulesInject, incomingParams: GrantArguments): Object {\n  const { channels = [], channelGroups = [], ttl, read = false, write = false, manage = false, authKeys = [] } = incomingParams;\n  const params = {};\n\n  params.r = (read) ? '1' : '0';\n  params.w = (write) ? '1' : '0';\n  params.m = (manage) ? '1' : '0';\n\n  if (channels.length > 0) {\n    params.channel = channels.join(',');\n  }\n\n  if (channelGroups.length > 0) {\n    params['channel-group'] = channelGroups.join(',');\n  }\n\n  if (authKeys.length > 0) {\n    params.auth = authKeys.join(',');\n  }\n\n  if (ttl || ttl === 0) {\n    params.ttl = ttl;\n  }\n\n  return params;\n}\n\nexport function handleResponse(): Object {\n  return {};\n}\n"]}