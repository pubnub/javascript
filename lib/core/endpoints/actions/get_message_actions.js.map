{"version":3,"sources":["core/endpoints/actions/get_message_actions.js"],"names":["getOperation","operationConstants","PNGetMessageActionsOperation","validateParams","incomingParams","config","channel","subscribeKey","getURL","utils","encodeString","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","modules","limit","start","end","outgoingParams","handleResponse","getMessageActionsResponse","response","data","length","actionTimetoken"],"mappings":";;;;;;;;;;;;;;;AAEA;;AAKA;;AACA;;AAGO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,4BAA1B;AACD;;AAEM,SAASC,cAAT,OAELC,cAFK,EAGL;AAAA,MAFEC,MAEF,QAFEA,MAEF;AACA,MAAMC,OAAN,GAAkBF,cAAlB,CAAME,OAAN;AAEA,MAAI,CAACD,MAAM,CAACE,YAAZ,EAA0B,OAAO,uBAAP;AAC1B,MAAI,CAACD,OAAL,EAAc,OAAO,yBAAP;AACf;;AAGM,SAASE,MAAT,QAELJ,cAFK,EAGG;AAAA,MAFNC,MAEM,SAFNA,MAEM;AACR,MAAMC,OAAN,GAAkBF,cAAlB,CAAME,OAAN;AAEA,uCAA8BD,MAAM,CAACE,YAArC,sBAA6DE,kBAAMC,YAAN,CAAmBJ,OAAnB,CAA7D;AACD;;AAEM,SAASK,iBAAT,QAAsD;AAAA,MAAzBN,MAAyB,SAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACO,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CACLC,OADK,EAELX,cAFK,EAGG;AACR,MAAQY,KAAR,GAA8BZ,cAA9B,CAAQY,KAAR;AAAA,MAAeC,KAAf,GAA8Bb,cAA9B,CAAea,KAAf;AAAA,MAAsBC,GAAtB,GAA8Bd,cAA9B,CAAsBc,GAAtB;AACA,MAAIC,cAAsB,GAAG,EAA7B;AAEA,MAAIH,KAAJ,EAAWG,cAAc,CAACH,KAAf,GAAuBA,KAAvB;AACX,MAAIC,KAAJ,EAAWE,cAAc,CAACF,KAAf,GAAuBA,KAAvB;AACX,MAAIC,GAAJ,EAASC,cAAc,CAACD,GAAf,GAAqBA,GAArB;AAET,SAAOC,cAAP;AACD;;AAEM,SAASC,cAAT,CACLL,OADK,EAELM,yBAFK,EAGsB;AAE3B,MAAIC,QAAQ,GAAG;AAAEC,IAAAA,IAAI,EAAEF,yBAAyB,CAACE,IAAlC;AAAwCN,IAAAA,KAAK,EAAE,IAA/C;AAAqDC,IAAAA,GAAG,EAAE;AAA1D,GAAf;;AAEA,MAAII,QAAQ,CAACC,IAAT,CAAcC,MAAlB,EAA0B;AACxBF,IAAAA,QAAQ,CAACJ,GAAT,GAAeI,QAAQ,CAACC,IAAT,CAAcD,QAAQ,CAACC,IAAT,CAAcC,MAAd,GAAuB,CAArC,EAAwCC,eAAvD;AACAH,IAAAA,QAAQ,CAACL,KAAT,GAAiBK,QAAQ,CAACC,IAAT,CAAc,CAAd,EAAiBE,eAAlC;AACD;;AAED,SAAOH,QAAP;AACD","sourcesContent":["/* @flow */\n\nimport {\n  GetMessageActionsInput,\n  GetMessageActionsResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\nimport utils from '../../utils';\n\n\nexport function getOperation(): string {\n  return operationConstants.PNGetMessageActionsOperation;\n}\n\nexport function validateParams(\n  { config }: ModulesInject,\n  incomingParams: GetMessageActionsInput\n) {\n  let { channel } = incomingParams;\n\n  if (!config.subscribeKey) return 'Missing Subscribe Key';\n  if (!channel) return 'Missing message channel';\n}\n\n\nexport function getURL(\n  { config }: ModulesInject,\n  incomingParams: GetMessageActionsInput\n): string {\n  let { channel } = incomingParams;\n\n  return `/v1/message-actions/${config.subscribeKey}/channel/${utils.encodeString(channel)}`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: GetMessageActionsInput\n): Object {\n  const { limit, start, end } = incomingParams;\n  let outgoingParams: Object = {};\n\n  if (limit) outgoingParams.limit = limit;\n  if (start) outgoingParams.start = start;\n  if (end) outgoingParams.end = end;\n\n  return outgoingParams;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  getMessageActionsResponse: Object\n): GetMessageActionsResponse {\n  /** @type GetMessageActionsResponse */\n  let response = { data: getMessageActionsResponse.data, start: null, end: null };\n\n  if (response.data.length) {\n    response.end = response.data[response.data.length - 1].actionTimetoken;\n    response.start = response.data[0].actionTimetoken;\n  }\n\n  return response;\n}\n"],"file":"get_message_actions.js"}