{"version":3,"sources":["core/endpoints/spaces/get_spaces.js"],"names":["getOperation","operationConstants","PNGetSpacesOperation","validateParams","getURL","modules","config","subscribeKey","getRequestTimeout","getTransactionTimeout","isAuthSupported","prepareParams","incomingParams","include","limit","page","filter","params","includes","totalCount","count","customFields","push","includesString","join","length","next","start","prev","end","handleResponse","spacesResponse"],"mappings":";;;;;;;;;;;;;;;AAEA;;AAKA;;AAEO,SAASA,YAAT,GAAgC;AACrC,SAAOC,uBAAmBC,oBAA1B;AACD;;AAEM,SAASC,cAAT,GAA0B,CAEhC;;AAEM,SAASC,MAAT,CACLC,OADK,EAEG;AACR,MAAMC,MAAN,GAAiBD,OAAjB,CAAMC,MAAN;AAEA,+BAAsBA,MAAM,CAACC,YAA7B;AACD;;AAEM,SAASC,iBAAT,OAAsD;AAAA,MAAzBF,MAAyB,QAAzBA,MAAyB;AAC3D,SAAOA,MAAM,CAACG,qBAAP,EAAP;AACD;;AAEM,SAASC,eAAT,GAA2B;AAChC,SAAO,IAAP;AACD;;AAEM,SAASC,aAAT,CACLN,OADK,EAELO,cAFK,EAGG;AACR,MAAQC,OAAR,GAAyCD,cAAzC,CAAQC,OAAR;AAAA,MAAiBC,KAAjB,GAAyCF,cAAzC,CAAiBE,KAAjB;AAAA,MAAwBC,IAAxB,GAAyCH,cAAzC,CAAwBG,IAAxB;AAAA,MAA8BC,MAA9B,GAAyCJ,cAAzC,CAA8BI,MAA9B;AACA,MAAMC,MAAM,GAAG,EAAf;;AAEA,MAAIH,KAAJ,EAAW;AACTG,IAAAA,MAAM,CAACH,KAAP,GAAeA,KAAf;AACD;;AAED,MAAID,OAAJ,EAAa;AACX,QAAIK,QAAQ,GAAG,EAAf;;AAEA,QAAIL,OAAO,CAACM,UAAZ,EAAwB;AACtBF,MAAAA,MAAM,CAACG,KAAP,GAAe,IAAf;AACD;;AAED,QAAIP,OAAO,CAACQ,YAAZ,EAA0B;AACxBH,MAAAA,QAAQ,CAACI,IAAT,CAAc,QAAd;AACD;;AAED,QAAIC,cAAc,GAAGL,QAAQ,CAACM,IAAT,CAAc,GAAd,CAArB;;AAEA,QAAID,cAAc,CAACE,MAAf,GAAwB,CAA5B,EAA+B;AAC7BR,MAAAA,MAAM,CAACJ,OAAP,GAAiBU,cAAjB;AACD;AACF;;AAED,MAAIR,IAAJ,EAAU;AACR,QAAIA,IAAI,CAACW,IAAT,EAAe;AACbT,MAAAA,MAAM,CAACU,KAAP,GAAeZ,IAAI,CAACW,IAApB;AACD;;AACD,QAAIX,IAAI,CAACa,IAAT,EAAe;AACbX,MAAAA,MAAM,CAACY,GAAP,GAAad,IAAI,CAACa,IAAlB;AACD;AACF;;AAED,MAAIZ,MAAJ,EAAY;AACVC,IAAAA,MAAM,CAACD,MAAP,GAAgBA,MAAhB;AACD;;AAED,SAAOC,MAAP;AACD;;AAEM,SAASa,cAAT,CACLzB,OADK,EAEL0B,cAFK,EAGe;AACpB,SAAOA,cAAP;AACD","sourcesContent":["/* @flow */\n\nimport {\n  SpaceListInput,\n  SpacesListResponse,\n  ModulesInject,\n} from '../../flow_interfaces';\nimport operationConstants from '../../constants/operations';\n\nexport function getOperation(): string {\n  return operationConstants.PNGetSpacesOperation;\n}\n\nexport function validateParams() {\n  // no required parameters\n}\n\nexport function getURL(\n  modules: ModulesInject\n): string {\n  let { config } = modules;\n\n  return `/v1/objects/${config.subscribeKey}/spaces`;\n}\n\nexport function getRequestTimeout({ config }: ModulesInject) {\n  return config.getTransactionTimeout();\n}\n\nexport function isAuthSupported() {\n  return true;\n}\n\nexport function prepareParams(\n  modules: ModulesInject,\n  incomingParams: SpaceListInput\n): Object {\n  const { include, limit, page, filter } = incomingParams;\n  const params = {};\n\n  if (limit) {\n    params.limit = limit;\n  }\n\n  if (include) {\n    let includes = [];\n\n    if (include.totalCount) {\n      params.count = true;\n    }\n\n    if (include.customFields) {\n      includes.push('custom');\n    }\n\n    let includesString = includes.join(',');\n\n    if (includesString.length > 0) {\n      params.include = includesString;\n    }\n  }\n\n  if (page) {\n    if (page.next) {\n      params.start = page.next;\n    }\n    if (page.prev) {\n      params.end = page.prev;\n    }\n  }\n\n  if (filter) {\n    params.filter = filter;\n  }\n\n  return params;\n}\n\nexport function handleResponse(\n  modules: ModulesInject,\n  spacesResponse: Object\n): SpacesListResponse {\n  return spacesResponse;\n}\n"],"file":"get_spaces.js"}