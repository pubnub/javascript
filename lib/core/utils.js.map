{"version":3,"sources":["core/utils.js"],"names":["objectToList","o","l","Object","keys","forEach","push","key","encodeString","input","encodeURIComponent","replace","x","charCodeAt","toString","toUpperCase","objectToListSorted","sort","signPamFromParams","params","map","paramKey","join","endsWith","searchString","suffix","indexOf","length","createPromise","successResolve","failureResolve","promise","Promise","fulfill","reject","module","exports"],"mappings":";;AAEA,SAASA,YAAT,CAAsBC,CAAtB,EAA6C;AAC3C,MAAIC,IAAI,EAAR;AACAC,SAAOC,IAAP,CAAYH,CAAZ,EAAeI,OAAf,CAAuB;AAAA,WAAOH,EAAEI,IAAF,CAAOC,GAAP,CAAP;AAAA,GAAvB;AACA,SAAOL,CAAP;AACD;;AAED,SAASM,YAAT,CAAsBC,KAAtB,EAA6C;AAC3C,SAAOC,mBAAmBD,KAAnB,EAA0BE,OAA1B,CAAkC,WAAlC,EAA+C;AAAA,iBAASC,EAAEC,UAAF,CAAa,CAAb,EAAgBC,QAAhB,CAAyB,EAAzB,EAA6BC,WAA7B,EAAT;AAAA,GAA/C,CAAP;AACD;;AAED,SAASC,kBAAT,CAA4Bf,CAA5B,EAAmD;AACjD,SAAOD,aAAaC,CAAb,EAAgBgB,IAAhB,EAAP;AACD;;AAED,SAASC,iBAAT,CAA2BC,MAA3B,EAAmD;AACjD,MAAIjB,IAAIc,mBAAmBG,MAAnB,CAAR;AACA,SAAOjB,EAAEkB,GAAF,CAAM;AAAA,WAAeC,QAAf,SAA2Bb,aAAaW,OAAOE,QAAP,CAAb,CAA3B;AAAA,GAAN,EAAmEC,IAAnE,CAAwE,GAAxE,CAAP;AACD;;AAED,SAASC,QAAT,CAAkBC,YAAlB,EAAwCC,MAAxC,EAAiE;AAC/D,SAAOD,aAAaE,OAAb,CAAqBD,MAArB,EAA6B,KAAKE,MAAL,GAAcF,OAAOE,MAAlD,MAA8D,CAAC,CAAtE;AACD;;AAED,SAASC,aAAT,GAAyB;AACvB,MAAIC,uBAAJ;AACA,MAAIC,uBAAJ;AACA,MAAIC,UAAU,IAAIC,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AAC7CL,qBAAiBI,OAAjB;AACAH,qBAAiBI,MAAjB;AACD,GAHa,CAAd;;AAKA,SAAO,EAAEH,gBAAF,EAAWG,QAAQJ,cAAnB,EAAmCG,SAASJ,cAA5C,EAAP;AACD;;AAEDM,OAAOC,OAAP,GAAiB,EAAElB,oCAAF,EAAqBK,kBAArB,EAA+BK,4BAA/B,EAA8CpB,0BAA9C,EAAjB","file":"utils.js","sourcesContent":["/* @flow */\n\nfunction objectToList(o: Object): Array<any> {\n  let l = [];\n  Object.keys(o).forEach(key => l.push(key));\n  return l;\n}\n\nfunction encodeString(input: string): string {\n  return encodeURIComponent(input).replace(/[!~*'()]/g, x => `%${x.charCodeAt(0).toString(16).toUpperCase()}`);\n}\n\nfunction objectToListSorted(o: Object): Array<any> {\n  return objectToList(o).sort();\n}\n\nfunction signPamFromParams(params: Object): string {\n  let l = objectToListSorted(params);\n  return l.map(paramKey => `${paramKey}=${encodeString(params[paramKey])}`).join('&');\n}\n\nfunction endsWith(searchString: string, suffix: string): boolean {\n  return searchString.indexOf(suffix, this.length - suffix.length) !== -1;\n}\n\nfunction createPromise() {\n  let successResolve;\n  let failureResolve;\n  let promise = new Promise((fulfill, reject) => {\n    successResolve = fulfill;\n    failureResolve = reject;\n  });\n\n  return { promise, reject: failureResolve, fulfill: successResolve };\n}\n\nmodule.exports = { signPamFromParams, endsWith, createPromise, encodeString };\n"]}