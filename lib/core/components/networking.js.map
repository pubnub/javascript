{"version":3,"sources":["core/components/networking.js"],"names":[],"mappings":"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","file":"core/components/networking.js","sourcesContent":["/* @flow */\n\nimport superagent from 'superagent';\n\nimport Crypto from './cryptography/index';\nimport Config from './config.js';\n\nimport { EndpointDefinition, StatusAnnouncement } from '../flow_interfaces';\n\ntype NetworkingModules = {\n  crypto: Crypto,\n  config: Config,\n  sendBeacon: Function\n}\n\nexport default class {\n  _sendBeacon: Function;\n\n  _config: Config;\n  _crypto: Crypto;\n\n  _maxSubDomain: number;\n  _currentSubDomain: number;\n\n  _standardOrigin: string;\n  _subscribeOrigin: string;\n\n  _providedFQDN: string;\n\n  _requestTimeout: number;\n\n  _coreParams: Object; /* items that must be passed with each request. */\n\n  constructor({ config, crypto, sendBeacon }: NetworkingModules) {\n    this._config = config;\n    this._crypto = crypto;\n    this._sendBeacon = sendBeacon;\n\n    this._maxSubDomain = 20;\n    this._currentSubDomain = Math.floor(Math.random() * this._maxSubDomain);\n\n    this._providedFQDN = (this._config.secure ? 'https://' : 'http://') + this._config.origin;\n    this._coreParams = {};\n\n    // create initial origins\n    this.shiftStandardOrigin();\n  }\n\n  nextOrigin(): string {\n    // if a custom origin is supplied, use do not bother with shuffling subdomains\n    if (this._providedFQDN.indexOf('pubsub.') === -1) {\n      return this._providedFQDN;\n    }\n\n    let newSubDomain: string;\n\n    this._currentSubDomain = this._currentSubDomain + 1;\n\n    if (this._currentSubDomain >= this._maxSubDomain) {\n      this._currentSubDomain = 1;\n    }\n\n    newSubDomain = this._currentSubDomain.toString();\n\n    return this._providedFQDN.replace('pubsub', 'ps' + newSubDomain);\n  }\n\n  // origin operations\n  shiftStandardOrigin(failover: boolean = false): string {\n    this._standardOrigin = this.nextOrigin(failover);\n\n    return this._standardOrigin;\n  }\n\n  getStandardOrigin(): string {\n    return this._standardOrigin;\n  }\n\n  POST(params : Object, body: string, endpoint: EndpointDefinition, callback: Function): superagent {\n    let superagentConstruct = superagent\n      .post(this.getStandardOrigin() + endpoint.url)\n      .query(params)\n      .send(body);\n    return this._abstractedXDR(superagentConstruct, endpoint, callback);\n  }\n\n  GET(params : Object, endpoint: EndpointDefinition, callback: Function): superagent {\n    let superagentConstruct = superagent\n      .get(this.getStandardOrigin() + endpoint.url)\n      .query(params);\n    return this._abstractedXDR(superagentConstruct, endpoint, callback);\n  }\n\n  _abstractedXDR(superagentConstruct: superagent, endpoint: EndpointDefinition, callback: Function): Object {\n    // attach a logger\n    if (this._config.logVerbosity) {\n      superagentConstruct = superagentConstruct.use(this._attachSuperagentLogger);\n    }\n\n    return superagentConstruct\n      .timeout(endpoint.timeout)\n      .end((err, resp) => {\n        let status: StatusAnnouncement = {};\n        status.error = err !== null;\n        status.operation = endpoint.operation;\n\n        if (resp && resp.status) {\n          status.statusCode = resp.status;\n        }\n\n        if (err) {\n          status.errorData = err;\n          status.category = this._detectErrorCategory(err);\n          return callback(status, null);\n        }\n\n        let parsedResponse = JSON.parse(resp.text);\n        return callback(status, parsedResponse);\n      });\n  }\n\n  _detectErrorCategory(err: Object): string {\n    if (err.code === 'ENOTFOUND') return 'PNNetworkIssuesCategory';\n    if (err.status === 0 || (err.hasOwnProperty('status') && typeof err.status === 'undefined')) return 'PNNetworkIssuesCategory';\n    if (err.timeout) return 'PNTimeoutCategory';\n\n    if (err.response) {\n      if (err.response.badRequest) return 'PNBadRequestCategory';\n      if (err.response.forbidden) return 'PNAccessDeniedCategory';\n    }\n\n    return 'PNUnknownCategory';\n  }\n\n  _attachSuperagentLogger(req: Object) {\n    let _pickLogger = () => {\n      if (console && console.log) return console; // eslint-disable-line no-console\n      if (window && window.console && window.console.log) return window.console;\n      return console;\n    };\n\n    let start = new Date().getTime();\n    let timestamp = new Date().toISOString();\n    let logger = _pickLogger();\n    logger.log('<<<<<');                                               // eslint-disable-line no-console\n    logger.log('[' + timestamp + ']', '\\n', req.url, '\\n', req.qs);    // eslint-disable-line no-console\n    logger.log('-----');                                               // eslint-disable-line no-console\n\n    req.on('response', (res) => {\n      let now = new Date().getTime();\n      let elapsed = now - start;\n      let timestampDone = new Date().toISOString();\n\n      logger.log('>>>>>>');                                                                                  // eslint-disable-line no-console\n      logger.log('[' + timestampDone + ' / ' + elapsed + ']', '\\n', req.url, '\\n', req.qs, '\\n', res.text);  // eslint-disable-line no-console\n      logger.log('-----');                                                                                   // eslint-disable-line no-console\n    });\n  }\n}\n"],"sourceRoot":"/source/"}