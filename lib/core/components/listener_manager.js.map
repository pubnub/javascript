{"version":3,"sources":["core/components/listener_manager.js"],"names":["_listeners","newListeners","push","deprecatedListener","forEach","listener","announce","presence","status","message","networkStatus","category","categoryConstants","PNNetworkUpCategory","announceStatus","PNNetworkDownCategory"],"mappings":";;;;;;;;AACA;;AACA;;;;;;;;;AAME,oBAAc;AAAA;;AACZ,SAAKA,UAAL,GAAkB,EAAlB;AACD;;;;gCAEWC,Y,EAA8B;AACxC,WAAKD,UAAL,CAAgBE,IAAhB,CAAqBD,YAArB;AACD;;;mCAEcE,kB,EAAoC;AACjD,UAAIF,eAAe,EAAnB;;AAEA,WAAKD,UAAL,CAAgBI,OAAhB,CAAwB,UAACC,QAAD,EAAc;AACpC,YAAIA,aAAaF,kBAAjB,EAAqCF,aAAaC,IAAb,CAAkBG,QAAlB;AACtC,OAFD;;AAIA,WAAKL,UAAL,GAAkBC,YAAlB;AACD;;;yCAEoB;AACnB,WAAKD,UAAL,GAAkB,EAAlB;AACD;;;qCAEgBM,Q,EAAgC;AAC/C,WAAKN,UAAL,CAAgBI,OAAhB,CAAwB,UAACC,QAAD,EAAc;AACpC,YAAIA,SAASE,QAAb,EAAuBF,SAASE,QAAT,CAAkBD,QAAlB;AACxB,OAFD;AAGD;;;mCAEcA,Q,EAA8B;AAC3C,WAAKN,UAAL,CAAgBI,OAAhB,CAAwB,UAACC,QAAD,EAAc;AACpC,YAAIA,SAASG,MAAb,EAAqBH,SAASG,MAAT,CAAgBF,QAAhB;AACtB,OAFD;AAGD;;;oCAEeA,Q,EAA+B;AAC7C,WAAKN,UAAL,CAAgBI,OAAhB,CAAwB,UAACC,QAAD,EAAc;AACpC,YAAIA,SAASI,OAAb,EAAsBJ,SAASI,OAAT,CAAiBH,QAAjB;AACvB,OAFD;AAGD;;;wCAEmB;AAClB,UAAII,gBAAoC,EAAxC;AACAA,oBAAcC,QAAd,GAAyBC,qBAAkBC,mBAA3C;AACA,WAAKC,cAAL,CAAoBJ,aAApB;AACD;;;0CAEqB;AACpB,UAAIA,gBAAoC,EAAxC;AACAA,oBAAcC,QAAd,GAAyBC,qBAAkBG,qBAA3C;AACA,WAAKD,cAAL,CAAoBJ,aAApB;AACD","file":"listener_manager.js","sourcesContent":["/* @flow */\nimport { MessageAnnouncement, StatusAnnouncement, CallbackStruct, PresenceAnnouncement } from '../flow_interfaces';\nimport categoryConstants from '../constants/categories';\n\nexport default class {\n\n  _listeners: Array<CallbackStruct>;\n\n  constructor() {\n    this._listeners = [];\n  }\n\n  addListener(newListeners: CallbackStruct) {\n    this._listeners.push(newListeners);\n  }\n\n  removeListener(deprecatedListener: CallbackStruct) {\n    let newListeners = [];\n\n    this._listeners.forEach((listener) => {\n      if (listener !== deprecatedListener) newListeners.push(listener);\n    });\n\n    this._listeners = newListeners;\n  }\n\n  removeAllListeners() {\n    this._listeners = [];\n  }\n\n  announcePresence(announce: PresenceAnnouncement) {\n    this._listeners.forEach((listener) => {\n      if (listener.presence) listener.presence(announce);\n    });\n  }\n\n  announceStatus(announce: StatusAnnouncement) {\n    this._listeners.forEach((listener) => {\n      if (listener.status) listener.status(announce);\n    });\n  }\n\n  announceMessage(announce: MessageAnnouncement) {\n    this._listeners.forEach((listener) => {\n      if (listener.message) listener.message(announce);\n    });\n  }\n\n  announceNetworkUp() {\n    let networkStatus: StatusAnnouncement = {};\n    networkStatus.category = categoryConstants.PNNetworkUpCategory;\n    this.announceStatus(networkStatus);\n  }\n\n  announceNetworkDown() {\n    let networkStatus: StatusAnnouncement = {};\n    networkStatus.category = categoryConstants.PNNetworkDownCategory;\n    this.announceStatus(networkStatus);\n  }\n\n}\n"]}