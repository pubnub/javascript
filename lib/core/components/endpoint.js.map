{"version":3,"sources":["core/components/endpoint.js"],"names":["PubNubError","message","status","name","constructor","Error","createError","errorPayload","type","error","createValidationError","decideURL","endpoint","modules","incomingParams","usePost","postURL","usePatch","patchURL","useGetFile","getFileURL","getURL","generatePNSDK","config","sdkName","base","sdkFamily","partnerId","getVersion","pnsdkSuffix","_getPnsdkSuffix","length","getHttpMethod","useDelete","signRequest","url","outgoingParams","crypto","httpMethod","timestamp","Math","floor","Date","getTime","getOperation","signInput","publishKey","utils","signPamFromParams","payload","postPayload","JSON","stringify","patchPayload","signature","HMACSHA256","replace","networking","telemetryManager","tokenManager","requestId","uuidGenerator","createUUID","callback","promiseComponent","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","createPromise","validationResult","validateParams","reject","promise","prepareParams","callInstance","networkingParams","operation","timeout","getRequestTimeout","headers","getRequestHeaders","ignoreBody","forceBuffered","uuid","UUID","pnsdk","telemetryLatencies","operationsLatencyForRequest","Object","keys","useInstanceId","instanceid","instanceId","useRequestId","requestid","isAuthSupported","tokenOrKey","getToken","getAuthKey","auth","secretKey","onResponse","handleError","stopLatencyMeasure","responseP","handleResponse","then","resolve","result","fulfill","e","errorData","PNSubscribeOperation","statusCode","category","categoryConstants","PNUnknownCategory","startLatencyMeasure","POST","PATCH","DELETE","GETFILE","GET"],"mappings":"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","sourcesContent":["import uuidGenerator from './uuid';\nimport { StatusAnnouncement } from '../flow_interfaces';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\nimport categoryConstants from '../constants/categories';\n\nexport class PubNubError extends Error {\n  constructor(message, status) {\n    super(message);\n    this.name = this.constructor.name;\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  errorPayload.error = true;\n  return errorPayload;\n}\n\nexport function createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction decideURL(endpoint, modules, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return endpoint.postURL(modules, incomingParams);\n  } else if (endpoint.usePatch && endpoint.usePatch(modules, incomingParams)) {\n    return endpoint.patchURL(modules, incomingParams);\n  } else if (endpoint.useGetFile && endpoint.useGetFile(modules, incomingParams)) {\n    return endpoint.getFileURL(modules, incomingParams);\n  } else {\n    return endpoint.getURL(modules, incomingParams);\n  }\n}\n\nexport function generatePNSDK(config: Config): string {\n  if (config.sdkName) {\n    return config.sdkName;\n  }\n\n  let base = `PubNub-JS-${config.sdkFamily}`;\n\n  if (config.partnerId) {\n    base += `-${config.partnerId}`;\n  }\n\n  base += `/${config.getVersion()}`;\n\n  let pnsdkSuffix = config._getPnsdkSuffix(' ');\n\n  if (pnsdkSuffix.length > 0) {\n    base += pnsdkSuffix;\n  }\n\n  return base;\n}\n\nfunction getHttpMethod(modules, endpoint, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return 'POST';\n  } else if (endpoint.usePatch && endpoint.usePatch(modules, incomingParams)) {\n    return 'PATCH';\n  } else if (endpoint.useDelete && endpoint.useDelete(modules, incomingParams)) {\n    return 'DELETE';\n  } else if (endpoint.useGetFile && endpoint.useGetFile(modules, incomingParams)) {\n    return 'GETFILE';\n  } else {\n    return 'GET';\n  }\n}\n\nexport function signRequest(modules, url, outgoingParams, incomingParams, endpoint) {\n  let { config, crypto } = modules;\n\n  let httpMethod = getHttpMethod(modules, endpoint, incomingParams);\n\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\n\n  // This is because of a server-side bug, old publish using post should be deprecated\n  if (endpoint.getOperation() === 'PNPublishOperation' && endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    httpMethod = 'GET';\n  }\n\n  if (httpMethod === 'GETFILE') {\n    httpMethod = 'GET';\n  }\n\n  let signInput = `${httpMethod}\\n${config.publishKey}\\n${url}\\n${utils.signPamFromParams(outgoingParams)}\\n`;\n\n  if (httpMethod === 'POST') {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    if (typeof payload === 'string') {\n      signInput += payload;\n    } else {\n      signInput += JSON.stringify(payload);\n    }\n  } else if (httpMethod === 'PATCH') {\n    let payload = endpoint.patchPayload(modules, incomingParams);\n    if (typeof payload === 'string') {\n      signInput += payload;\n    } else {\n      signInput += JSON.stringify(payload);\n    }\n  }\n\n  let signature = `v2.${crypto.HMACSHA256(signInput)}`;\n  signature = signature.replace(/\\+/g, '-');\n  signature = signature.replace(/\\//g, '_');\n  signature = signature.replace(/=+$/, '');\n\n  outgoingParams.signature = signature;\n}\n\nexport default function (modules, endpoint, ...args) {\n  let { networking, config, telemetryManager, tokenManager } = modules;\n  const requestId = uuidGenerator.createUUID();\n  let callback = null;\n  let promiseComponent = null;\n  let incomingParams = {};\n\n  if (\n    endpoint.getOperation() === operationConstants.PNTimeOperation ||\n    endpoint.getOperation() === operationConstants.PNChannelGroupsOperation\n  ) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  // bridge in Promise support.\n  if (typeof Promise !== 'undefined' && !callback) {\n    promiseComponent = utils.createPromise();\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    if (callback) {\n      return callback(createValidationError(validationResult));\n    } else if (promiseComponent) {\n      promiseComponent.reject(\n        new PubNubError('Validation failed, check status for details', createValidationError(validationResult))\n      );\n      return promiseComponent.promise;\n    }\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n  let url = decideURL(endpoint, modules, incomingParams);\n  let callInstance;\n  let networkingParams = {\n    url,\n    operation: endpoint.getOperation(),\n    timeout: endpoint.getRequestTimeout(modules),\n    headers: endpoint.getRequestHeaders ? endpoint.getRequestHeaders() : {},\n    ignoreBody: typeof endpoint.ignoreBody === 'function' ? endpoint.ignoreBody(modules) : false,\n    forceBuffered:\n      typeof endpoint.forceBuffered === 'function' ? endpoint.forceBuffered(modules, incomingParams) : null,\n  };\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  // Add telemetry information (if there is any available).\n  const telemetryLatencies = telemetryManager.operationsLatencyForRequest();\n  if (Object.keys(telemetryLatencies).length) {\n    outgoingParams = { ...outgoingParams, ...telemetryLatencies };\n  }\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = requestId;\n  }\n\n  if (endpoint.isAuthSupported()) {\n    let tokenOrKey = tokenManager.getToken() || config.getAuthKey();\n\n    if (tokenOrKey) {\n      outgoingParams.auth = tokenOrKey;\n    }\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, outgoingParams, incomingParams, endpoint);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (status.error) {\n      if (endpoint.handleError) {\n        endpoint.handleError(modules, incomingParams, status);\n      }\n      if (callback) {\n        callback(status);\n      } else if (promiseComponent) {\n        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));\n      }\n      return;\n    }\n\n    // Stop endpoint latency tracking.\n    telemetryManager.stopLatencyMeasure(endpoint.getOperation(), requestId);\n\n    let responseP = endpoint.handleResponse(modules, payload, incomingParams);\n\n    if (typeof responseP?.then !== 'function') {\n      responseP = Promise.resolve(responseP);\n    }\n\n    responseP\n      .then((result) => {\n        if (callback) {\n          callback(status, result);\n        } else if (promiseComponent) {\n          promiseComponent.fulfill(result);\n        }\n      })\n      .catch((e) => {\n        if (callback) {\n          let errorData = e;\n\n          if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n            errorData = {\n              statusCode: 400,\n              error: true,\n              operation: endpoint.getOperation(),\n              errorData: e,\n              category: categoryConstants.PNUnknownCategory\n            };\n          }\n\n          callback(errorData, null);\n        } else if (promiseComponent) {\n          promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', e));\n        }\n      });\n  };\n\n  // Start endpoint latency tracking.\n  telemetryManager.startLatencyMeasure(endpoint.getOperation(), requestId);\n\n  if (getHttpMethod(modules, endpoint, incomingParams) === 'POST') {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\n  } else if (getHttpMethod(modules, endpoint, incomingParams) === 'PATCH') {\n    let payload = endpoint.patchPayload(modules, incomingParams);\n    callInstance = networking.PATCH(outgoingParams, payload, networkingParams, onResponse);\n  } else if (getHttpMethod(modules, endpoint, incomingParams) === 'DELETE') {\n    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);\n  } else if (getHttpMethod(modules, endpoint, incomingParams) === 'GETFILE') {\n    callInstance = networking.GETFILE(outgoingParams, networkingParams, onResponse);\n  } else {\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n\n  if (promiseComponent) {\n    return promiseComponent.promise;\n  }\n}\n"],"file":"endpoint.js"}