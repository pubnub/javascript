{"version":3,"sources":["core/components/endpoint.js"],"names":["modules","endpoint","networking","config","callback","promiseComponent","incomingParams","getOperation","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","utils","createPromise","validationResult","validateParams","createValidationError","reject","PubNubError","promise","outgoingParams","prepareParams","console","log","JSON","stringify","url","decideURL","callInstance","networkingParams","operation","timeout","getRequestTimeout","uuid","UUID","pnsdk","generatePNSDK","useInstanceId","instanceid","instanceId","useRequestId","requestid","uuidGenerator","createUUID","isAuthSupported","getAuthKey","auth","secretKey","signRequest","onResponse","status","payload","error","parsedPayload","handleResponse","fulfill","usePost","postPayload","POST","useDelete","DELETE","GET","PNSubscribeOperation","message","name","constructor","Error","createError","errorPayload","type","postURL","getURL","sdkName","base","sdkFamily","partnerId","getVersion","crypto","timestamp","Math","floor","Date","getTime","signInput","subscribeKey","publishKey","signPamFromParams","signature","HMACSHA256","replace"],"mappings":";;;;;;kBA+De,UAASA,OAAT,EAAkBC,QAAlB,EAAqC;AAAA,MAC5CC,UAD4C,GACrBF,OADqB,CAC5CE,UAD4C;AAAA,MAChCC,MADgC,GACrBH,OADqB,CAChCG,MADgC;;AAElD,MAAIC,WAAW,IAAf;AACA,MAAIC,mBAAmB,IAAvB;AACA,MAAIC,iBAAiB,EAArB;;AAEA,MACEL,SAASM,YAAT,OAA4BC,qBAAmBC,eAA/C,IACAR,SAASM,YAAT,OAA4BC,qBAAmBE,wBAFjD,EAGE;AACAN;AACD,GALD,MAKO;AACLE;AACAF;AACD;;AAGD,MAAI,OAAOO,OAAP,KAAmB,WAAnB,IAAkC,CAACP,QAAvC,EAAiD;AAC/CC,uBAAmBO,gBAAMC,aAAN,EAAnB;AACD;;AAED,MAAIC,mBAAmBb,SAASc,cAAT,CAAwBf,OAAxB,EAAiCM,cAAjC,CAAvB;;AAEA,MAAIQ,gBAAJ,EAAsB;AACpB,QAAIV,QAAJ,EAAc;AACZ,aAAOA,SAASY,sBAAsBF,gBAAtB,CAAT,CAAP;AACD,KAFD,MAEO,IAAIT,gBAAJ,EAAsB;AAC3BA,uBAAiBY,MAAjB,CACE,IAAIC,WAAJ,CACE,6CADF,EAEEF,sBAAsBF,gBAAtB,CAFF,CADF;AAMA,aAAOT,iBAAiBc,OAAxB;AACD;AACD;AACD;;AAED,MAAIC,iBAAiBnB,SAASoB,aAAT,CAAuBrB,OAAvB,EAAgCM,cAAhC,CAArB;AACAgB,UAAQC,GAAR,CAAY,sBAAsBC,KAAKC,SAAL,CAAenB,cAAf,CAAlC;AACA,MAAIoB,MAAMC,UAAU1B,QAAV,EAAoBD,OAApB,EAA6BM,cAA7B,CAAV;AACA,MAAIsB,qBAAJ;AACA,MAAIC,mBAAmB;AACrBH,YADqB;AAErBI,eAAW7B,SAASM,YAAT,EAFU;AAGrBwB,aAAS9B,SAAS+B,iBAAT,CAA2BhC,OAA3B;AAHY,GAAvB;;AAMAoB,iBAAea,IAAf,GAAsB9B,OAAO+B,IAA7B;AACAd,iBAAee,KAAf,GAAuBC,cAAcjC,MAAd,CAAvB;;AAEA,MAAIA,OAAOkC,aAAX,EAA0B;AACxBjB,mBAAekB,UAAf,GAA4BnC,OAAOoC,UAAnC;AACD;;AAED,MAAIpC,OAAOqC,YAAX,EAAyB;AACvBpB,mBAAeqB,SAAf,GAA2BC,eAAcC,UAAd,EAA3B;AACD;;AAED,MAAI1C,SAAS2C,eAAT,MAA8BzC,OAAO0C,UAAP,EAAlC,EAAuD;AACrDzB,mBAAe0B,IAAf,GAAsB3C,OAAO0C,UAAP,EAAtB;AACD;;AAED,MAAI1C,OAAO4C,SAAX,EAAsB;AACpBC,gBAAYhD,OAAZ,EAAqB0B,GAArB,EAA0BN,cAA1B;AACD;;AAED,MAAI6B,aAAa,SAAbA,UAAa,CAACC,MAAD,EAA6BC,OAA7B,EAAiD;AAChE,QAAID,OAAOE,KAAX,EAAkB;AAChB,UAAIhD,QAAJ,EAAc;AACZA,iBAAS8C,MAAT;AACD,OAFD,MAEO,IAAI7C,gBAAJ,EAAsB;AAC3BA,yBAAiBY,MAAjB,CACE,IAAIC,WAAJ,CACE,8CADF,EAEEgC,MAFF,CADF;AAMD;AACD;AACD;;AAED,QAAIG,gBAAgBpD,SAASqD,cAAT,CAClBtD,OADkB,EAElBmD,OAFkB,EAGlB7C,cAHkB,CAApB;;AAMA,QAAIF,QAAJ,EAAc;AACZA,eAAS8C,MAAT,EAAiBG,aAAjB;AACD,KAFD,MAEO,IAAIhD,gBAAJ,EAAsB;AAC3BA,uBAAiBkD,OAAjB,CAAyBF,aAAzB;AACD;AACF,GA1BD;;AA4BA,MAAIpD,SAASuD,OAAT,IAAoBvD,SAASuD,OAAT,CAAiBxD,OAAjB,EAA0BM,cAA1B,CAAxB,EAAmE;AACjE,QAAI6C,UAAUlD,SAASwD,WAAT,CAAqBzD,OAArB,EAA8BM,cAA9B,CAAd;AACAsB,mBAAe1B,WAAWwD,IAAX,CACbtC,cADa,EAEb+B,OAFa,EAGbtB,gBAHa,EAIboB,UAJa,CAAf;AAMD,GARD,MAQO,IAAIhD,SAAS0D,SAAT,IAAsB1D,SAAS0D,SAAT,EAA1B,EAAgD;AACrD/B,mBAAe1B,WAAW0D,MAAX,CACbxC,cADa,EAEbS,gBAFa,EAGboB,UAHa,CAAf;AAKD,GANM,MAMA;AACLrB,mBAAe1B,WAAW2D,GAAX,CAAezC,cAAf,EAA+BS,gBAA/B,EAAiDoB,UAAjD,CAAf;AACD;;AAED,MAAIhD,SAASM,YAAT,OAA4BC,qBAAmBsD,oBAAnD,EAAyE;AACvE,WAAOlC,YAAP;AACD;;AAED,MAAIvB,gBAAJ,EAAsB;AACpB,WAAOA,iBAAiBc,OAAxB;AACD;AACF,C;;AAvLD;;;;AACA;;AACA;;;;AACA;;;;AACA;;;;;;;;;;;;IAEMD,W;;;AACJ,uBAAY6C,OAAZ,EAAqBb,MAArB,EAA6B;AAAA;;AAAA,0HACrBa,OADqB;;AAE3B,UAAKC,IAAL,GAAY,MAAKC,WAAL,CAAiBD,IAA7B;AACA,UAAKd,MAAL,GAAcA,MAAd;AACA,UAAKa,OAAL,GAAeA,OAAf;AAJ2B;AAK5B;;;EANuBG,K;;AAS1B,SAASC,WAAT,CAAqBC,YAArB,EAA2CC,IAA3C,EAAiE;AAC/DD,eAAaC,IAAb,GAAoBA,IAApB;AACAD,eAAahB,KAAb,GAAqB,IAArB;AACA,SAAOgB,YAAP;AACD;;AAED,SAASpD,qBAAT,CAA+B+C,OAA/B,EAAwD;AACtD,SAAOI,YAAY,EAAEJ,gBAAF,EAAZ,EAAyB,iBAAzB,CAAP;AACD;;AAED,SAASpC,SAAT,CAAmB1B,QAAnB,EAA6BD,OAA7B,EAAsCM,cAAtC,EAAsD;AACpD,MAAIL,SAASuD,OAAT,IAAoBvD,SAASuD,OAAT,CAAiBxD,OAAjB,EAA0BM,cAA1B,CAAxB,EAAmE;AACjE,WAAOL,SAASqE,OAAT,CAAiBtE,OAAjB,EAA0BM,cAA1B,CAAP;AACD,GAFD,MAEO;AACL,WAAOL,SAASsE,MAAT,CAAgBvE,OAAhB,EAAyBM,cAAzB,CAAP;AACD;AACF;;AAED,SAAS8B,aAAT,CAAuBjC,MAAvB,EAA+C;AAC7C,MAAIA,OAAOqE,OAAX,EAAoB;AAClB,WAAOrE,OAAOqE,OAAd;AACD;;AAED,MAAIC,sBAAoBtE,OAAOuE,SAA/B;;AAEA,MAAIvE,OAAOwE,SAAX,EAAsB;AACpBF,kBAAYtE,OAAOwE,SAAnB;AACD;;AAEDF,gBAAYtE,OAAOyE,UAAP,EAAZ;;AAEA,SAAOH,IAAP;AACD;;AAED,SAASzB,WAAT,CAAqBhD,OAArB,EAA8B0B,GAA9B,EAAmCN,cAAnC,EAAmD;AAAA,MAC3CjB,MAD2C,GACxBH,OADwB,CAC3CG,MAD2C;AAAA,MACnC0E,MADmC,GACxB7E,OADwB,CACnC6E,MADmC;;;AAGjDzD,iBAAe0D,SAAf,GAA2BC,KAAKC,KAAL,CAAW,IAAIC,IAAJ,GAAWC,OAAX,KAAuB,IAAlC,CAA3B;AACA,MAAIC,YAAehF,OAAOiF,YAAtB,UAAuCjF,OAAOkF,UAA9C,UAA6D3D,GAA7D,OAAJ;AACAyD,eAAavE,gBAAM0E,iBAAN,CAAwBlE,cAAxB,CAAb;;AAEA,MAAImE,YAAYV,OAAOW,UAAP,CAAkBL,SAAlB,CAAhB;AACAI,cAAYA,UAAUE,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAAZ;AACAF,cAAYA,UAAUE,OAAV,CAAkB,KAAlB,EAAyB,GAAzB,CAAZ;;AAEArE,iBAAemE,SAAf,GAA2BA,SAA3B;AACD","file":"endpoint.js","sourcesContent":["import uuidGenerator from './uuid';\nimport { StatusAnnouncement } from '../flow_interfaces';\nimport utils from '../utils';\nimport Config from './config';\nimport operationConstants from '../constants/operations';\n\nclass PubNubError extends Error {\n  constructor(message, status) {\n    super(message);\n    this.name = this.constructor.name;\n    this.status = status;\n    this.message = message;\n  }\n}\n\nfunction createError(errorPayload: Object, type: string): Object {\n  errorPayload.type = type;\n  errorPayload.error = true;\n  return errorPayload;\n}\n\nfunction createValidationError(message: string): Object {\n  return createError({ message }, 'validationError');\n}\n\nfunction decideURL(endpoint, modules, incomingParams) {\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    return endpoint.postURL(modules, incomingParams);\n  } else {\n    return endpoint.getURL(modules, incomingParams);\n  }\n}\n\nfunction generatePNSDK(config: Config): string {\n  if (config.sdkName) {\n    return config.sdkName;\n  }\n\n  let base = `PubNub-JS-${config.sdkFamily}`;\n\n  if (config.partnerId) {\n    base += `-${config.partnerId}`;\n  }\n\n  base += `/${config.getVersion()}`;\n\n  return base;\n}\n\nfunction signRequest(modules, url, outgoingParams) {\n  let { config, crypto } = modules;\n\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\n  let signInput = `${config.subscribeKey}\\n${config.publishKey}\\n${url}\\n`;\n  signInput += utils.signPamFromParams(outgoingParams);\n\n  let signature = crypto.HMACSHA256(signInput);\n  signature = signature.replace(/\\+/g, '-');\n  signature = signature.replace(/\\//g, '_');\n\n  outgoingParams.signature = signature;\n}\n\nexport default function(modules, endpoint, ...args) {\n  let { networking, config } = modules;\n  let callback = null;\n  let promiseComponent = null;\n  let incomingParams = {};\n\n  if (\n    endpoint.getOperation() === operationConstants.PNTimeOperation ||\n    endpoint.getOperation() === operationConstants.PNChannelGroupsOperation\n  ) {\n    callback = args[0];\n  } else {\n    incomingParams = args[0];\n    callback = args[1];\n  }\n\n  // bridge in Promise support.\n  if (typeof Promise !== 'undefined' && !callback) {\n    promiseComponent = utils.createPromise();\n  }\n\n  let validationResult = endpoint.validateParams(modules, incomingParams);\n\n  if (validationResult) {\n    if (callback) {\n      return callback(createValidationError(validationResult));\n    } else if (promiseComponent) {\n      promiseComponent.reject(\n        new PubNubError(\n          'Validation failed, check status for details',\n          createValidationError(validationResult)\n        )\n      );\n      return promiseComponent.promise;\n    }\n    return;\n  }\n\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\n  console.log('Incoming params: ' + JSON.stringify(incomingParams));\n  let url = decideURL(endpoint, modules, incomingParams);\n  let callInstance;\n  let networkingParams = {\n    url,\n    operation: endpoint.getOperation(),\n    timeout: endpoint.getRequestTimeout(modules),\n  };\n\n  outgoingParams.uuid = config.UUID;\n  outgoingParams.pnsdk = generatePNSDK(config);\n\n  if (config.useInstanceId) {\n    outgoingParams.instanceid = config.instanceId;\n  }\n\n  if (config.useRequestId) {\n    outgoingParams.requestid = uuidGenerator.createUUID();\n  }\n\n  if (endpoint.isAuthSupported() && config.getAuthKey()) {\n    outgoingParams.auth = config.getAuthKey();\n  }\n\n  if (config.secretKey) {\n    signRequest(modules, url, outgoingParams);\n  }\n\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\n    if (status.error) {\n      if (callback) {\n        callback(status);\n      } else if (promiseComponent) {\n        promiseComponent.reject(\n          new PubNubError(\n            'PubNub call failed, check status for details',\n            status\n          )\n        );\n      }\n      return;\n    }\n\n    let parsedPayload = endpoint.handleResponse(\n      modules,\n      payload,\n      incomingParams\n    );\n\n    if (callback) {\n      callback(status, parsedPayload);\n    } else if (promiseComponent) {\n      promiseComponent.fulfill(parsedPayload);\n    }\n  };\n\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\n    let payload = endpoint.postPayload(modules, incomingParams);\n    callInstance = networking.POST(\n      outgoingParams,\n      payload,\n      networkingParams,\n      onResponse\n    );\n  } else if (endpoint.useDelete && endpoint.useDelete()) {\n    callInstance = networking.DELETE(\n      outgoingParams,\n      networkingParams,\n      onResponse\n    );\n  } else {\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\n  }\n\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\n    return callInstance;\n  }\n\n  if (promiseComponent) {\n    return promiseComponent.promise;\n  }\n}\n"]}