{"version":3,"sources":["core/components/endpoint.js"],"names":["modules","endpoint","networking","config","callback","promiseComponent","incomingParams","getOperation","operationConstants","PNTimeOperation","PNChannelGroupsOperation","Promise","utils","createPromise","validationResult","validateParams","createValidationError","reject","PubNubError","promise","outgoingParams","prepareParams","url","decideURL","callInstance","networkingParams","operation","timeout","getRequestTimeout","uuid","UUID","pnsdk","generatePNSDK","useInstanceId","instanceid","instanceId","useRequestId","requestid","uuidGenerator","createUUID","isAuthSupported","getAuthKey","auth","secretKey","signRequest","onResponse","status","payload","error","parsedPayload","handleResponse","fulfill","usePost","postPayload","POST","useDelete","DELETE","GET","PNSubscribeOperation","message","name","constructor","Error","createError","errorPayload","type","postURL","getURL","sdkName","base","sdkFamily","partnerId","getVersion","crypto","timestamp","Math","floor","Date","getTime","signInput","subscribeKey","publishKey","signPamFromParams","signature","HMACSHA256","replace"],"mappings":"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","file":"endpoint.js","sourcesContent":["import uuidGenerator from './uuid';\r\nimport { StatusAnnouncement } from '../flow_interfaces';\r\nimport utils from '../utils';\r\nimport Config from './config';\r\nimport operationConstants from '../constants/operations';\r\n\r\nclass PubNubError extends Error {\r\n  constructor(message, status) {\r\n    super(message);\r\n    this.name = this.constructor.name;\r\n    this.status = status;\r\n    this.message = message;\r\n  }\r\n}\r\n\r\nfunction createError(errorPayload: Object, type: string): Object {\r\n  errorPayload.type = type;\r\n  errorPayload.error = true;\r\n  return errorPayload;\r\n}\r\n\r\nfunction createValidationError(message: string): Object {\r\n  return createError({ message }, 'validationError');\r\n}\r\n\r\nfunction decideURL(endpoint, modules, incomingParams) {\r\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\r\n    return endpoint.postURL(modules, incomingParams);\r\n  } else {\r\n    return endpoint.getURL(modules, incomingParams);\r\n  }\r\n}\r\n\r\nfunction generatePNSDK(config: Config): string {\r\n  if (config.sdkName) {\r\n    return config.sdkName;\r\n  }\r\n\r\n  let base = `PubNub-JS-${config.sdkFamily}`;\r\n\r\n  if (config.partnerId) {\r\n    base += `-${config.partnerId}`;\r\n  }\r\n\r\n  base += `/${config.getVersion()}`;\r\n\r\n  return base;\r\n}\r\n\r\nfunction signRequest(modules, url, outgoingParams) {\r\n  let { config, crypto } = modules;\r\n\r\n  outgoingParams.timestamp = Math.floor(new Date().getTime() / 1000);\r\n  let signInput = `${config.subscribeKey}\\n${config.publishKey}\\n${url}\\n`;\r\n  signInput += utils.signPamFromParams(outgoingParams);\r\n\r\n  let signature = crypto.HMACSHA256(signInput);\r\n  signature = signature.replace(/\\+/g, '-');\r\n  signature = signature.replace(/\\//g, '_');\r\n\r\n  outgoingParams.signature = signature;\r\n}\r\n\r\nexport default function (modules, endpoint, ...args) {\r\n  let { networking, config } = modules;\r\n  let callback = null;\r\n  let promiseComponent = null;\r\n  let incomingParams = {};\r\n\r\n  if (endpoint.getOperation() === operationConstants.PNTimeOperation || endpoint.getOperation() === operationConstants.PNChannelGroupsOperation) {\r\n    callback = args[0];\r\n  } else {\r\n    incomingParams = args[0];\r\n    callback = args[1];\r\n  }\r\n\r\n  // bridge in Promise support.\r\n  if (typeof Promise !== 'undefined' && !callback) {\r\n    promiseComponent = utils.createPromise();\r\n  }\r\n\r\n  let validationResult = endpoint.validateParams(modules, incomingParams);\r\n\r\n  if (validationResult) {\r\n    if (callback) {\r\n      return callback(createValidationError(validationResult));\r\n    } else if (promiseComponent) {\r\n      promiseComponent.reject(new PubNubError('Validation failed, check status for details', createValidationError(validationResult)));\r\n      return promiseComponent.promise;\r\n    }\r\n    return;\r\n  }\r\n\r\n  let outgoingParams = endpoint.prepareParams(modules, incomingParams);\r\n  let url = decideURL(endpoint, modules, incomingParams);\r\n  let callInstance;\r\n  let networkingParams = { url,\r\n    operation: endpoint.getOperation(),\r\n    timeout: endpoint.getRequestTimeout(modules)\r\n  };\r\n\r\n  outgoingParams.uuid = config.UUID;\r\n  outgoingParams.pnsdk = generatePNSDK(config);\r\n\r\n  if (config.useInstanceId) {\r\n    outgoingParams.instanceid = config.instanceId;\r\n  }\r\n\r\n  if (config.useRequestId) {\r\n    outgoingParams.requestid = uuidGenerator.createUUID();\r\n  }\r\n\r\n  if (endpoint.isAuthSupported() && config.getAuthKey()) {\r\n    outgoingParams.auth = config.getAuthKey();\r\n  }\r\n\r\n  if (config.secretKey) {\r\n    signRequest(modules, url, outgoingParams);\r\n  }\r\n\r\n  let onResponse = (status: StatusAnnouncement, payload: Object) => {\r\n    if (status.error) {\r\n      if (callback) {\r\n        callback(status);\r\n      } else if (promiseComponent) {\r\n        promiseComponent.reject(new PubNubError('PubNub call failed, check status for details', status));\r\n      }\r\n      return;\r\n    }\r\n\r\n    let parsedPayload = endpoint.handleResponse(modules, payload, incomingParams);\r\n\r\n    if (callback) {\r\n      callback(status, parsedPayload);\r\n    } else if (promiseComponent) {\r\n      promiseComponent.fulfill(parsedPayload);\r\n    }\r\n  };\r\n\r\n  if (endpoint.usePost && endpoint.usePost(modules, incomingParams)) {\r\n    let payload = endpoint.postPayload(modules, incomingParams);\r\n    callInstance = networking.POST(outgoingParams, payload, networkingParams, onResponse);\r\n  } else if (endpoint.useDelete && endpoint.useDelete()) {\r\n    callInstance = networking.DELETE(outgoingParams, networkingParams, onResponse);\r\n  } else {\r\n    callInstance = networking.GET(outgoingParams, networkingParams, onResponse);\r\n  }\r\n\r\n  if (endpoint.getOperation() === operationConstants.PNSubscribeOperation) {\r\n    return callInstance;\r\n  }\r\n\r\n  if (promiseComponent) {\r\n    return promiseComponent.promise;\r\n  }\r\n}\r\n"]}