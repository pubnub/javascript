{"version":3,"sources":["core/pubnub-common.js"],"names":["addChannelsChannelGroupConfig","removeChannelsChannelGroupConfig","deleteChannelGroupConfig","listChannelGroupsConfig","listChannelsInChannelGroupConfig","addPushChannelsConfig","removePushChannelsConfig","listPushChannelsConfig","removeDevicePushConfig","presenceLeaveEndpointConfig","presenceWhereNowEndpointConfig","presenceHeartbeatEndpointConfig","presenceGetStateConfig","presenceSetStateConfig","presenceHereNowConfig","auditEndpointConfig","grantEndpointConfig","publishEndpointConfig","historyEndpointConfig","fetchMessagesEndpointConfig","timeEndpointConfig","subscribeEndpointConfig","setup","db","networking","config","_config","crypto","init","modules","timeEndpoint","bind","leaveEndpoint","heartbeatEndpoint","setStateEndpoint","subscribeEndpoint","listenerManager","_listenerManager","subscriptionManager","addListener","removeListener","removeAllListeners","channelGroups","listGroups","listChannels","addChannels","removeChannels","deleteGroup","push","deleteDevice","hereNow","whereNow","getState","setState","adaptStateChange","grant","audit","publish","fire","args","callback","replicate","storeInHistory","history","fetchMessages","time","subscribe","adaptSubscribeChange","unsubscribe","adaptUnsubscribeChange","disconnect","reconnect","destroy","isOffline","unsubscribeAll","stop","getSubscribedChannels","getSubscribedChannelGroups","encrypt","decrypt","getAuthKey","setAuthKey","setCipherKey","getUUID","setUUID","getFilterExpression","setFilterExpression","setHeartbeatInterval","getVersion","announceNetworkDown","restore","announceNetworkUp","OPERATIONS","CATEGORIES"],"mappings":"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","file":"pubnub-common.js","sourcesContent":["/* @flow */\n\nimport uuidGenerator from 'lil-uuid';\n\nimport Config from './components/config';\nimport Crypto from './components/cryptography/index';\nimport SubscriptionManager from './components/subscription_manager';\nimport ListenerManager from './components/listener_manager';\n\nimport endpointCreator from './components/endpoint';\n\nimport * as addChannelsChannelGroupConfig from './endpoints/channel_groups/add_channels';\nimport * as removeChannelsChannelGroupConfig from './endpoints/channel_groups/remove_channels';\nimport * as deleteChannelGroupConfig from './endpoints/channel_groups/delete_group';\nimport * as listChannelGroupsConfig from './endpoints/channel_groups/list_groups';\nimport * as listChannelsInChannelGroupConfig from './endpoints/channel_groups/list_channels';\n\nimport * as addPushChannelsConfig from './endpoints/push/add_push_channels';\nimport * as removePushChannelsConfig from './endpoints/push/remove_push_channels';\nimport * as listPushChannelsConfig from './endpoints/push/list_push_channels';\nimport * as removeDevicePushConfig from './endpoints/push/remove_device';\n\nimport * as presenceLeaveEndpointConfig from './endpoints/presence/leave';\nimport * as presenceWhereNowEndpointConfig from './endpoints/presence/where_now';\nimport * as presenceHeartbeatEndpointConfig from './endpoints/presence/heartbeat';\nimport * as presenceGetStateConfig from './endpoints/presence/get_state';\nimport * as presenceSetStateConfig from './endpoints/presence/set_state';\nimport * as presenceHereNowConfig from './endpoints/presence/here_now';\n\nimport * as auditEndpointConfig from './endpoints/access_manager/audit';\nimport * as grantEndpointConfig from './endpoints/access_manager/grant';\n\nimport * as publishEndpointConfig from './endpoints/publish';\nimport * as historyEndpointConfig from './endpoints/history';\nimport * as fetchMessagesEndpointConfig from './endpoints/fetch_messages';\nimport * as timeEndpointConfig from './endpoints/time';\nimport * as subscribeEndpointConfig from './endpoints/subscribe';\n\nimport OPERATIONS from './constants/operations';\nimport CATEGORIES from './constants/categories';\n\nimport { InternalSetupStruct } from './flow_interfaces';\n\nexport default class {\n\n  _config: Config;\n  _listenerManager: ListenerManager;\n\n  // tell flow about the mounted endpoint\n  time: Function;\n  publish: Function;\n  fire: Function;\n\n  history: Function;\n  fetchMessages: Function;\n\n  //\n  channelGroups: Object;\n  //\n  push: Object;\n  //\n  hereNow: Function;\n  whereNow: Function;\n  getState: Function;\n  setState: Function;\n  //\n  grant: Function;\n  audit: Function;\n  //\n  subscribe: Function;\n  unsubscribe: Function;\n  unsubscribeAll: Function;\n\n  disconnect: Function;\n  reconnect: Function;\n\n\n  destroy: Function;\n  stop: Function;\n\n  getSubscribedChannels: Function;\n  getSubscribedChannelGroups: Function;\n\n  addListener: Function;\n  removeListener: Function;\n  removeAllListeners: Function;\n\n  getAuthKey: Function;\n  setAuthKey: Function;\n\n  setCipherKey: Function;\n  setUUID: Function;\n  getUUID: Function;\n\n  getFilterExpression: Function;\n  setFilterExpression: Function;\n\n  encrypt: Function;\n  decrypt: Function;\n\n  //\n\n  constructor(setup: InternalSetupStruct) {\n    let { db, networking } = setup;\n\n    const config = this._config = new Config({ setup, db });\n    const crypto = new Crypto({ config });\n\n    networking.init(config);\n\n    let modules = { config, networking, crypto };\n\n    const timeEndpoint = endpointCreator.bind(this, modules, timeEndpointConfig);\n    const leaveEndpoint = endpointCreator.bind(this, modules, presenceLeaveEndpointConfig);\n    const heartbeatEndpoint = endpointCreator.bind(this, modules, presenceHeartbeatEndpointConfig);\n    const setStateEndpoint = endpointCreator.bind(this, modules, presenceSetStateConfig);\n    const subscribeEndpoint = endpointCreator.bind(this, modules, subscribeEndpointConfig);\n\n    // managers\n    const listenerManager = this._listenerManager = new ListenerManager();\n\n    const subscriptionManager = new SubscriptionManager({\n      timeEndpoint,\n      leaveEndpoint,\n      heartbeatEndpoint,\n      setStateEndpoint,\n      subscribeEndpoint,\n      crypto: modules.crypto,\n      config: modules.config,\n      listenerManager\n    });\n\n    this.addListener = listenerManager.addListener.bind(listenerManager);\n    this.removeListener = listenerManager.removeListener.bind(listenerManager);\n    this.removeAllListeners = listenerManager.removeAllListeners.bind(listenerManager);\n\n    /* channel groups */\n    this.channelGroups = {\n      listGroups: endpointCreator.bind(this, modules, listChannelGroupsConfig),\n      listChannels: endpointCreator.bind(this, modules, listChannelsInChannelGroupConfig),\n      addChannels: endpointCreator.bind(this, modules, addChannelsChannelGroupConfig),\n      removeChannels: endpointCreator.bind(this, modules, removeChannelsChannelGroupConfig),\n      deleteGroup: endpointCreator.bind(this, modules, deleteChannelGroupConfig)\n    };\n    /* push */\n    this.push = {\n      addChannels: endpointCreator.bind(this, modules, addPushChannelsConfig),\n      removeChannels: endpointCreator.bind(this, modules, removePushChannelsConfig),\n      deleteDevice: endpointCreator.bind(this, modules, removeDevicePushConfig),\n      listChannels: endpointCreator.bind(this, modules, listPushChannelsConfig)\n    };\n    /* presence */\n    this.hereNow = endpointCreator.bind(this, modules, presenceHereNowConfig);\n    this.whereNow = endpointCreator.bind(this, modules, presenceWhereNowEndpointConfig);\n    this.getState = endpointCreator.bind(this, modules, presenceGetStateConfig);\n    this.setState = subscriptionManager.adaptStateChange.bind(subscriptionManager);\n    /* PAM */\n    this.grant = endpointCreator.bind(this, modules, grantEndpointConfig);\n    this.audit = endpointCreator.bind(this, modules, auditEndpointConfig);\n    //\n    this.publish = endpointCreator.bind(this, modules, publishEndpointConfig);\n\n    this.fire = (args, callback) => {\n      args.replicate = false;\n      args.storeInHistory = false;\n      return this.publish(args, callback);\n    };\n\n    this.history = endpointCreator.bind(this, modules, historyEndpointConfig);\n    this.fetchMessages = endpointCreator.bind(this, modules, fetchMessagesEndpointConfig);\n\n    this.time = timeEndpoint;\n\n    // subscription related methods\n    this.subscribe = subscriptionManager.adaptSubscribeChange.bind(subscriptionManager);\n    this.unsubscribe = subscriptionManager.adaptUnsubscribeChange.bind(subscriptionManager);\n    this.disconnect = subscriptionManager.disconnect.bind(subscriptionManager);\n    this.reconnect = subscriptionManager.reconnect.bind(subscriptionManager);\n\n    this.destroy = (isOffline: boolean) => {\n      subscriptionManager.unsubscribeAll(isOffline);\n      subscriptionManager.disconnect();\n    };\n\n    // --- deprecated  ------------------\n    this.stop = this.destroy; // --------\n    // --- deprecated  ------------------\n\n    this.unsubscribeAll = subscriptionManager.unsubscribeAll.bind(subscriptionManager);\n\n    this.getSubscribedChannels = subscriptionManager.getSubscribedChannels.bind(subscriptionManager);\n    this.getSubscribedChannelGroups = subscriptionManager.getSubscribedChannelGroups.bind(subscriptionManager);\n\n    // mount crypto\n    this.encrypt = crypto.encrypt.bind(crypto);\n    this.decrypt = crypto.decrypt.bind(crypto);\n\n    /* config */\n    this.getAuthKey = modules.config.getAuthKey.bind(modules.config);\n    this.setAuthKey = modules.config.setAuthKey.bind(modules.config);\n    this.setCipherKey = modules.config.setCipherKey.bind(modules.config);\n    this.getUUID = modules.config.getUUID.bind(modules.config);\n    this.setUUID = modules.config.setUUID.bind(modules.config);\n    this.getFilterExpression = modules.config.getFilterExpression.bind(modules.config);\n    this.setFilterExpression = modules.config.setFilterExpression.bind(modules.config);\n\n    this.setHeartbeatInterval = modules.config.setHeartbeatInterval.bind(modules.config);\n  }\n\n\n  getVersion(): string {\n    return this._config.getVersion();\n  }\n\n  // network hooks to indicate network changes\n  networkDownDetected() {\n    this._listenerManager.announceNetworkDown();\n\n    if (this._config.restore) {\n      this.disconnect();\n    } else {\n      this.destroy(true);\n    }\n  }\n\n  networkUpDetected() {\n    this._listenerManager.announceNetworkUp();\n    this.reconnect();\n  }\n\n\n  static generateUUID(): string {\n    return uuidGenerator();\n  }\n\n  static OPERATIONS = OPERATIONS;\n  static CATEGORIES = CATEGORIES;\n\n}\n"]}