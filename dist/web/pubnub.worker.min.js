!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,t,n,r){return new(n||(n=Promise))((function(s,i){function o(e){try{u(r.next(e))}catch(e){i(e)}}function a(e){try{u(r.throw(e))}catch(e){i(e)}}function u(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}u((r=r.apply(e,t||[])).next())}))}var t;"function"==typeof SuppressedError&&SuppressedError,function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.LOCAL="LOCAL"}(t||(t={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var r,s,i={exports:{}};
/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */r=i,function(e){var t="0.1.0",n={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function r(){var e,t,n="";for(e=0;e<32;e++)t=16*Math.random()|0,8!==e&&12!==e&&16!==e&&20!==e||(n+="-"),n+=(12===e?4:16===e?3&t|8:t).toString(16);return n}function s(e,t){var r=n[t||"all"];return r&&r.test(e)||!1}r.isUUID=s,r.VERSION=t,e.uuid=r,e.isUUID=s}(s=i.exports),null!==r&&(r.exports=s.uuid);var o=n(i.exports),a={createUUID:()=>o.uuid?o.uuid():o()};const u=new Map,c=new Map,l=new Map;let d=0;const h=new Map,p=new Map,f={maxConcurrent:0,totalConnections:0,connectionReuse:0,newConnections:0},b=[];let g=0;const y={maxQueueDepth:0,totalQueued:0,heartbeatDelays:[],requestOrdering:new Map},m=[],q={total:0,success:0,failed:0,byType:{heartbeat:{total:0,success:0,failed:0},subscribe:{total:0,success:0,failed:0},leave:{total:0,success:0,failed:0},other:{total:0,success:0,failed:0}}},v=e=>(e.path.includes("/subscribe/")||e.path.includes("/heartbeat")||e.path.includes("/leave")||console.log("[getRequestType] Unrecognized request path:",e.path),e.path.includes("/subscribe/")?"subscribe":e.path.includes("/heartbeat")?"heartbeat":e.path.includes("/leave")?"leave":"other");let I;I||(I=setInterval((()=>{const e=Date.now(),t=Array.from(p.entries()).map((([t,n])=>{const r=u.get(t);return{id:t,url:(null==r?void 0:r.url)||"unknown",type:(null==r?void 0:r.requestType)||"unknown",channels:(null==r?void 0:r.channels)||[],duration:e-n.startTime,startTime:n.startTime}})).sort(((e,t)=>t.startTime-e.startTime)),n=b.map((t=>{const n=u.get(t.requestId);return{id:t.requestId,url:(null==n?void 0:n.url)||"unknown",type:t.type,channels:(null==n?void 0:n.channels)||[],queueTime:e-t.queuedAt,queuedAt:t.queuedAt,order:t.order}})).sort(((e,t)=>e.order-t.order)),r={timestamp:(new Date).toISOString(),network:{pendingRequests:l.size,activeConnections:p.size,maxConcurrent:f.maxConcurrent,totalRequests:u.size,browserQueueEstimate:Math.max(0,p.size-6),executedRequests:{total:q.total,success:q.success,failed:q.failed,successRate:q.total>0?Math.round(q.success/q.total*100):0,byType:q.byType}},queue:{currentDepth:b.length,maxDepth:y.maxQueueDepth,totalQueued:y.totalQueued,avgHeartbeatDelay:y.heartbeatDelays.length>0?y.heartbeatDelays.reduce(((e,t)=>e+t),0)/y.heartbeatDelays.length:0},heartbeats:{pendingTimers:Array.from(c.values()).filter((e=>!e.completedAt&&!e.skipped)).length,activeRequests:Array.from(c.values()).filter((e=>e.actualFiredAt&&!e.completedAt&&!e.skipped)).length,queuedTimers:Array.from(c.values()).filter((e=>e.scheduledAt&&!e.actualFiredAt&&!e.skipped)).length,scheduled:Array.from(c.values()).filter((e=>!e.completedAt&&!e.skipped)).length,completed:Array.from(c.values()).filter((t=>t.completedAt&&!t.skipped&&e-t.completedAt<5e3)).length,skipped:Array.from(c.values()).filter((t=>t.skipped&&t.completedAt&&e-t.completedAt<5e3)).length,totalTracked:c.size,breakdown:{pending:Array.from(c.values()).filter((e=>!e.completedAt&&!e.skipped)).length,completedWithinMinute:Array.from(c.values()).filter((t=>t.completedAt&&!t.skipped&&e-t.completedAt<6e4)).length,completedOlderThanMinute:Array.from(c.values()).filter((t=>t.completedAt&&!t.skipped&&e-t.completedAt>=6e4)).length,skippedTotal:Array.from(c.values()).filter((e=>e.skipped)).length}},requestTypes:{heartbeat:Array.from(u.values()).filter((e=>"heartbeat"===e.requestType)).length,subscribe:Array.from(u.values()).filter((e=>"subscribe"===e.requestType)).length,leave:Array.from(u.values()).filter((e=>"leave"===e.requestType)).length,other:Array.from(u.values()).filter((e=>"other"===e.requestType)).length},activeRequests:t.slice(0,20),queuedRequests:n.slice(0,20),executedRequests:m.slice(-50)};Date.now()%1e4<1e3&&console.log("[QueueMetrics] Current state:",{currentDepth:b.length,maxDepth:y.maxQueueDepth,totalQueued:y.totalQueued,avgHeartbeatDelay:r.queue.avgHeartbeatDelay,recentDelays:y.heartbeatDelays.slice(-5)}),T("MetricsSummary",r);const s=Date.now()-3e5;for(const[e,t]of u.entries())t.queuedAt<s&&u.delete(e);for(const[e,t]of c.entries())t.scheduledAt<s&&c.delete(e)}),1e3));const w=e=>{const t={totalDuration:(e.fetchCompletedAt||Date.now())-e.queuedAt,fetchDuration:e.fetchStartedAt&&e.fetchCompletedAt?e.fetchCompletedAt-e.fetchStartedAt:void 0,queueTime:e.fetchStartedAt?e.fetchStartedAt-e.queuedAt:void 0,timerToFetchDelay:e.timerToFetchDelay,status:e.status,error:e.error,queueDepth:e.queueDepthAtStart,concurrent:e.concurrentRequestsAtStart,url:e.url,channels:e.channels,sequence:d++};console.log(`[NetworkMetrics] ${e.requestType} request ${e.requestId}:`,t),T("network-metrics",{type:e.requestType,requestId:e.requestId,metrics:t})},T=(e,t)=>{for(const[n,r]of h.entries())try{r.postMessage({type:"metrics-broadcast",eventType:e,metrics:t,timestamp:(new Date).toISOString()})}catch(e){console.error(`Failed to send metrics to ${n}, removing`),h.delete(n)}console.log(`[${e}]`,t)},A=new Map,k={},D=a.createUUID(),$=new Map,O={},S={},E={},R={},j={},x={};self.onconnect=e=>{Te("New PubNub Client connected to the Subscription Shared Worker."),e.ports.forEach((e=>{e.start(),e.onmessage=t=>{if(t.data&&"object"==typeof t.data&&"metrics-client-register"===t.data.type){const n=t.data.clientId;return h.set(n,e),console.log(`Metrics client registered: ${n}`),void e.postMessage({type:"metrics-client-registered",clientId:n})}if(!de(t))return;const n=t.data;if("client-register"===n.type)n.port=e,ee(n),Te(`Client '${n.clientIdentifier}' registered with '${D}' shared worker`);else if("client-update"===n.type)te(n);else if("client-unregister"===n.type)ne(n);else if("client-pong"===n.type)ie(n);else if("send-request"===n.type)if(n.request.path.startsWith("/v2/subscribe")){const e=re(n),t=O[n.clientIdentifier];if(t){const r=we(t);let s=[];if(A.has(r)&&(s=A.get(r)[0]),s.push([t,n]),A.has(r)&&e&&(clearTimeout(A.get(r)[1]),A.delete(r)),!A.has(r)){const e=setTimeout((()=>{C(s,n),A.delete(r)}),50);A.set(r,[s,e])}}}else if(n.request.path.endsWith("/heartbeat")){se(n);const e=Date.now(),t=`hb-direct-${n.clientIdentifier}-${e}`,r={scheduledAt:e,expectedFireAt:e,actualFiredAt:e,queueDepthAtFire:l.size};c.set(t,r),K(n,!0,!1,r)}else F(n);else"cancel-request"===n.type&&L(n)},e.postMessage({type:"shared-worker-connected"})}))};const C=(e,t)=>{const n=_(t),r=O[t.clientIdentifier];r&&(e=e.filter((e=>e[0].clientIdentifier!==r.clientIdentifier)),P(r,t,n,!0),e.forEach((([e,t])=>P(e,t,n,!1))))},P=(e,t,n,r)=>{var s;let i=!1;if(r||"string"==typeof n||(n=n.identifier),e.subscription&&(i="0"===e.subscription.timetoken),"string"==typeof n){const r=x[n];if(e){if(e.subscription&&(e.subscription.refreshTimestamp=Date.now(),e.subscription.timetoken=r.timetoken,e.subscription.region=r.region,e.subscription.serviceRequestId=n),!i)return;const o=(new TextEncoder).encode(`{"t":{"t":"${r.timetoken}","r":${null!==(s=r.region)&&void 0!==s?s:"0"}},"m":[]}`),a=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${o.length}`}),u=new Response(o,{status:200,headers:a}),c=Y([u,o]);c.url=`${t.request.origin}${t.request.path}`,c.clientIdentifier=t.clientIdentifier,c.identifier=t.request.identifier,J(e,c)}return}t.request.cancellable&&$.set(n.identifier,new AbortController);const o=x[n.identifier],{timetokenOverride:a,regionOverride:u}=o,c="0"===o.timetoken;Te(`'${Object.keys(x).length}' subscription request currently active.`);for(const e of N(n.identifier))Te({messageType:"network-request",message:n});M(n,(()=>N(n.identifier)),((e,r,s)=>{X(e,r,s,t.request),z(e,n.identifier)}),((e,r,s)=>{X(e,r,null,t.request,Z(s)),z(e,n.identifier)}),(e=>{let t=e;return c&&a&&"0"!==a&&(t=G(t,a,u)),t}))},G=(e,t,n)=>{if(void 0===t||"0"===t||e[0].status>=400)return e;let r;const s=e[0];let i=s,o=e[1];try{r=JSON.parse((new TextDecoder).decode(o))}catch(t){return Te(`Subscribe response parse error: ${t}`),e}r.t.t=t,n&&(r.t.r=parseInt(n,10));try{if(o=(new TextEncoder).encode(JSON.stringify(r)).buffer,o.byteLength){const e=new Headers(s.headers);e.set("Content-Length",`${o.byteLength}`),i=new Response(o,{status:s.status,statusText:s.statusText,headers:e})}}catch(t){return Te(`Subscribe serialization error: ${t}`),e}return o.byteLength>0?[i,o]:e},K=(e,t=!0,n=!1,r)=>{var s,i;const o=Date.now();console.log("[HeartbeatRequest] Processing heartbeat event:",{clientId:e.clientIdentifier,actualRequest:t,outOfOrder:n,pendingRequests:l.size,timestamp:new Date(o).toISOString()});const a=O[e.clientIdentifier],u=B(e,t,n);if(!a)return void console.warn(`[HeartbeatRequest] No client found for ${e.clientIdentifier}`);const d=`${a.userId}_${null!==(s=ve(a))&&void 0!==s?s:""}`,h=E[a.subscriptionKey],p=(null!=h?h:{})[d];if(!u){let t,n,s=`Previous heartbeat request has been sent less than ${a.heartbeatInterval} seconds ago. Skipping...`,o="too_frequent";if((!a.heartbeat||0===a.heartbeat.channels.length&&0===a.heartbeat.channelGroups.length)&&(s=`${a.clientIdentifier} doesn't have subscriptions to non-presence channels. Skipping...`,o="no_channels"),Te(s),r){r.skipped=!0,r.skipReason=o,r.completedAt=Date.now();const e={clientId:a.clientIdentifier,reason:o,metricsId:null===(i=Object.entries(c).find((([e,t])=>t===r)))||void 0===i?void 0:i[0],timestamp:(new Date).toISOString()};console.log("[HeartbeatMetrics] Heartbeat skipped:",e),T("HeartbeatSkipped",e)}if(p&&p.response&&([t,n]=p.response),!t){n=(new TextEncoder).encode('{ "status": 200, "message": "OK", "service": "Presence" }').buffer;const e=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${n.byteLength}`});t=new Response(n,{status:200,headers:e})}const u=Y([t,n]);return u.url=`${e.request.origin}${e.request.path}`,u.clientIdentifier=e.clientIdentifier,u.identifier=e.request.identifier,void J(a,u)}Te("Started heartbeat request.");for(const t of fe(e))Te({messageType:"network-request",message:u});M(u,(()=>[a]),((t,n,s)=>{p&&(p.response=s),r&&!r.completedAt&&(r.completedAt=Date.now(),r.fetchCompletedAt=Date.now()),X(t,n,s,e.request),s[0].status>=400&&s[0].status<500&&ce(a)}),((t,n,s)=>{r&&!r.completedAt&&(r.completedAt=Date.now(),r.error=s instanceof Error?s.message:String(s)),X(t,n,null,e.request,Z(s))})),n||ue(a)},F=(e,t,n)=>{var r,s,i;const o=null!=t?t:O[e.clientIdentifier],a=V(e,t);if(!o)return;const{subscription:u,heartbeat:c}=o,l=null!=n?n:null==u?void 0:u.serviceRequestId;if(u&&0===u.channels.length&&0===u.channelGroups.length&&(u.channelGroupQuery="",u.path="",u.previousTimetoken="0",u.refreshTimestamp=Date.now(),u.timetoken="0",delete u.region,delete u.serviceRequestId,delete u.request),E[o.subscriptionKey]&&c&&0===c.channels.length&&0===c.channelGroups.length){const e=null!==(r=E[i=o.subscriptionKey])&&void 0!==r?r:E[i]={},t=`${o.userId}_${null!==(s=ve(o))&&void 0!==s?s:""}`;e[t]&&e[t].clientIdentifier===o.clientIdentifier&&delete e[t].clientIdentifier,delete c.heartbeatEvent,ce(o)}if(!a){const t=(new TextEncoder).encode('{"status": 200, "action": "leave", "message": "OK", "service":"Presence"}'),n=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${t.length}`}),r=new Response(t,{status:200,headers:n}),s=Y([r,t]);return s.url=`${e.request.origin}${e.request.path}`,s.clientIdentifier=e.clientIdentifier,s.identifier=e.request.identifier,void J(o,s)}Te("Started leave request.");for(const n of be(e,t))Te({messageType:"network-request",message:a});if(M(a,(()=>[o]),((t,n,r)=>{X(t,n,r,e.request)}),((t,n,r)=>{X(t,n,null,e.request,Z(r))})),void 0===l)return;const d=N(l);d.forEach((e=>{e&&e.subscription&&delete e.subscription.serviceRequestId})),W(l),U(d)},L=e=>{const t=O[e.clientIdentifier];if(!t||!t.subscription)return;const n=t.subscription.serviceRequestId;t&&n&&(delete t.subscription.serviceRequestId,t.subscription.request&&t.subscription.request.identifier===e.identifier&&delete t.subscription.request,W(n))},U=e=>{let t,n;for(const r of e)if(r.subscription&&r.subscription.request){n=r.subscription.request,t=r;break}if(!n||!t)return;const r={type:"send-request",clientIdentifier:t.clientIdentifier,subscriptionKey:t.subscriptionKey,request:n};C([[t,r]],r)},M=(t,n,r,s,i)=>{var o,a;const c={requestId:t.identifier,requestType:v(t),url:`${t.origin||""}${t.path}`,method:t.method,queuedAt:Date.now(),queueDepthAtStart:l.size,concurrentRequestsAtStart:l.size};if(t.queryParameters){const e=t.queryParameters;if(e["channel-group"]&&(c.channelGroups=e["channel-group"].split(",")),t.path.includes("/v2/subscribe/")){const e=t.path.split("/"),n=e.indexOf("subscribe")+2;n<e.length&&(c.channels=decodeURIComponent(e[n]).split(","))}}l.set(t.identifier,c),u.set(t.identifier,c);const d=g++;b.push({requestId:t.identifier,type:c.requestType,queuedAt:c.queuedAt,order:d}),y.totalQueued++,y.maxQueueDepth=Math.max(y.maxQueueDepth,b.length),y.requestOrdering.set(t.identifier,{queueOrder:d,executionOrder:-1}),b.length>1&&console.log(`[QueueMetrics] Request queued: ${c.requestType}`,{currentDepth:b.length,maxDepth:y.maxQueueDepth,totalQueued:y.totalQueued}),"heartbeat"===c.requestType&&console.log(`[NetworkTiming] Heartbeat request ${t.identifier} queued:`,{queueDepth:c.queueDepthAtStart,concurrent:c.concurrentRequestsAtStart,queuePosition:d,url:c.url,channels:(null===(o=c.channels)||void 0===o?void 0:o.length)||0,channelGroups:(null===(a=c.channelGroups)||void 0===a?void 0:a.length)||0}),e(void 0,void 0,void 0,(function*(){var e;const o=H(t);c.fetchStartedAt=Date.now();const a=c.fetchStartedAt-c.queuedAt,u=y.requestOrdering.get(t.identifier);if(u){u.executionOrder=g++;const e=u.executionOrder-u.queueOrder;"heartbeat"===c.requestType&&e>5&&console.warn(`[RequestQueue] Heartbeat executed out of order by ${e} positions`,{requestId:t.identifier,queueOrder:u.queueOrder,executionOrder:u.executionOrder})}const d=b.findIndex((e=>e.requestId===t.identifier));-1!==d&&b.splice(d,1),"heartbeat"===c.requestType&&(y.heartbeatDelays.push(a),y.heartbeatDelays.length>100&&y.heartbeatDelays.shift(),a>100&&console.warn(`[NetworkTiming] Heartbeat delayed in queue: ${a}ms`,{requestId:t.identifier,queueDepth:l.size,queueDelay:a,remainingInQueue:b.length})),!t.origin||new URL(t.origin).hostname,p.set(t.identifier,{startTime:Date.now(),requestId:t.identifier}),f.totalConnections++,f.maxConcurrent=Math.max(f.maxConcurrent,p.size),p.size>6&&console.warn(`[ConnectionPool] High concurrent connections: ${p.size}`,{requestType:c.requestType,requestId:t.identifier,activeRequests:Array.from(p.keys())}),Promise.race([fetch(o,{signal:null===(e=$.get(t.identifier))||void 0===e?void 0:e.signal,keepalive:!0}),Q(t.identifier,t.timeout)]).then((e=>e.arrayBuffer().then((t=>(c.responseSize=t.byteLength,c.status=e.status,[e,t]))))).then((e=>i?i(e):e)).then((e=>{c.fetchCompletedAt=Date.now(),l.delete(t.identifier),p.delete(t.identifier),q.total++,q.success++;const s=c.requestType||"other";q.byType[s].total++,q.byType[s].success++,m.push({id:t.identifier,url:c.url,type:c.requestType,duration:c.fetchCompletedAt-c.queuedAt,status:c.status||200,datetime:(new Date).toISOString(),error:c.error}),m.length>50&&m.shift(),w(c);const i=n();0!==i.length&&r(i,o,e)})).catch((e=>{c.fetchCompletedAt=Date.now(),c.error=e instanceof Error?e.message:String(e),l.delete(t.identifier),p.delete(t.identifier),q.total++,q.failed++;const r=c.requestType||"other";q.byType[r].total++,q.byType[r].failed++,m.push({id:t.identifier,url:c.url,type:c.requestType,duration:Date.now()-c.queuedAt,status:"error",datetime:(new Date).toISOString(),error:c.error||"Unknown error"}),m.length>50&&m.shift(),w(c);const i=n();if(0===i.length)return;let a=e;if("string"==typeof e){const t=e.toLowerCase();a=new Error(e),!t.includes("timeout")&&t.includes("cancel")&&(a.name="AbortError")}if(c.error&&c.error.toLowerCase().includes("timeout")){const e={requestType:c.requestType,requestId:t.identifier,totalDuration:c.fetchCompletedAt-c.queuedAt,queueTime:c.fetchStartedAt?c.fetchStartedAt-c.queuedAt:"unknown",networkTime:c.fetchStartedAt?c.fetchCompletedAt-c.fetchStartedAt:"unknown",concurrentRequests:c.concurrentRequestsAtStart,activeConnectionsNow:p.size,channels:c.channels,channelGroups:c.channelGroups,url:c.url};if(console.error(`[NetworkTimeout] Request timed out after ${c.fetchCompletedAt-c.queuedAt}ms:`,e),T("NetworkTimeout",e),"heartbeat"===c.requestType){const e={pendingRequests:Array.from(l.entries()).map((([e,t])=>({id:e,type:t.requestType,queuedFor:Date.now()-t.queuedAt,started:!!t.fetchStartedAt}))),activeConnections:p.size,requestQueue:b.map((e=>({type:e.type,waitingFor:Date.now()-e.queuedAt})))};console.error("[NetworkTimeout] Current system state at heartbeat timeout:",e),T("NetworkTimeout",Object.assign({event:"heartbeat-timeout-state"},e))}}s(i,o,a)}))}))},W=e=>{if(0===N(e).length){const t=$.get(e);$.delete(e),delete x[e],t&&t.abort("Cancel request")}},Q=(e,t)=>new Promise(((n,r)=>{const s=setTimeout((()=>{$.delete(e),clearTimeout(s),r(new Error("Request timeout"))}),1e3*t)})),N=e=>Object.values(O).filter((t=>void 0!==t&&void 0!==t.subscription&&t.subscription.serviceRequestId===e)),z=(e,t)=>{delete x[t],e.forEach((e=>{e.subscription&&(delete e.subscription.request,delete e.subscription.serviceRequestId)}))},H=e=>{let t;const n=e.queryParameters;let r=e.path;if(e.headers){t={};for(const[n,r]of Object.entries(e.headers))t[n]=r}return n&&0!==Object.keys(n).length&&(r=`${r}?${ke(n)}`),new Request(`${e.origin}${r}`,{method:e.method,headers:t,redirect:"follow"})},_=e=>{var t,n,r,s,i;const o=O[e.clientIdentifier],u=o.subscription,c=pe(u.timetoken,e),l=a.createUUID(),d=Object.assign({},e.request);let h,p,f;if(c.length>1){const i=he(c,e);if(i){const e=x[i],{channels:n,channelGroups:r}=null!==(t=o.subscription)&&void 0!==t?t:{channels:[],channelGroups:[]};if((!(n.length>0)||me(e.channels,n))&&(!(r.length>0)||me(e.channelGroups,r)))return i}const a=(null!==(n=R[o.subscriptionKey])&&void 0!==n?n:{})[o.userId],b={},g=new Set(u.channelGroups),y=new Set(u.channels);a&&u.objectsWithState.length&&u.objectsWithState.forEach((e=>{const t=a[e];t&&(b[e]=t)}));for(const e of c){const{subscription:t}=e;if(!t)continue;if(t.timetoken){let e=!p;e||"0"===t.timetoken||("0"===p?e=!0:t.timetoken<p&&(e=t.refreshTimestamp>h)),e&&(h=t.refreshTimestamp,p=t.timetoken,f=t.region)}t.channelGroups.forEach(g.add,g),t.channels.forEach(y.add,y);const n=t.serviceRequestId;t.serviceRequestId=l,n&&x[n]&&W(n),a&&t.objectsWithState.forEach((e=>{const t=a[e];t&&!b[e]&&(b[e]=t)}))}const m=null!==(r=x[l])&&void 0!==r?r:x[l]={requestId:l,timetoken:null!==(s=d.queryParameters.tt)&&void 0!==s?s:"0",channelGroups:[],channels:[]};if(y.size){m.channels=Array.from(y).sort();const e=d.path.split("/");e[4]=m.channels.join(","),d.path=e.join("/")}if(g.size&&(m.channelGroups=Array.from(g).sort(),d.queryParameters["channel-group"]=m.channelGroups.join(",")),Object.keys(b).length&&(d.queryParameters.state=JSON.stringify(b)),d.queryParameters&&d.queryParameters.auth){const e=Ie(c);e&&(d.queryParameters.auth=e)}}else x[l]={requestId:l,timetoken:null!==(i=d.queryParameters.tt)&&void 0!==i?i:"0",channelGroups:u.channelGroups,channels:u.channels};x[l]&&(d.queryParameters&&void 0!==d.queryParameters.tt&&void 0!==d.queryParameters.tr&&(x[l].region=d.queryParameters.tr),(!x[l].timetokenOverride||"0"!==x[l].timetokenOverride&&p&&"0"!==p)&&(x[l].timetokenOverride=p,x[l].regionOverride=f)),u.serviceRequestId=l,d.identifier=l;const b=c.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");if(b.length>0)for(const e of c)Ae(x[l],`Started aggregated request for clients: ${b}`,e);return d},B=(e,t,n)=>{var r,s,i,o,a;const u=O[e.clientIdentifier],c=fe(e),l=Object.assign({},e.request);if(!u||!u.heartbeat)return;const d=null!==(r=E[a=u.subscriptionKey])&&void 0!==r?r:E[a]={},h=`${u.userId}_${null!==(s=ve(u))&&void 0!==s?s:""}`,p=[...u.heartbeat.channelGroups],f=[...u.heartbeat.channels];let b,g,y=!1;if(d[h]){const{createdByActualRequest:e,channels:r,channelGroups:s,response:i}=d[h];!e&&t&&(d[h].createdByActualRequest=!0,d[h].timestamp=Date.now(),n=!0),b=null!==(o=u.heartbeat.presenceState)&&void 0!==o?o:{},g=me(r,f)&&me(s,p),i&&(y=i[0].status>=400)}else d[h]={createdByActualRequest:t,channels:f,channelGroups:p,clientIdentifier:u.clientIdentifier,timestamp:Date.now()},b=null!==(i=u.heartbeat.presenceState)&&void 0!==i?i:{},g=!1;let m=u.heartbeatInterval;for(const e of c)e.heartbeatInterval&&(m=Math.min(m,e.heartbeatInterval));if(g&&d[h].clientIdentifier){const e=d[h].timestamp+1e3*m,t=Date.now();if(!n&&!y&&t<e){const n=.05*m*1e3;if(m-n<=3)return;if(e-t>n)return}}delete d[h].response,d[h].clientIdentifier=u.clientIdentifier;for(const t of c){const{heartbeat:n}=t;void 0!==n&&t.clientIdentifier!==e.clientIdentifier&&(n.presenceState&&(b=Object.assign(Object.assign({},b),n.presenceState)),p.push(...n.channelGroups.filter((e=>!p.includes(e)))),f.push(...n.channels.filter((e=>!f.includes(e)))))}d[h].channels=f,d[h].channelGroups=p,n||(d[h].timestamp=Date.now());for(const e in Object.keys(b))f.includes(e)||p.includes(e)||delete b[e];if(0!==f.length||0!==p.length){if(f.length||p.length){const e=l.path.split("/");e[6]=f.length?f.join(","):",",l.path=e.join("/")}if(p.length&&(l.queryParameters["channel-group"]=p.join(",")),Object.keys(b).length?l.queryParameters.state=JSON.stringify(b):delete l.queryParameters.state,c.length>1&&l.queryParameters&&l.queryParameters.auth){const e=Ie(c);e&&(l.queryParameters.auth=e)}return l}},V=(e,t)=>{var n;const r=null!=t?t:O[e.clientIdentifier],s=be(e,t);let i=ye(e.request),o=ge(e.request);const a=Object.assign({},e.request);if(r&&r.subscription){const{subscription:e}=r;if(o.length){e.channels=e.channels.filter((e=>!o.includes(e)));const t=e.path.split("/");if(","!==t[4]){const n=t[4].split(",").filter((e=>!o.includes(e)));t[4]=n.length?n.join(","):",",e.path=t.join("/")}}if(i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))),e.channelGroupQuery.length>0)){const t=e.channelGroupQuery.split(",").filter((e=>!i.includes(e)));e.channelGroupQuery=t.length?t.join(","):""}}if(r&&r.heartbeat){const{heartbeat:e}=r;o.length&&(e.channels=e.channels.filter((e=>!o.includes(e)))),i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))))}for(const t of s){const n=t.subscription;void 0!==n&&(t.clientIdentifier!==e.clientIdentifier&&(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")&&!n.channels.includes(e)))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")&&!n.channelGroups.includes(e))))))}const u=o.length+i.length;if(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")))),0!==o.length||0!==i.length){if(r&&E[r.subscriptionKey]&&(o.length||i.length)){const e=E[r.subscriptionKey],t=`${r.userId}_${null!==(n=ve(r))&&void 0!==n?n:""}`;if(e[t]){let{channels:n,channelGroups:r}=e[t];i.length&&(r=r.filter((e=>!o.includes(e)))),o.length&&(n=n.filter((e=>!o.includes(e)))),e[t].channelGroups=r,e[t].channels=n}}if(o.length){const e=a.path.split("/");e[6]=o.join(","),a.path=e.join("/")}if(i.length&&(a.queryParameters["channel-group"]=i.join(",")),s.length>1&&a.queryParameters&&a.queryParameters.auth){const e=Ie(s);e&&(a.queryParameters.auth=e)}return a}if(r&&r.workerLogVerbosity){const e=s.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");Te(u>0?"Leaving only presence channels which doesn't require presence leave. Ignoring leave request.":`Specified channels and groups still in use by other clients: ${e}. Ignoring leave request.`)}},J=(e,t)=>{var n;const r=(null!==(n=j[e.subscriptionKey])&&void 0!==n?n:{})[e.clientIdentifier];if(!r)return!1;try{return r.postMessage(t),!0}catch(t){e.workerLogVerbosity&&console.error(`[SharedWorker] Unable send message using message port: ${t}`)}return!1},X=(e,t,n,r,s)=>{var i,o;if(0===e.length)return;if(!s&&!n)return;const a=e.some((e=>e&&e.workerLogVerbosity)),u=null!==(i=j[e[0].subscriptionKey])&&void 0!==i?i:{},c=r.path.startsWith("/v2/subscribe");!s&&n&&(s=n[0].status>=400?Z(void 0,n):Y(n));const l={};let d,h=200;if(n){d=n[1].byteLength>0?n[1]:void 0;const{headers:e}=n[0];h=n[0].status,e.forEach(((e,t)=>l[t]=e.toLowerCase()))}const p={status:h,url:t.url,headers:l,body:d};if(a&&r&&!r.path.endsWith("/heartbeat")){const t=`Notify clients about ${c?"subscribe":"leave"} request completion: ${e.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ")}`;for(const n of e)Te(t)}for(const t of e){if(c&&!t.subscription){if(a){const n=`${t.clientIdentifier} doesn't have active subscription. Don't notify about completion.`;for(const t of e)Te(n)}continue}const n=u[t.clientIdentifier],{request:i}=null!==(o=t.subscription)&&void 0!==o?o:{};let l=null!=i?i:r;if(c||(l=r),n&&l){const e=Object.assign(Object.assign({},s),{clientIdentifier:t.clientIdentifier,identifier:l.identifier,url:`${l.origin}${l.path}`});if("request-process-success"===s.type&&t.workerLogVerbosity)Te({messageType:"network-response",message:p});else if("request-process-error"===s.type&&t.workerLogVerbosity){const t=!!s.error&&("TIMEOUT"===s.error.type||"ABORTED"===s.error.type);let n=s.error?s.error.message:"Unknown";if(e.response){const t=e.response.headers["content-type"];if(e.response.body&&t&&(-1!==t.indexOf("javascript")||-1!==t.indexOf("json")))try{const t=JSON.parse((new TextDecoder).decode(e.response.body));"message"in t?n=t.message:"error"in t&&("string"==typeof t.error?n=t.error:"object"==typeof t.error&&"message"in t.error&&(n=t.error.message))}catch(e){}"Unknown"===n&&(n=e.response.status>=500?"Internal Server Error":400==e.response.status?"Bad request":403==e.response.status?"Access denied":`${e.response.status}`)}Te({messageType:"network-request",message:r,details:n,canceled:t,failed:!t})}J(t,e)}else if(!n&&a){const n=`${t.clientIdentifier} doesn't have Shared Worker's communication channel. Don't notify about completion.`;for(const r of e)r.clientIdentifier!==t.clientIdentifier&&Te(n)}}},Y=e=>{var t;const[n,r]=e,s=r.byteLength>0?r:void 0,i=parseInt(null!==(t=n.headers.get("Content-Length"))&&void 0!==t?t:"0",10),o=n.headers.get("Content-Type"),a={};return n.headers.forEach(((e,t)=>a[t]=e.toLowerCase())),{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentLength:i,contentType:o,headers:a,status:n.status,body:s}}},Z=(e,t)=>{if(t)return Object.assign(Object.assign({},Y(t)),{type:"request-process-error"});let n="NETWORK_ISSUE",r="Unknown error",s="Error";e&&e instanceof Error&&(r=e.message,s=e.name);const i=r.toLowerCase();return i.includes("timeout")?n="TIMEOUT":("AbortError"===s||i.includes("aborted")||i.includes("cancel"))&&(r="Request aborted",n="ABORTED"),{type:"request-process-error",clientIdentifier:"",identifier:"",url:"",error:{name:s,type:n,message:r}}},ee=e=>{var t,n,r,s,i;const{clientIdentifier:o}=e;if(O[o])return;const a=O[o]={clientIdentifier:o,subscriptionKey:e.subscriptionKey,userId:e.userId,heartbeatInterval:e.heartbeatInterval,newlyRegistered:!0,offlineClientsCheckInterval:e.workerOfflineClientsCheckInterval,unsubscribeOfflineClients:e.workerUnsubscribeOfflineClients,workerLogVerbosity:e.workerLogVerbosity},u=null!==(t=S[s=e.subscriptionKey])&&void 0!==t?t:S[s]=[];u.every((e=>e.clientIdentifier!==o))&&u.push(a),(null!==(n=j[i=e.subscriptionKey])&&void 0!==n?n:j[i]={})[o]=e.port;const c=`Registered PubNub client with '${o}' identifier. '${u.length}' clients currently active.`;for(const e of u)Te(c);if(!k[e.subscriptionKey]&&(null!==(r=S[e.subscriptionKey])&&void 0!==r?r:[]).length>0){const{subscriptionKey:t}=e,n=e.workerOfflineClientsCheckInterval;for(const e of u)Te(`Setup PubNub client ping event ${n} seconds`);k[t]=setTimeout((()=>qe(t)),500*n-1)}},te=e=>{var t,n,r;const{clientIdentifier:s,userId:i,heartbeatInterval:o,accessToken:a,preProcessedToken:u}=e,c=O[s];if(!c)return;if(Ae({userId:i,heartbeatInterval:o,authKey:a,token:u},"Update client configuration:",c),i!==c.userId||a&&a!==(null!==(t=c.authKey)&&void 0!==t?t:"")){const e=null!==(n=E[c.subscriptionKey])&&void 0!==n?n:{},t=`${i}_${null!==(r=ve(c))&&void 0!==r?r:""}`;void 0!==e[t]&&delete e[t]}const l=c.heartbeatInterval!==o;c.userId=i,c.heartbeatInterval=o,a&&(c.authKey=a),u&&(c.accessToken=u),l&&ue(c,!0),le(c),c.heartbeat&&c.heartbeat.heartbeatEvent&&K(c.heartbeat.heartbeatEvent,!1,!0,void 0)},ne=e=>{oe(e.subscriptionKey,e.clientIdentifier)},re=e=>{var t,n,r,s,i,o,a,u,c,l,d,h,p,f,b,g,y,m,q,v;const I=e.request.queryParameters,{clientIdentifier:w}=e,T=O[w];let A=!1;if(!T)return;const k=null!==(t=I["channel-group"])&&void 0!==t?t:"",D=null!==(n=I.state)&&void 0!==n?n:"";let $=T.subscription;if($){if(D.length>0){const e=JSON.parse(D),t=null!==(o=(g=null!==(i=R[b=T.subscriptionKey])&&void 0!==i?i:R[b]={})[y=T.userId])&&void 0!==o?o:g[y]={};Object.entries(e).forEach((([e,n])=>t[e]=n));for(const n of $.objectsWithState)e[n]||delete t[n];$.objectsWithState=Object.keys(e)}else if($.objectsWithState.length){const e=null!==(u=(q=null!==(a=R[m=T.subscriptionKey])&&void 0!==a?a:R[m]={})[v=T.userId])&&void 0!==u?u:q[v]={};for(const t of $.objectsWithState)delete e[t];$.objectsWithState=[]}}else{if(A=!0,$={refreshTimestamp:0,path:"",channelGroupQuery:"",channels:[],channelGroups:[],previousTimetoken:"0",timetoken:"0",objectsWithState:[]},D.length>0){const e=JSON.parse(D),t=null!==(s=(p=null!==(r=R[h=T.subscriptionKey])&&void 0!==r?r:R[h]={})[f=T.userId])&&void 0!==s?s:p[f]={};Object.entries(e).forEach((([e,n])=>t[e]=n)),$.objectsWithState=Object.keys(e)}T.subscription=$}if($.path!==e.request.path){$.path=e.request.path;const t=ge(e.request);A||(A=!me($.channels,t)),$.channels=t}if($.channelGroupQuery!==k){$.channelGroupQuery=k;const t=ye(e.request);A||(A=!me($.channelGroups,t)),$.channelGroups=t}let{authKey:S}=T;return $.refreshTimestamp=Date.now(),$.request=e.request,$.filterExpression=null!==(c=I["filter-expr"])&&void 0!==c?c:"",$.timetoken=null!==(l=I.tt)&&void 0!==l?l:"0",void 0!==I.tr&&($.region=I.tr),T.authKey=null!==(d=I.auth)&&void 0!==d?d:"",T.origin=e.request.origin,T.userId=I.uuid,T.pnsdk=I.pnsdk,T.accessToken=e.preProcessedToken,T.newlyRegistered&&!S&&T.authKey&&(S=T.authKey),T.newlyRegistered=!1,A},se=e=>{var t,n,r;const{clientIdentifier:s}=e,i=O[s],{request:o}=e,a=null!==(t=o.queryParameters)&&void 0!==t?t:{};if(!i)return;const u=null!==(n=i.heartbeat)&&void 0!==n?n:i.heartbeat={channels:[],channelGroups:[]};u.heartbeatEvent=Object.assign({},e),u.channelGroups=ye(o).filter((e=>!e.endsWith("-pnpres"))),u.channels=ge(o).filter((e=>!e.endsWith("-pnpres")));const c=null!==(r=a.state)&&void 0!==r?r:"";if(c.length>0){const e=JSON.parse(c);for(const t of Object.keys(e))u.channels.includes(t)||u.channelGroups.includes(t)||delete e[t];u.presenceState=e}i.accessToken=e.preProcessedToken},ie=e=>{const t=O[e.clientIdentifier];t&&(t.lastPongEvent=(new Date).getTime()/1e3)},oe=(e,t)=>{var n,r,s;const i=O[t];delete O[t];let o,a=S[e];if(i){if(i.subscription&&(o=i.subscription.serviceRequestId,delete i.subscription.serviceRequestId,o&&W(o)),ce(i),E[e]){const t=null!==(n=E[e])&&void 0!==n?n:E[e]={},s=`${i.userId}_${null!==(r=ve(i))&&void 0!==r?r:""}`;t[s]&&t[s].clientIdentifier===i.clientIdentifier&&delete t[s].clientIdentifier}i.unsubscribeOfflineClients&&ae(i,o)}if(a)if(a=a.filter((e=>e.clientIdentifier!==t)),a.length>0?S[e]=a:(delete S[e],delete E[e]),0===a.length&&delete R[e],a.length>0){const n=j[e];n&&(delete n[t],0===Object.keys(n).length&&delete j[e])}else delete j[e];const u=`Invalidate '${t}' client. '${(null!==(s=S[e])&&void 0!==s?s:[]).length}' clients currently active.`;if(a)for(const e of a)Te(u);else Te(u)},ae=(e,n)=>{if(!e.subscription)return;const{channels:r,channelGroups:s}=e.subscription,i=(null!=s?s:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>De(e))).sort(),o=(null!=r?r:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>De(e))).sort();if(0===o.length&&0===i.length)return;const u=i.length>0?i.join(","):void 0,c=0===o.length?",":o.join(","),l=Object.assign(Object.assign({instanceid:e.clientIdentifier,uuid:e.userId,requestid:a.createUUID()},e.authKey?{auth:e.authKey}:{}),u?{"channel-group":u}:{}),d={type:"send-request",clientIdentifier:e.clientIdentifier,subscriptionKey:e.subscriptionKey,request:{origin:e.origin,path:`/v2/presence/sub-key/${e.subscriptionKey}/channel/${c}/leave`,queryParameters:l,method:t.GET,headers:{},timeout:10,cancellable:!1,compressible:!1,identifier:l.requestid}};F(d,e,n)},ue=(e,t=!1)=>{const{heartbeat:n,heartbeatInterval:r}=e;if(!(r&&r>0&&void 0!==n&&n.heartbeatEvent&&(n.channels.length>0||n.channelGroups.length>0)))return void ce(e);if(t&&!n.loop)return;let s=r;if(t&&n.loop&&s!==n.loop.heartbeatInterval){const e=(Date.now()-n.loop.startTimestamp)/1e3;e<s&&(s-=e)}if(ce(e),s<=0)return;const i=Date.now(),o=i+1e3*s,d=`hb-${e.clientIdentifier}-${i}`,h={scheduledAt:i,expectedFireAt:o,queueDepthAtFire:l.size};c.set(d,h);const p={targetInterval:s,expectedFireAt:new Date(o).toISOString(),currentPendingRequests:l.size,channels:n.channels.length,channelGroups:n.channelGroups.length};console.log(`[HeartbeatTimer] Scheduling heartbeat for client ${e.clientIdentifier}:`,p),T("HeartbeatTimer",Object.assign({event:"scheduled",clientId:e.clientIdentifier},p)),n.loop={timer:setTimeout((()=>{const t=Date.now();if(h.actualFiredAt=t,h.delayFromExpected=t-o,h.queueDepthAtFire=l.size,Math.abs(h.delayFromExpected)>100&&console.warn(`[HeartbeatTimer] Heartbeat timer fired ${h.delayFromExpected}ms off schedule:`,{clientId:e.clientIdentifier,expected:new Date(o).toISOString(),actual:new Date(t).toISOString(),delay:h.delayFromExpected,pendingRequests:l.size}),ce(e),!e.heartbeat||!e.heartbeat.heartbeatEvent)return h.skipped=!0,void(h.skipReason="No heartbeat event available");const{request:n}=e.heartbeat.heartbeatEvent;n.identifier=a.createUUID(),n.queryParameters.requestid=n.identifier;const r=u.get(n.identifier);r&&(r.timerToFetchDelay=Date.now()-t),K(e.heartbeat.heartbeatEvent,!1,!1,h)}),1e3*s),heartbeatInterval:r,startTimestamp:i}},ce=e=>{const{heartbeat:t}=e;void 0!==t&&t.loop&&(clearTimeout(t.loop.timer),delete t.loop)},le=e=>{var t,n,r;const{subscription:s,heartbeat:i}=e;if(s&&s.request&&s.request.queryParameters){const t=s.request.queryParameters;e.authKey&&e.authKey.length>0?t.auth=e.authKey:t.auth&&delete t.auth}if((null==i?void 0:i.heartbeatEvent)&&i.heartbeatEvent.request){e.accessToken&&(i.heartbeatEvent.preProcessedToken=e.accessToken);const s=null!==(t=E[r=e.subscriptionKey])&&void 0!==t?t:E[r]={},o=`${e.userId}_${null!==(n=ve(e))&&void 0!==n?n:""}`;s[o]&&s[o].response&&delete s[o].response,i.heartbeatEvent.request.identifier=a.createUUID();const u=i.heartbeatEvent.request.queryParameters;u.requestid=i.heartbeatEvent.request.identifier,e.authKey&&e.authKey.length>0?u.auth=e.authKey:u.auth&&delete u.auth}},de=e=>{const{clientIdentifier:t,subscriptionKey:n}=e.data;return!(!t||"string"!=typeof t)&&!(!n||"string"!=typeof n)},he=(e,t)=>{var n;const r=null!==(n=t.request.queryParameters["channel-group"])&&void 0!==n?n:"",s=t.request.path;let i,o;for(const n of e){const{subscription:e}=n;if(!e||!e.serviceRequestId)continue;const a=O[t.clientIdentifier],u=e.serviceRequestId;if(e.path===s&&e.channelGroupQuery===r)return Te(`Found identical request started by '${n.clientIdentifier}' client. \nWaiting for existing '${u}' request completion.`),e.serviceRequestId;{const r=x[e.serviceRequestId];if(i||(i=ye(t.request)),o||(o=ge(t.request)),o.length&&!me(r.channels,o))continue;if(i.length&&!me(r.channelGroups,i))continue;return Ae(r,`'${t.request.identifier}' request channels and groups are subset of ongoing '${u}' request \nwhich has started by '${n.clientIdentifier}' client. Waiting for existing '${u}' request completion.`,a),e.serviceRequestId}}},pe=(e,t)=>{var n,r;const s=O[t.clientIdentifier];if(!s)return[];const i=t.request.queryParameters,o=ve(s),a=null!==(n=i["filter-expr"])&&void 0!==n?n:"",u=i.uuid;return(null!==(r=S[t.subscriptionKey])&&void 0!==r?r:[]).filter((t=>t.userId===u&&ve(t)===o&&t.subscription&&(0!==t.subscription.channels.length||0!==t.subscription.channelGroups.length)&&t.subscription.filterExpression===a&&("0"===e||"0"===t.subscription.timetoken||t.subscription.timetoken===e)))},fe=e=>be(e),be=(e,t)=>{var n;const r=null!=t?t:O[e.clientIdentifier];if(!r)return[];const s=e.request.queryParameters,i=ve(r),o=s.uuid;return(null!==(n=S[e.subscriptionKey])&&void 0!==n?n:[]).filter((e=>e.userId===o&&ve(e)===i))},ge=e=>{const t=e.path.split("/")[e.path.startsWith("/v2/subscribe/")?4:6];return","===t?[]:t.split(",").filter((e=>e.length>0))},ye=e=>{var t;const n=null!==(t=e.queryParameters["channel-group"])&&void 0!==t?t:"";return 0===n.length?[]:n.split(",").filter((e=>e.length>0))},me=(e,t)=>{const n=new Set(e);return t.every(n.has,n)},qe=e=>{const t={type:"shared-worker-ping"},n=Object.values(O).filter((t=>t&&t.subscriptionKey===e));if(n.forEach((e=>{let r=!1;if(e&&e.lastPingRequest){const t=e.offlineClientsCheckInterval;if(!e.lastPongEvent||Math.abs(e.lastPongEvent-e.lastPingRequest)>.5*t){r=!0;for(const t of n)Te(`'${e.clientIdentifier}' client is inactive. Invalidating...`);oe(e.subscriptionKey,e.clientIdentifier)}}e&&!r&&(e.lastPingRequest=(new Date).getTime()/1e3,J(e,t))})),n&&n.length>0&&n[0]){const t=n[0].offlineClientsCheckInterval;k[e]=setTimeout((()=>qe(e)),500*t-1)}},ve=e=>{var t;return e.accessToken&&null!==(t=e.accessToken.token)&&void 0!==t?t:e.authKey},Ie=e=>{const t=e.filter((e=>!!e.accessToken)).sort(((e,t)=>e.accessToken.expiration-t.accessToken.expiration)).pop();return t?t.authKey:void 0},we=e=>{const t=ve(e);let n=`${e.userId}-${e.subscriptionKey}${t?`-${t}`:""}`;return e.subscription&&e.subscription.filterExpression&&(n+=`-${e.subscription.filterExpression}`),n},Te=(e,t)=>{console.log(e)},Ae=(e,t,n)=>{const r=(n?[n]:Object.values(O)).filter((e=>e&&e.workerLogVerbosity)),s={type:"shared-worker-console-dir",message:t,data:e};r.forEach((e=>{e&&J(e,s)}))},ke=e=>Object.keys(e).map((t=>{const n=e[t];return Array.isArray(n)?n.map((e=>`${t}=${De(e)}`)).join("&"):`${t}=${De(n)}`})).join("&"),De=e=>encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}));
