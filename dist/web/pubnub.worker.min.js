!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,t,n,r){return new(n||(n=Promise))((function(i,s){function o(e){try{l(r.next(e))}catch(e){s(e)}}function c(e){try{l(r.throw(e))}catch(e){s(e)}}function l(e){var t;e.done?i(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,c)}l((r=r.apply(e,t||[])).next())}))}var t;"function"==typeof SuppressedError&&SuppressedError,function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.LOCAL="LOCAL"}(t||(t={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var r,i,s={exports:{}};
/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */r=s,function(e){var t="0.1.0",n={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function r(){var e,t,n="";for(e=0;e<32;e++)t=16*Math.random()|0,8!==e&&12!==e&&16!==e&&20!==e||(n+="-"),n+=(12===e?4:16===e?3&t|8:t).toString(16);return n}function i(e,t){var r=n[t||"all"];return r&&r.test(e)||!1}r.isUUID=i,r.VERSION=t,e.uuid=r,e.isUUID=i}(i=s.exports),null!==r&&(r.exports=i.uuid);var o=n(s.exports),c={createUUID:()=>o.uuid?o.uuid():o()};const l=new Map,u=new TextDecoder,a={},d=c.createUUID(),f=new Map,h={},p={},b={},g={},v={},y={};self.onconnect=e=>{ee("New PubNub Client connected to the Subscription Shared Worker."),e.ports.forEach((e=>{e.start(),e.onmessage=t=>{if(!J(t))return;const n=t.data;if("client-register"===n.type)n.port=e,D(n),ee(`Client '${n.clientIdentifier}' registered with '${d}' shared worker`);else if("client-pong"===n.type)N(n);else if("send-request"===n.type)if(n.request.path.startsWith("/v2/subscribe")){F(n);const e=h[n.clientIdentifier];if(e){const t=`${e.userId}-${e.subscriptionKey}`;if(!l.has(t)){const e=setTimeout((()=>{q(n),l.delete(t)}),50);l.set(t,e)}}}else n.request.path.endsWith("/heartbeat")?(U(n),m(n)):w(n);else"cancel-request"===n.type&&O(n)},e.postMessage({type:"shared-worker-connected"})}))};const q=e=>{var t;const n=P(e),r=h[e.clientIdentifier];let i=!1;if(r&&(r.subscription&&(i="0"===r.subscription.timetoken),R("start",[r],(new Date).toISOString(),e.request)),"string"==typeof n){const s=y[n];if(r){if(r.subscription&&(r.subscription.timetoken=s.timetoken,r.subscription.region=s.region,r.subscription.serviceRequestId=n),!i)return;const o=(new TextEncoder).encode(`{"t":{"t":"${s.timetoken}","r":${null!==(t=s.region)&&void 0!==t?t:"0"}},"m":[]}`),c=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${o.length}`}),l=new Response(o,{status:200,headers:c}),u=L([l,o]);u.url=`${e.request.origin}${e.request.path}`,u.clientIdentifier=e.clientIdentifier,u.identifier=e.request.identifier,R("end",[r],(new Date).toISOString(),e.request,o,c.get("Content-Type"),0),A(r,u)}return}e.request.cancellable&&f.set(n.identifier,new AbortController);const s=y[n.identifier],{timetokenOverride:o,regionOverride:c}=s;j(n,(()=>T(n.identifier)),((t,r)=>{x(t,r,e.request),E(t,n.identifier)}),((t,r)=>{x(t,null,e.request,W(r)),E(t,n.identifier)}),(e=>{let t=e;return i&&o&&"0"!==o&&(t=I(t,o,c)),t})),ee(`'${Object.keys(y).length}' subscription request currently active.`)},I=(e,t,n)=>{if(void 0===t||"0"===t||e[0].status>=400)return e;let r;const i=e[0];let s=i,o=e[1];try{r=JSON.parse((new TextDecoder).decode(o))}catch(t){return ee(`Subscribe response parse error: ${t}`),e}r.t.t=t,n&&(r.t.r=parseInt(n,10));try{if(o=(new TextEncoder).encode(JSON.stringify(r)).buffer,o.byteLength){const e=new Headers(i.headers);e.set("Content-Length",`${o.byteLength}`),s=new Response(o,{status:i.status,statusText:i.statusText,headers:e})}}catch(t){return ee(`Subscribe serialization error: ${t}`),e}return o.byteLength>0?[s,o]:e},m=e=>{var t;const n=h[e.clientIdentifier],r=C(e);if(!n)return;const i=`${n.userId}_${null!==(t=n.authKey)&&void 0!==t?t:""}`,s=b[n.subscriptionKey],o=(null!=s?s:{})[i];if(R("start",[n],(new Date).toISOString(),r),!r){let t,r;if(ee(`Previous heartbeat request has been sent less than ${n.heartbeatInterval} seconds ago. Skipping...`),o&&o.response&&([t,r]=o.response),!t){r=(new TextEncoder).encode('{ "status": 200, "message": "OK", "service": "Presence" }').buffer;const e=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${r.byteLength}`});t=new Response(r,{status:200,headers:e})}const i=L([t,r]);return i.url=`${e.request.origin}${e.request.path}`,i.clientIdentifier=e.clientIdentifier,i.identifier=e.request.identifier,R("end",[n],(new Date).toISOString(),e.request,r,t.headers.get("Content-Type"),0),void A(n,i)}j(r,(()=>[n]),((t,n)=>{o&&(o.response=n),x(t,n,e.request)}),((t,n)=>{x(t,null,e.request,W(n))})),ee("Started heartbeat request.",n)},w=(e,t)=>{t=null!=t?t:h[e.clientIdentifier];const n=G(e);if(!t)return;const{subscription:r}=t,i=null==r?void 0:r.serviceRequestId;if(r&&0===r.channels.length&&0===r.channelGroups.length&&(r.channelGroupQuery="",r.path="",r.previousTimetoken="0",r.timetoken="0",delete r.region,delete r.serviceRequestId,delete r.request),!n){const n=(new TextEncoder).encode('{"status": 200, "action": "leave", "message": "OK", "service":"Presence"}'),r=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${n.length}`}),i=new Response(n,{status:200,headers:r}),s=L([i,n]);return s.url=`${e.request.origin}${e.request.path}`,s.clientIdentifier=e.clientIdentifier,s.identifier=e.request.identifier,void A(t,s)}if(j(n,(()=>[t]),((t,n)=>{x(t,n,e.request)}),((t,n)=>{x(t,null,e.request,W(n))})),ee("Started leave request.",t),void 0===i)return;const s=T(i);s.forEach((e=>{e&&e.subscription&&delete e.subscription.serviceRequestId})),k(i),$(s)},O=e=>{const t=h[e.clientIdentifier];if(!t||!t.subscription)return;const n=t.subscription.serviceRequestId;t&&n&&(delete t.subscription.serviceRequestId,t.subscription.request&&t.subscription.request.identifier===e.identifier&&delete t.subscription.request,k(n))},$=e=>{let t,n;for(const r of e)if(r.subscription&&r.subscription.request){n=r.subscription.request,t=r;break}n&&t&&q({type:"send-request",clientIdentifier:t.clientIdentifier,subscriptionKey:t.subscriptionKey,logVerbosity:t.logVerbosity,request:n})},j=(t,n,r,i,s)=>{e(void 0,void 0,void 0,(function*(){var e;const o=(new Date).getTime();Promise.race([fetch(K(t),{signal:null===(e=f.get(t.identifier))||void 0===e?void 0:e.signal,keepalive:!0}),S(t.identifier,t.timeout)]).then((e=>e.arrayBuffer().then((t=>[e,t])))).then((e=>s?s(e):e)).then((e=>{const i=e[1].byteLength>0?e[1]:void 0,s=n();0!==s.length&&(R("end",s,(new Date).toISOString(),t,i,e[0].headers.get("Content-Type"),(new Date).getTime()-o),r(s,e))})).catch((e=>{const t=n();if(0===t.length)return;let r=e;if("string"==typeof e){const t=e.toLowerCase();r=new Error(e),!t.includes("timeout")&&t.includes("cancel")&&(r.name="AbortError")}i(t,r)}))}))},k=e=>{if(0===T(e).length){const t=f.get(e);f.delete(e),delete y[e],t&&t.abort("Cancel request")}},S=(e,t)=>new Promise(((n,r)=>{const i=setTimeout((()=>{f.delete(e),clearTimeout(i),r(new Error("Request timeout"))}),1e3*t)})),T=e=>Object.values(h).filter((t=>void 0!==t&&void 0!==t.subscription&&t.subscription.serviceRequestId===e)),E=(e,t)=>{delete y[t],e.forEach((e=>{e.subscription&&(delete e.subscription.request,delete e.subscription.serviceRequestId)}))},K=e=>{let t;const n=e.queryParameters;let r=e.path;if(e.headers){t={};for(const[n,r]of Object.entries(e.headers))t[n]=r}return n&&0!==Object.keys(n).length&&(r=`${r}?${ne(n)}`),new Request(`${e.origin}${r}`,{method:e.method,headers:t,redirect:"follow"})},P=e=>{var t,n,r,i,s;const o=h[e.clientIdentifier],l=o.subscription,u=_(l.timetoken,e),a=c.createUUID(),d=Object.assign({},e.request);let f,p;if(u.length>1){const s=H(u,e);if(s){const e=y[s],{channels:n,channelGroups:r}=null!==(t=o.subscription)&&void 0!==t?t:{channels:[],channelGroups:[]};if((!(n.length>0)||Y(e.channels,n))&&(!(r.length>0)||Y(e.channelGroups,r)))return s}const c=(null!==(n=g[o.subscriptionKey])&&void 0!==n?n:{})[o.userId],h={},b=new Set(l.channelGroups),v=new Set(l.channels);c&&l.objectsWithState.length&&l.objectsWithState.forEach((e=>{const t=c[e];t&&(h[e]=t)}));for(const e of u){const{subscription:t}=e;if(!t)continue;1!==u.length&&e.clientIdentifier===o.clientIdentifier||!t.timetoken||(f=t.timetoken,p=t.region),t.channelGroups.forEach(b.add,b),t.channels.forEach(v.add,v);const n=t.serviceRequestId;t.serviceRequestId=a,n&&y[n]&&k(n),c&&t.objectsWithState.forEach((e=>{const t=c[e];t&&!h[e]&&(h[e]=t)}))}const q=null!==(r=y[a])&&void 0!==r?r:y[a]={requestId:a,timetoken:null!==(i=d.queryParameters.tt)&&void 0!==i?i:"0",channelGroups:[],channels:[]};if(v.size){q.channels=Array.from(v).sort();const e=d.path.split("/");e[4]=q.channels.join(","),d.path=e.join("/")}b.size&&(q.channelGroups=Array.from(b).sort(),d.queryParameters["channel-group"]=q.channelGroups.join(",")),Object.keys(h).length&&(d.queryParameters.state=JSON.stringify(h))}else y[a]={requestId:a,timetoken:null!==(s=d.queryParameters.tt)&&void 0!==s?s:"0",channelGroups:l.channelGroups,channels:l.channels};y[a]&&(d.queryParameters&&void 0!==d.queryParameters.tt&&void 0!==d.queryParameters.tr&&(y[a].region=d.queryParameters.tr),y[a].timetokenOverride=f,y[a].regionOverride=p),l.serviceRequestId=a,d.identifier=a;const b=u.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");if(b.length>0)for(const e of u)te(y[a],`Started aggregated request for clients: ${b}`,e);return d},C=e=>{var t,n,r,i,s;const o=h[e.clientIdentifier],c=Q(e),l=Object.assign({},e.request);if(!o||!o.heartbeat)return;const u=null!==(t=b[s=o.subscriptionKey])&&void 0!==t?t:b[s]={},a=`${o.userId}_${null!==(n=o.authKey)&&void 0!==n?n:""}`,d=o.heartbeat.channelGroups,f=o.heartbeat.channels;let p,g,v=!1;if(u[a]){const{channels:e,channelGroups:t,response:n}=u[a];p=null!==(i=o.heartbeat.presenceState)&&void 0!==i?i:{},g=Y(e,o.heartbeat.channels)&&Y(t,o.heartbeat.channelGroups),n&&(v=n[0].status>=400)}else u[a]={channels:f,channelGroups:d,timestamp:Date.now()},p=null!==(r=o.heartbeat.presenceState)&&void 0!==r?r:{},g=!1;if(g){const t=u[a].timestamp+1e3*o.heartbeatInterval,n=Date.now();if(!v&&n<t&&t-n>5e3)return;delete u[a].response;for(const t of c){const{heartbeat:n}=t;void 0!==n&&t.clientIdentifier!==e.clientIdentifier&&(n.presenceState&&(p=Object.assign(Object.assign({},p),n.presenceState)),d.push(...n.channelGroups.filter((e=>!d.includes(e)))),f.push(...n.channels.filter((e=>!f.includes(e)))))}}u[a].channels=f,u[a].channelGroups=d,u[a].timestamp=Date.now();for(const e in Object.keys(p))f.includes(e)||d.includes(e)||delete p[e];if(f.length){const e=l.path.split("/");e[6]=f.join(","),l.path=e.join("/")}return d.length&&(l.queryParameters["channel-group"]=d.join(",")),Object.keys(p).length?l.queryParameters.state=JSON.stringify(p):delete l.queryParameters.state,l},G=e=>{const t=h[e.clientIdentifier],n=B(e);let r=X(e.request),i=z(e.request);const s=Object.assign({},e.request);if(t&&t.subscription){const{subscription:e}=t;i.length&&(e.channels=e.channels.filter((e=>!i.includes(e)))),r.length&&(e.channelGroups=e.channelGroups.filter((e=>!r.includes(e))))}if(t&&t.heartbeat){const{heartbeat:e}=t;i.length&&(e.channels=e.channels.filter((e=>!i.includes(e)))),r.length&&(e.channelGroups=e.channelGroups.filter((e=>!r.includes(e))))}for(const t of n){const n=t.subscription;void 0!==n&&(t.clientIdentifier!==e.clientIdentifier&&(i.length&&(i=i.filter((e=>!n.channels.includes(e)))),r.length&&(r=r.filter((e=>!n.channelGroups.includes(e))))))}if(0!==i.length||0!==r.length){if(i.length){const e=s.path.split("/");e[6]=i.join(","),s.path=e.join("/")}return r.length&&(s.queryParameters["channel-group"]=r.join(",")),s}if(t&&t.workerLogVerbosity){const e=n.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");ee(`Specified channels and groups still in use by other clients: ${e}. Ignoring leave request.`,t)}},A=(e,t)=>{var n;const r=(null!==(n=v[e.subscriptionKey])&&void 0!==n?n:{})[e.clientIdentifier];if(!r)return!1;try{return r.postMessage(t),!0}catch(t){e.workerLogVerbosity&&console.error(`[SharedWorker] Unable send message using message port: ${t}`)}return!1},R=(e,t,n,r,i,s,o)=>{var c,l;if(0===t.length)return;const a=null!==(c=v[t[0].subscriptionKey])&&void 0!==c?c:{},d=r&&r.path.startsWith("/v2/subscribe");let f;if("start"===e)f={type:"request-progress-start",clientIdentifier:"",url:"",timestamp:n};else{let e;i&&s&&(-1!==s.indexOf("text/javascript")||-1!==s.indexOf("application/json")||-1!==s.indexOf("text/plain")||-1!==s.indexOf("text/html"))&&(e=u.decode(i)),f={type:"request-progress-end",clientIdentifier:"",url:"",response:e,timestamp:n,duration:o}}for(const e of t){if(d&&!e.subscription)continue;const t=a[e.clientIdentifier],{request:n}=null!==(l=e.subscription)&&void 0!==l?l:{};let i=null!=n?n:r;if(d||(i=r),e.logVerbosity&&t&&i){const t=Object.assign(Object.assign({},f),{clientIdentifier:e.clientIdentifier,url:`${i.origin}${i.path}`,query:i.queryParameters});A(e,t)}}},x=(e,t,n,r)=>{var i,s;if(0===e.length)return;if(!r&&!t)return;const o=e.some((e=>e&&e.workerLogVerbosity)),c=null!==(i=v[e[0].subscriptionKey])&&void 0!==i?i:{},l=n&&n.path.startsWith("/v2/subscribe");if(!r&&t&&(r=t[0].status>=400?W(void 0,t):L(t)),o&&n&&!n.path.endsWith("/heartbeat")){const t=`Notify clients about ${l?"subscribe":"leave"} request completion: ${e.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ")}`;for(const n of e)ee(t,n)}for(const t of e){if(l&&!t.subscription){if(o){const n=`${t.clientIdentifier} doesn't have active subscription. Don't notify about completion.`;for(const t of e)ee(n,t)}continue}const i=c[t.clientIdentifier],{request:u}=null!==(s=t.subscription)&&void 0!==s?s:{};let a=null!=u?u:n;if(l||(a=n),i&&a){const e=Object.assign(Object.assign({},r),{clientIdentifier:t.clientIdentifier,identifier:a.identifier,url:`${a.origin}${a.path}`});A(t,e)}else if(!i&&o){const n=`${t.clientIdentifier} doesn't have Shared Worker's communication channel. Don't notify about completion.`;for(const r of e)r.clientIdentifier!==t.clientIdentifier&&ee(n,r)}}},L=e=>{var t;const[n,r]=e,i=r.byteLength>0?r:void 0,s=parseInt(null!==(t=n.headers.get("Content-Length"))&&void 0!==t?t:"0",10),o=n.headers.get("Content-Type"),c={};return n.headers.forEach(((e,t)=>c[t]=e.toLowerCase())),{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentLength:s,contentType:o,headers:c,status:n.status,body:i}}},W=(e,t)=>{if(t)return Object.assign(Object.assign({},L(t)),{type:"request-process-error"});let n="NETWORK_ISSUE",r="Unknown error",i="Error";e&&e instanceof Error&&(r=e.message,i=e.name);const s=r.toLowerCase();return s.includes("timeout")?n="TIMEOUT":("AbortError"===i||s.includes("aborted")||s.includes("cancel"))&&(r="Request aborted",n="ABORTED"),{type:"request-process-error",clientIdentifier:"",identifier:"",url:"",error:{name:i,type:n,message:r}}},D=e=>{var t,n,r,i,s;const{clientIdentifier:o}=e;if(h[o])return;const c=h[o]={clientIdentifier:o,subscriptionKey:e.subscriptionKey,userId:e.userId,heartbeatInterval:e.heartbeatInterval,logVerbosity:e.logVerbosity,offlineClientsCheckInterval:e.workerOfflineClientsCheckInterval,unsubscribeOfflineClients:e.workerUnsubscribeOfflineClients,workerLogVerbosity:e.workerLogVerbosity},l=null!==(t=p[i=e.subscriptionKey])&&void 0!==t?t:p[i]=[];l.every((e=>e.clientIdentifier!==o))&&l.push(c),(null!==(n=v[s=e.subscriptionKey])&&void 0!==n?n:v[s]={})[o]=e.port;const u=`Registered PubNub client with '${o}' identifier. '${l.length}' clients currently active.`;for(const e of l)ee(u,e);if(!a[e.subscriptionKey]&&(null!==(r=p[e.subscriptionKey])&&void 0!==r?r:[]).length>0){const{subscriptionKey:t}=e,n=e.workerOfflineClientsCheckInterval;for(const e of l)ee(`Setup PubNub client ping event ${n} seconds`,e);a[e.subscriptionKey]=setTimeout((()=>Z(t)),500*n-1)}},F=e=>{var t,n,r,i,s,o,c,l,u,a,d,f,p,b,v,y,q,I,m,w;const O=e.request.queryParameters,{clientIdentifier:$}=e,j=h[$];if(!j)return;const k=null!==(t=O["channel-group"])&&void 0!==t?t:"",S=null!==(n=O.state)&&void 0!==n?n:"";let T=j.subscription;if(T){if(S.length>0){const e=JSON.parse(S),t=null!==(o=(y=null!==(s=g[v=j.subscriptionKey])&&void 0!==s?s:g[v]={})[q=j.userId])&&void 0!==o?o:y[q]={};Object.entries(e).forEach((([e,n])=>t[e]=n));for(const n of T.objectsWithState)e[n]||delete t[n];T.objectsWithState=Object.keys(e)}else if(T.objectsWithState.length){const e=null!==(l=(m=null!==(c=g[I=j.subscriptionKey])&&void 0!==c?c:g[I]={})[w=j.userId])&&void 0!==l?l:m[w]={};for(const t of T.objectsWithState)delete e[t];T.objectsWithState=[]}}else{if(T={path:"",channelGroupQuery:"",channels:[],channelGroups:[],previousTimetoken:"0",timetoken:"0",objectsWithState:[]},S.length>0){const e=JSON.parse(S),t=null!==(i=(p=null!==(r=g[f=j.subscriptionKey])&&void 0!==r?r:g[f]={})[b=j.userId])&&void 0!==i?i:p[b]={};Object.entries(e).forEach((([e,n])=>t[e]=n)),T.objectsWithState=Object.keys(e)}j.subscription=T}T.path!==e.request.path&&(T.path=e.request.path,T.channels=z(e.request)),T.channelGroupQuery!==k&&(T.channelGroupQuery=k,T.channelGroups=X(e.request));const{authKey:E,userId:K}=j;T.request=e.request,T.filterExpression=null!==(u=O["filter-expr"])&&void 0!==u?u:"",T.timetoken=null!==(a=O.tt)&&void 0!==a?a:"0",void 0!==O.tr&&(T.region=O.tr),j.authKey=null!==(d=O.auth)&&void 0!==d?d:"",j.origin=e.request.origin,j.userId=O.uuid,j.pnsdk=O.pnsdk,V(j,K,E)},U=e=>{var t,n;const r=h[e.clientIdentifier],{request:i}=e;if(!r)return;const s=null!==(t=r.heartbeat)&&void 0!==t?t:r.heartbeat={channels:[],channelGroups:[]};s.channelGroups=X(i).filter((e=>!e.endsWith("-pnpres"))),s.channels=z(i).filter((e=>!e.endsWith("-pnpres")));const o=null!==(n=i.queryParameters.state)&&void 0!==n?n:"";if(o.length>0){const e=JSON.parse(o);for(const t of Object.keys(e))s.channels.includes(t)||s.channelGroups.includes(t)||delete e[t];s.presenceState=e}},V=(e,t,n)=>{var r,i;if(!e||t===e.userId&&(null!=n?n:"")===(null!==(r=e.authKey)&&void 0!==r?r:""))return;const s=null!==(i=b[e.subscriptionKey])&&void 0!==i?i:{},o=`${t}_${null!=n?n:""}`;void 0!==s[o]&&delete s[o]},N=e=>{const t=h[e.clientIdentifier];t&&(t.lastPongEvent=(new Date).getTime()/1e3)},M=e=>{if(!e.subscription)return;const{channels:n,channelGroups:r}=e.subscription,i=(null!=r?r:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>re(e))).sort(),s=(null!=n?n:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>re(e))).sort();if(0===s.length&&0===i.length)return;const o=i.length>0?i.join(","):void 0,l=0===s.length?",":s.join(","),u=Object.assign(Object.assign({instanceid:e.clientIdentifier,uuid:e.userId,requestid:c.createUUID()},e.authKey?{auth:e.authKey}:{}),o?{"channel-group":o}:{}),a={type:"send-request",clientIdentifier:e.clientIdentifier,subscriptionKey:e.subscriptionKey,logVerbosity:e.logVerbosity,request:{origin:e.origin,path:`/v2/presence/sub-key/${e.subscriptionKey}/channel/${l}/leave`,queryParameters:u,method:t.GET,headers:{},timeout:10,cancellable:!1,identifier:u.requestid}};w(a,e)},J=e=>{const{clientIdentifier:t,subscriptionKey:n,logVerbosity:r}=e.data;return void 0!==r&&"boolean"==typeof r&&(!(!t||"string"!=typeof t)&&!(!n||"string"!=typeof n))},H=(e,t)=>{var n;const r=null!==(n=t.request.queryParameters["channel-group"])&&void 0!==n?n:"",i=t.request.path;let s,o;for(const n of e){const{subscription:e}=n;if(!e||!e.serviceRequestId)continue;const c=h[t.clientIdentifier],l=e.serviceRequestId;if(e.path===i&&e.channelGroupQuery===r)return ee(`Found identical request started by '${n.clientIdentifier}' client. \nWaiting for existing '${l}' request completion.`,c),e.serviceRequestId;{const r=y[e.serviceRequestId];if(s||(s=X(t.request)),o||(o=z(t.request)),o.length&&!Y(r.channels,o))continue;if(s.length&&!Y(r.channelGroups,s))continue;return te(r,`'${t.request.identifier}' request channels and groups are subset of ongoing '${l}' request \nwhich has started by '${n.clientIdentifier}' client. Waiting for existing '${l}' request completion.`,c),e.serviceRequestId}}},_=(e,t)=>{var n,r,i;const s=t.request.queryParameters,o=null!==(n=s["filter-expr"])&&void 0!==n?n:"",c=null!==(r=s.auth)&&void 0!==r?r:"",l=s.uuid;return(null!==(i=p[t.subscriptionKey])&&void 0!==i?i:[]).filter((t=>t.userId===l&&t.authKey===c&&t.subscription&&(0!==t.subscription.channels.length||0!==t.subscription.channelGroups.length)&&t.subscription.filterExpression===o&&("0"===e||"0"===t.subscription.timetoken||t.subscription.timetoken===e)))},Q=e=>B(e),B=e=>{var t,n;const r=e.request.queryParameters,i=null!==(t=r.auth)&&void 0!==t?t:"",s=r.uuid;return(null!==(n=p[e.subscriptionKey])&&void 0!==n?n:[]).filter((e=>e.userId===s&&e.authKey===i))},z=e=>{const t=e.path.split("/")[e.path.startsWith("/v2/subscribe/")?4:6];return","===t?[]:t.split(",").filter((e=>e.length>0))},X=e=>{var t;const n=null!==(t=e.queryParameters["channel-group"])&&void 0!==t?t:"";return 0===n.length?[]:n.split(",").filter((e=>e.length>0))},Y=(e,t)=>{const n=new Set(e);return t.every(n.has,n)},Z=e=>{const t={type:"shared-worker-ping"},n=Object.values(h).filter((t=>t&&t.subscriptionKey===e));if(n.forEach((e=>{let r=!1;if(e&&e.lastPingRequest){const t=e.offlineClientsCheckInterval;if(!e.lastPongEvent||Math.abs(e.lastPongEvent-e.lastPingRequest)>.5*t){r=!0;for(const t of n)ee(`'${e.clientIdentifier}' client is inactive. Invalidating...`,t);((e,t)=>{var n;const r=h[t];delete h[t];let i=p[e];if(r&&r.unsubscribeOfflineClients&&M(r),i)if(i=i.filter((e=>e.clientIdentifier!==t)),i.length>0?p[e]=i:(delete p[e],delete b[e]),0===i.length&&delete g[e],i.length>0){const n=v[e];n&&(delete n[t],0===Object.keys(n).length&&delete v[e])}else delete v[e];const s=`Invalidate '${t}' client. '${(null!==(n=p[e])&&void 0!==n?n:[]).length}' clients currently active.`;if(i)for(const e of i)ee(s,e);else ee(s)})(e.subscriptionKey,e.clientIdentifier)}}e&&!r&&(e.lastPingRequest=(new Date).getTime()/1e3,A(e,t))})),n&&n.length>0&&n[0]){const t=n[0].offlineClientsCheckInterval;a[e]=setTimeout((()=>Z(e)),500*t-1)}},ee=(e,t)=>{const n=(t?[t]:Object.values(h)).filter((e=>e&&e.workerLogVerbosity)),r={type:"shared-worker-console-log",message:e};n.forEach((e=>{e&&A(e,r)}))},te=(e,t,n)=>{const r=(n?[n]:Object.values(h)).filter((e=>e&&e.workerLogVerbosity)),i={type:"shared-worker-console-dir",message:t,data:e};r.forEach((e=>{e&&A(e,i)}))},ne=e=>Object.keys(e).map((t=>{const n=e[t];return Array.isArray(n)?n.map((e=>`${t}=${re(e)}`)).join("&"):`${t}=${re(n)}`})).join("&"),re=e=>encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}));
