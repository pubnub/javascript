!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,t,n,r){return new(n||(n=Promise))((function(s,i){function o(e){try{c(r.next(e))}catch(e){i(e)}}function a(e){try{c(r.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,a)}c((r=r.apply(e,t||[])).next())}))}var t;"function"==typeof SuppressedError&&SuppressedError,function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.LOCAL="LOCAL"}(t||(t={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var r,s,i={exports:{}};
/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */r=i,function(e){var t="0.1.0",n={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function r(){var e,t,n="";for(e=0;e<32;e++)t=16*Math.random()|0,8!==e&&12!==e&&16!==e&&20!==e||(n+="-"),n+=(12===e?4:16===e?3&t|8:t).toString(16);return n}function s(e,t){var r=n[t||"all"];return r&&r.test(e)||!1}r.isUUID=s,r.VERSION=t,e.uuid=r,e.isUUID=s}(s=i.exports),null!==r&&(r.exports=s.uuid);var o=n(i.exports),a={createUUID:()=>o.uuid?o.uuid():o()};const c=new Map,u=new Map,l=new Map;let d=0;const h=new Map,p=new Map,f={maxConcurrent:0,totalConnections:0,connectionReuse:0,newConnections:0},b=[];let g=0;const y={maxQueueDepth:0,totalQueued:0,heartbeatDelays:[],requestOrdering:new Map},q=e=>e.path.endsWith("/subscribe")?"subscribe":e.path.endsWith("/heartbeat")?"heartbeat":e.path.includes("/leave")?"leave":"other";let v;v||(v=setInterval((()=>{const e=Date.now(),t=Array.from(p.entries()).map((([t,n])=>{const r=c.get(t);return{id:t,url:(null==r?void 0:r.url)||"unknown",type:(null==r?void 0:r.requestType)||"unknown",channels:(null==r?void 0:r.channels)||[],duration:e-n.startTime,startTime:n.startTime}})).sort(((e,t)=>t.startTime-e.startTime)),n=b.map((t=>{const n=c.get(t.requestId);return{id:t.requestId,url:(null==n?void 0:n.url)||"unknown",type:t.type,channels:(null==n?void 0:n.channels)||[],queueTime:e-t.queuedAt,queuedAt:t.queuedAt,order:t.order}})).sort(((e,t)=>e.order-t.order)),r={timestamp:(new Date).toISOString(),network:{pendingRequests:l.size,activeConnections:p.size,maxConcurrent:f.maxConcurrent,totalRequests:c.size,browserQueueEstimate:Math.max(0,p.size-6)},queue:{currentDepth:b.length,maxDepth:y.maxQueueDepth,totalQueued:y.totalQueued,avgHeartbeatDelay:y.heartbeatDelays.length>0?y.heartbeatDelays.reduce(((e,t)=>e+t),0)/y.heartbeatDelays.length:0},heartbeats:{scheduled:u.size,completed:Array.from(u.values()).filter((e=>e.completedAt&&!e.skipped)).length,skipped:Array.from(u.values()).filter((e=>e.skipped)).length},requestTypes:{heartbeat:Array.from(c.values()).filter((e=>"heartbeat"===e.requestType)).length,subscribe:Array.from(c.values()).filter((e=>"subscribe"===e.requestType)).length,leave:Array.from(c.values()).filter((e=>"leave"===e.requestType)).length,other:Array.from(c.values()).filter((e=>"other"===e.requestType)).length},activeRequests:t.slice(0,20),queuedRequests:n.slice(0,20)};console.log("[MetricsSummary]",r),I("MetricsSummary",r);const s=Date.now()-3e5;for(const[e,t]of c.entries())t.queuedAt<s&&c.delete(e);for(const[e,t]of u.entries())t.scheduledAt<s&&u.delete(e)}),1e3));const m=e=>{const t={totalDuration:(e.fetchCompletedAt||Date.now())-e.queuedAt,fetchDuration:e.fetchStartedAt&&e.fetchCompletedAt?e.fetchCompletedAt-e.fetchStartedAt:void 0,queueTime:e.fetchStartedAt?e.fetchStartedAt-e.queuedAt:void 0,timerToFetchDelay:e.timerToFetchDelay,status:e.status,error:e.error,queueDepth:e.queueDepthAtStart,concurrent:e.concurrentRequestsAtStart,url:e.url,channels:e.channels,sequence:d++};console.log(`[NetworkMetrics] ${e.requestType} request ${e.requestId}:`,t),I("network-metrics",{type:e.requestType,requestId:e.requestId,metrics:t})},I=(e,t)=>{for(const[n,r]of h.entries())try{r.postMessage({type:"metrics-broadcast",eventType:e,metrics:t,timestamp:(new Date).toISOString()})}catch(e){console.error(`Failed to send metrics to ${n}, removing`),h.delete(n)}console.log(`[${e}]`,t)},w=new Map,T={},k=a.createUUID(),A=new Map,$={},S={},O={},D={},E={},j={};self.onconnect=e=>{Ie("New PubNub Client connected to the Subscription Shared Worker."),e.ports.forEach((e=>{e.start(),e.onmessage=t=>{if(t.data&&"object"==typeof t.data&&"metrics-client-register"===t.data.type){const n=t.data.clientId;return h.set(n,e),console.log(`Metrics client registered: ${n}`),void e.postMessage({type:"metrics-client-registered",clientId:n})}if(!ue(t))return;const n=t.data;if("client-register"===n.type)n.port=e,Y(n),Ie(`Client '${n.clientIdentifier}' registered with '${k}' shared worker`);else if("client-update"===n.type)Z(n);else if("client-unregister"===n.type)ee(n);else if("client-pong"===n.type)re(n);else if("send-request"===n.type)if(n.request.path.startsWith("/v2/subscribe")){const e=te(n),t=$[n.clientIdentifier];if(t){const r=me(t);let s=[];if(w.has(r)&&(s=w.get(r)[0]),s.push([t,n]),w.has(r)&&e&&(clearTimeout(w.get(r)[1]),w.delete(r)),!w.has(r)){const e=setTimeout((()=>{R(s,n),w.delete(r)}),50);w.set(r,[s,e])}}}else if(n.request.path.endsWith("/heartbeat")){ne(n);const e=Date.now(),t=`hb-direct-${n.clientIdentifier}-${e}`,r={scheduledAt:e,expectedFireAt:e,actualFiredAt:e,queueDepthAtFire:l.size};u.set(t,r),x(n,!0,!1,r)}else G(n);else"cancel-request"===n.type&&K(n)},e.postMessage({type:"shared-worker-connected"})}))};const R=(e,t)=>{const n=H(t),r=$[t.clientIdentifier];r&&(e=e.filter((e=>e[0].clientIdentifier!==r.clientIdentifier)),P(r,t,n,!0),e.forEach((([e,t])=>P(e,t,n,!1))))},P=(e,t,n,r)=>{var s;let i=!1;if(r||"string"==typeof n||(n=n.identifier),e.subscription&&(i="0"===e.subscription.timetoken),"string"==typeof n){const r=j[n];if(e){if(e.subscription&&(e.subscription.timetoken=r.timetoken,e.subscription.region=r.region,e.subscription.serviceRequestId=n),!i)return;const o=(new TextEncoder).encode(`{"t":{"t":"${r.timetoken}","r":${null!==(s=r.region)&&void 0!==s?s:"0"}},"m":[]}`),a=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${o.length}`}),c=new Response(o,{status:200,headers:a}),u=J([c,o]);u.url=`${t.request.origin}${t.request.path}`,u.clientIdentifier=t.clientIdentifier,u.identifier=t.request.identifier,B(e,u)}return}t.request.cancellable&&A.set(n.identifier,new AbortController);const o=j[n.identifier],{timetokenOverride:a,regionOverride:c}=o;Ie(`'${Object.keys(j).length}' subscription request currently active.`);for(const e of M(n.identifier))Ie({messageType:"network-request",message:n});L(n,(()=>M(n.identifier)),((e,r,s)=>{V(e,r,s,t.request),N(e,n.identifier)}),((e,r,s)=>{V(e,r,null,t.request,X(s)),N(e,n.identifier)}),(e=>{let t=e;return i&&a&&"0"!==a&&(t=C(t,a,c)),t}))},C=(e,t,n)=>{if(void 0===t||"0"===t||e[0].status>=400)return e;let r;const s=e[0];let i=s,o=e[1];try{r=JSON.parse((new TextDecoder).decode(o))}catch(t){return Ie(`Subscribe response parse error: ${t}`),e}r.t.t=t,n&&(r.t.r=parseInt(n,10));try{if(o=(new TextEncoder).encode(JSON.stringify(r)).buffer,o.byteLength){const e=new Headers(s.headers);e.set("Content-Length",`${o.byteLength}`),i=new Response(o,{status:s.status,statusText:s.statusText,headers:e})}}catch(t){return Ie(`Subscribe serialization error: ${t}`),e}return o.byteLength>0?[i,o]:e},x=(e,t=!0,n=!1,r)=>{var s,i;const o=Date.now();console.log("[HeartbeatRequest] Processing heartbeat event:",{clientId:e.clientIdentifier,actualRequest:t,outOfOrder:n,pendingRequests:l.size,timestamp:new Date(o).toISOString()});const a=$[e.clientIdentifier],c=Q(e,t,n);if(!a)return void console.warn(`[HeartbeatRequest] No client found for ${e.clientIdentifier}`);const d=`${a.userId}_${null!==(s=qe(a))&&void 0!==s?s:""}`,h=O[a.subscriptionKey],p=(null!=h?h:{})[d];if(!c){let t,n,s=`Previous heartbeat request has been sent less than ${a.heartbeatInterval} seconds ago. Skipping...`,o="too_frequent";if((!a.heartbeat||0===a.heartbeat.channels.length&&0===a.heartbeat.channelGroups.length)&&(s=`${a.clientIdentifier} doesn't have subscriptions to non-presence channels. Skipping...`,o="no_channels"),Ie(s),r){r.skipped=!0,r.skipReason=o,r.completedAt=Date.now();const e={clientId:a.clientIdentifier,reason:o,metricsId:null===(i=Object.entries(u).find((([e,t])=>t===r)))||void 0===i?void 0:i[0],timestamp:(new Date).toISOString()};console.log("[HeartbeatMetrics] Heartbeat skipped:",e),I("HeartbeatSkipped",e)}if(p&&p.response&&([t,n]=p.response),!t){n=(new TextEncoder).encode('{ "status": 200, "message": "OK", "service": "Presence" }').buffer;const e=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${n.byteLength}`});t=new Response(n,{status:200,headers:e})}const c=J([t,n]);return c.url=`${e.request.origin}${e.request.path}`,c.clientIdentifier=e.clientIdentifier,c.identifier=e.request.identifier,void B(a,c)}Ie("Started heartbeat request.");for(const t of he(e))Ie({messageType:"network-request",message:c});L(c,(()=>[a]),((t,n,s)=>{p&&(p.response=s),r&&!r.completedAt&&(r.completedAt=Date.now(),r.fetchCompletedAt=Date.now()),V(t,n,s,e.request),s[0].status>=400&&s[0].status<500&&ae(a)}),((t,n,s)=>{r&&!r.completedAt&&(r.completedAt=Date.now(),r.error=s instanceof Error?s.message:String(s)),V(t,n,null,e.request,X(s))})),n||oe(a)},G=(e,t,n)=>{var r,s,i;const o=null!=t?t:$[e.clientIdentifier],a=_(e,t);if(!o)return;const{subscription:c,heartbeat:u}=o,l=null!=n?n:null==c?void 0:c.serviceRequestId;if(c&&0===c.channels.length&&0===c.channelGroups.length&&(c.channelGroupQuery="",c.path="",c.previousTimetoken="0",c.timetoken="0",delete c.region,delete c.serviceRequestId,delete c.request),O[o.subscriptionKey]&&u&&0===u.channels.length&&0===u.channelGroups.length){const e=null!==(r=O[i=o.subscriptionKey])&&void 0!==r?r:O[i]={},t=`${o.userId}_${null!==(s=qe(o))&&void 0!==s?s:""}`;e[t]&&e[t].clientIdentifier===o.clientIdentifier&&delete e[t].clientIdentifier,delete u.heartbeatEvent,ae(o)}if(!a){const t=(new TextEncoder).encode('{"status": 200, "action": "leave", "message": "OK", "service":"Presence"}'),n=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${t.length}`}),r=new Response(t,{status:200,headers:n}),s=J([r,t]);return s.url=`${e.request.origin}${e.request.path}`,s.clientIdentifier=e.clientIdentifier,s.identifier=e.request.identifier,void B(o,s)}Ie("Started leave request.");for(const n of pe(e,t))Ie({messageType:"network-request",message:a});if(L(a,(()=>[o]),((t,n,r)=>{V(t,n,r,e.request)}),((t,n,r)=>{V(t,n,null,e.request,X(r))})),void 0===l)return;const d=M(l);d.forEach((e=>{e&&e.subscription&&delete e.subscription.serviceRequestId})),U(l),F(d)},K=e=>{const t=$[e.clientIdentifier];if(!t||!t.subscription)return;const n=t.subscription.serviceRequestId;t&&n&&(delete t.subscription.serviceRequestId,t.subscription.request&&t.subscription.request.identifier===e.identifier&&delete t.subscription.request,U(n))},F=e=>{let t,n;for(const r of e)if(r.subscription&&r.subscription.request){n=r.subscription.request,t=r;break}if(!n||!t)return;const r={type:"send-request",clientIdentifier:t.clientIdentifier,subscriptionKey:t.subscriptionKey,request:n};R([[t,r]],r)},L=(t,n,r,s,i)=>{var o,a;const u={requestId:t.identifier,requestType:q(t),url:`${t.origin||""}${t.path}`,method:t.method,queuedAt:Date.now(),queueDepthAtStart:l.size,concurrentRequestsAtStart:l.size};if(t.queryParameters){const e=t.queryParameters;if(e["channel-group"]&&(u.channelGroups=e["channel-group"].split(",")),t.path.includes("/v2/subscribe/")){const e=t.path.split("/"),n=e.indexOf("subscribe")+2;n<e.length&&(u.channels=decodeURIComponent(e[n]).split(","))}}l.set(t.identifier,u),c.set(t.identifier,u);const d=g++;b.push({requestId:t.identifier,type:u.requestType,queuedAt:u.queuedAt,order:d}),y.totalQueued++,y.maxQueueDepth=Math.max(y.maxQueueDepth,b.length),y.requestOrdering.set(t.identifier,{queueOrder:d,executionOrder:-1}),"heartbeat"===u.requestType&&console.log(`[NetworkTiming] Heartbeat request ${t.identifier} queued:`,{queueDepth:u.queueDepthAtStart,concurrent:u.concurrentRequestsAtStart,queuePosition:d,url:u.url,channels:(null===(o=u.channels)||void 0===o?void 0:o.length)||0,channelGroups:(null===(a=u.channelGroups)||void 0===a?void 0:a.length)||0}),e(void 0,void 0,void 0,(function*(){var e;const o=z(t);u.fetchStartedAt=Date.now();const a=u.fetchStartedAt-u.queuedAt,c=y.requestOrdering.get(t.identifier);if(c){c.executionOrder=g++;const e=c.executionOrder-c.queueOrder;"heartbeat"===u.requestType&&e>5&&console.warn(`[RequestQueue] Heartbeat executed out of order by ${e} positions`,{requestId:t.identifier,queueOrder:c.queueOrder,executionOrder:c.executionOrder})}const d=b.findIndex((e=>e.requestId===t.identifier));-1!==d&&b.splice(d,1),"heartbeat"===u.requestType&&a>100&&(console.warn(`[NetworkTiming] Heartbeat delayed in queue: ${a}ms`,{requestId:t.identifier,queueDepth:l.size,queueDelay:a,remainingInQueue:b.length}),y.heartbeatDelays.push(a)),!t.origin||new URL(t.origin).hostname,p.set(t.identifier,{startTime:Date.now(),requestId:t.identifier}),f.totalConnections++,f.maxConcurrent=Math.max(f.maxConcurrent,p.size),p.size>6&&console.warn(`[ConnectionPool] High concurrent connections: ${p.size}`,{requestType:u.requestType,requestId:t.identifier,activeRequests:Array.from(p.keys())}),Promise.race([fetch(o,{signal:null===(e=A.get(t.identifier))||void 0===e?void 0:e.signal,keepalive:!0}),W(t.identifier,t.timeout)]).then((e=>e.arrayBuffer().then((t=>(u.responseSize=t.byteLength,u.status=e.status,[e,t]))))).then((e=>i?i(e):e)).then((e=>{u.fetchCompletedAt=Date.now(),l.delete(t.identifier),p.delete(t.identifier),m(u);const s=n();0!==s.length&&r(s,o,e)})).catch((e=>{u.fetchCompletedAt=Date.now(),u.error=e instanceof Error?e.message:String(e),l.delete(t.identifier),p.delete(t.identifier),m(u);const r=n();if(0===r.length)return;let i=e;if("string"==typeof e){const t=e.toLowerCase();i=new Error(e),!t.includes("timeout")&&t.includes("cancel")&&(i.name="AbortError")}if(u.error&&u.error.toLowerCase().includes("timeout")){const e={requestType:u.requestType,requestId:t.identifier,totalDuration:u.fetchCompletedAt-u.queuedAt,queueTime:u.fetchStartedAt?u.fetchStartedAt-u.queuedAt:"unknown",networkTime:u.fetchStartedAt?u.fetchCompletedAt-u.fetchStartedAt:"unknown",concurrentRequests:u.concurrentRequestsAtStart,activeConnectionsNow:p.size,channels:u.channels,channelGroups:u.channelGroups,url:u.url};if(console.error(`[NetworkTimeout] Request timed out after ${u.fetchCompletedAt-u.queuedAt}ms:`,e),I("NetworkTimeout",e),"heartbeat"===u.requestType){const e={pendingRequests:Array.from(l.entries()).map((([e,t])=>({id:e,type:t.requestType,queuedFor:Date.now()-t.queuedAt,started:!!t.fetchStartedAt}))),activeConnections:p.size,requestQueue:b.map((e=>({type:e.type,waitingFor:Date.now()-e.queuedAt})))};console.error("[NetworkTimeout] Current system state at heartbeat timeout:",e),I("NetworkTimeout",Object.assign({event:"heartbeat-timeout-state"},e))}}s(r,o,i)}))}))},U=e=>{if(0===M(e).length){const t=A.get(e);A.delete(e),delete j[e],t&&t.abort("Cancel request")}},W=(e,t)=>new Promise(((n,r)=>{const s=setTimeout((()=>{A.delete(e),clearTimeout(s),r(new Error("Request timeout"))}),1e3*t)})),M=e=>Object.values($).filter((t=>void 0!==t&&void 0!==t.subscription&&t.subscription.serviceRequestId===e)),N=(e,t)=>{delete j[t],e.forEach((e=>{e.subscription&&(delete e.subscription.request,delete e.subscription.serviceRequestId)}))},z=e=>{let t;const n=e.queryParameters;let r=e.path;if(e.headers){t={};for(const[n,r]of Object.entries(e.headers))t[n]=r}return n&&0!==Object.keys(n).length&&(r=`${r}?${Te(n)}`),new Request(`${e.origin}${r}`,{method:e.method,headers:t,redirect:"follow"})},H=e=>{var t,n,r,s,i;const o=$[e.clientIdentifier],c=o.subscription,u=de(c.timetoken,e),l=a.createUUID(),d=Object.assign({},e.request);let h,p;if(u.length>1){const i=le(u,e);if(i){const e=j[i],{channels:n,channelGroups:r}=null!==(t=o.subscription)&&void 0!==t?t:{channels:[],channelGroups:[]};if((!(n.length>0)||ge(e.channels,n))&&(!(r.length>0)||ge(e.channelGroups,r)))return i}const a=(null!==(n=D[o.subscriptionKey])&&void 0!==n?n:{})[o.userId],f={},b=new Set(c.channelGroups),g=new Set(c.channels);a&&c.objectsWithState.length&&c.objectsWithState.forEach((e=>{const t=a[e];t&&(f[e]=t)}));for(const e of u){const{subscription:t}=e;if(!t)continue;1!==u.length&&e.clientIdentifier===o.clientIdentifier||!t.timetoken||(h=t.timetoken,p=t.region),t.channelGroups.forEach(b.add,b),t.channels.forEach(g.add,g);const n=t.serviceRequestId;t.serviceRequestId=l,n&&j[n]&&U(n),a&&t.objectsWithState.forEach((e=>{const t=a[e];t&&!f[e]&&(f[e]=t)}))}const y=null!==(r=j[l])&&void 0!==r?r:j[l]={requestId:l,timetoken:null!==(s=d.queryParameters.tt)&&void 0!==s?s:"0",channelGroups:[],channels:[]};if(g.size){y.channels=Array.from(g).sort();const e=d.path.split("/");e[4]=y.channels.join(","),d.path=e.join("/")}if(b.size&&(y.channelGroups=Array.from(b).sort(),d.queryParameters["channel-group"]=y.channelGroups.join(",")),Object.keys(f).length&&(d.queryParameters.state=JSON.stringify(f)),d.queryParameters&&d.queryParameters.auth){const e=ve(u);e&&(d.queryParameters.auth=e)}}else j[l]={requestId:l,timetoken:null!==(i=d.queryParameters.tt)&&void 0!==i?i:"0",channelGroups:c.channelGroups,channels:c.channels};j[l]&&(d.queryParameters&&void 0!==d.queryParameters.tt&&void 0!==d.queryParameters.tr&&(j[l].region=d.queryParameters.tr),j[l].timetokenOverride=h,j[l].regionOverride=p),c.serviceRequestId=l,d.identifier=l;const f=u.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");if(f.length>0)for(const e of u)we(j[l],`Started aggregated request for clients: ${f}`,e);return d},Q=(e,t,n)=>{var r,s,i,o,a;const c=$[e.clientIdentifier],u=he(e),l=Object.assign({},e.request);if(!c||!c.heartbeat)return;const d=null!==(r=O[a=c.subscriptionKey])&&void 0!==r?r:O[a]={},h=`${c.userId}_${null!==(s=qe(c))&&void 0!==s?s:""}`,p=[...c.heartbeat.channelGroups],f=[...c.heartbeat.channels];let b,g,y=!1;if(d[h]){const{createdByActualRequest:e,channels:r,channelGroups:s,response:i}=d[h];!e&&t&&(d[h].createdByActualRequest=!0,d[h].timestamp=Date.now(),n=!0),b=null!==(o=c.heartbeat.presenceState)&&void 0!==o?o:{},g=ge(r,f)&&ge(s,p),i&&(y=i[0].status>=400)}else d[h]={createdByActualRequest:t,channels:f,channelGroups:p,clientIdentifier:c.clientIdentifier,timestamp:Date.now()},b=null!==(i=c.heartbeat.presenceState)&&void 0!==i?i:{},g=!1;let q=c.heartbeatInterval;for(const e of u)e.heartbeatInterval&&(q=Math.min(q,e.heartbeatInterval));if(g&&d[h].clientIdentifier){const e=d[h].timestamp+1e3*q,t=Date.now();if(!n&&!y&&t<e&&e-t>.05*q*1e3)return}delete d[h].response,d[h].clientIdentifier=c.clientIdentifier;for(const t of u){const{heartbeat:n}=t;void 0!==n&&t.clientIdentifier!==e.clientIdentifier&&(n.presenceState&&(b=Object.assign(Object.assign({},b),n.presenceState)),p.push(...n.channelGroups.filter((e=>!p.includes(e)))),f.push(...n.channels.filter((e=>!f.includes(e)))))}d[h].channels=f,d[h].channelGroups=p,n||(d[h].timestamp=Date.now());for(const e in Object.keys(b))f.includes(e)||p.includes(e)||delete b[e];if(0!==f.length||0!==p.length){if(f.length||p.length){const e=l.path.split("/");e[6]=f.length?f.join(","):",",l.path=e.join("/")}if(p.length&&(l.queryParameters["channel-group"]=p.join(",")),Object.keys(b).length?l.queryParameters.state=JSON.stringify(b):delete l.queryParameters.state,u.length>1&&l.queryParameters&&l.queryParameters.auth){const e=ve(u);e&&(l.queryParameters.auth=e)}return l}},_=(e,t)=>{var n;const r=null!=t?t:$[e.clientIdentifier],s=pe(e,t);let i=be(e.request),o=fe(e.request);const a=Object.assign({},e.request);if(r&&r.subscription){const{subscription:e}=r;if(o.length){e.channels=e.channels.filter((e=>!o.includes(e)));const t=e.path.split("/");if(","!==t[4]){const n=t[4].split(",").filter((e=>!o.includes(e)));t[4]=n.length?n.join(","):",",e.path=t.join("/")}}if(i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))),e.channelGroupQuery.length>0)){const t=e.channelGroupQuery.split(",").filter((e=>!i.includes(e)));e.channelGroupQuery=t.length?t.join(","):""}}if(r&&r.heartbeat){const{heartbeat:e}=r;o.length&&(e.channels=e.channels.filter((e=>!o.includes(e)))),i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))))}for(const t of s){const n=t.subscription;void 0!==n&&(t.clientIdentifier!==e.clientIdentifier&&(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")&&!n.channels.includes(e)))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")&&!n.channelGroups.includes(e))))))}const c=o.length+i.length;if(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")))),0!==o.length||0!==i.length){if(r&&O[r.subscriptionKey]&&(o.length||i.length)){const e=O[r.subscriptionKey],t=`${r.userId}_${null!==(n=qe(r))&&void 0!==n?n:""}`;if(e[t]){let{channels:n,channelGroups:r}=e[t];i.length&&(r=r.filter((e=>!o.includes(e)))),o.length&&(n=n.filter((e=>!o.includes(e)))),e[t].channelGroups=r,e[t].channels=n}}if(o.length){const e=a.path.split("/");e[6]=o.join(","),a.path=e.join("/")}if(i.length&&(a.queryParameters["channel-group"]=i.join(",")),s.length>1&&a.queryParameters&&a.queryParameters.auth){const e=ve(s);e&&(a.queryParameters.auth=e)}return a}if(r&&r.workerLogVerbosity){const e=s.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");Ie(c>0?"Leaving only presence channels which doesn't require presence leave. Ignoring leave request.":`Specified channels and groups still in use by other clients: ${e}. Ignoring leave request.`)}},B=(e,t)=>{var n;const r=(null!==(n=E[e.subscriptionKey])&&void 0!==n?n:{})[e.clientIdentifier];if(!r)return!1;try{return r.postMessage(t),!0}catch(t){e.workerLogVerbosity&&console.error(`[SharedWorker] Unable send message using message port: ${t}`)}return!1},V=(e,t,n,r,s)=>{var i,o;if(0===e.length)return;if(!s&&!n)return;const a=e.some((e=>e&&e.workerLogVerbosity)),c=null!==(i=E[e[0].subscriptionKey])&&void 0!==i?i:{},u=r.path.startsWith("/v2/subscribe");!s&&n&&(s=n[0].status>=400?X(void 0,n):J(n));const l={};let d,h=200;if(n){d=n[1].byteLength>0?n[1]:void 0;const{headers:e}=n[0];h=n[0].status,e.forEach(((e,t)=>l[t]=e.toLowerCase()))}const p={status:h,url:t.url,headers:l,body:d};if(a&&r&&!r.path.endsWith("/heartbeat")){const t=`Notify clients about ${u?"subscribe":"leave"} request completion: ${e.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ")}`;for(const n of e)Ie(t)}for(const t of e){if(u&&!t.subscription){if(a){const n=`${t.clientIdentifier} doesn't have active subscription. Don't notify about completion.`;for(const t of e)Ie(n)}continue}const n=c[t.clientIdentifier],{request:i}=null!==(o=t.subscription)&&void 0!==o?o:{};let l=null!=i?i:r;if(u||(l=r),n&&l){const e=Object.assign(Object.assign({},s),{clientIdentifier:t.clientIdentifier,identifier:l.identifier,url:`${l.origin}${l.path}`});if("request-process-success"===s.type&&t.workerLogVerbosity)Ie({messageType:"network-response",message:p});else if("request-process-error"===s.type&&t.workerLogVerbosity){const t=!!s.error&&("TIMEOUT"===s.error.type||"ABORTED"===s.error.type);let n=s.error?s.error.message:"Unknown";if(e.response){const t=e.response.headers["content-type"];if(e.response.body&&t&&(-1!==t.indexOf("javascript")||-1!==t.indexOf("json")))try{const t=JSON.parse((new TextDecoder).decode(e.response.body));"message"in t?n=t.message:"error"in t&&("string"==typeof t.error?n=t.error:"object"==typeof t.error&&"message"in t.error&&(n=t.error.message))}catch(e){}"Unknown"===n&&(n=e.response.status>=500?"Internal Server Error":400==e.response.status?"Bad request":403==e.response.status?"Access denied":`${e.response.status}`)}Ie({messageType:"network-request",message:r,details:n,canceled:t,failed:!t})}B(t,e)}else if(!n&&a){const n=`${t.clientIdentifier} doesn't have Shared Worker's communication channel. Don't notify about completion.`;for(const r of e)r.clientIdentifier!==t.clientIdentifier&&Ie(n)}}},J=e=>{var t;const[n,r]=e,s=r.byteLength>0?r:void 0,i=parseInt(null!==(t=n.headers.get("Content-Length"))&&void 0!==t?t:"0",10),o=n.headers.get("Content-Type"),a={};return n.headers.forEach(((e,t)=>a[t]=e.toLowerCase())),{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentLength:i,contentType:o,headers:a,status:n.status,body:s}}},X=(e,t)=>{if(t)return Object.assign(Object.assign({},J(t)),{type:"request-process-error"});let n="NETWORK_ISSUE",r="Unknown error",s="Error";e&&e instanceof Error&&(r=e.message,s=e.name);const i=r.toLowerCase();return i.includes("timeout")?n="TIMEOUT":("AbortError"===s||i.includes("aborted")||i.includes("cancel"))&&(r="Request aborted",n="ABORTED"),{type:"request-process-error",clientIdentifier:"",identifier:"",url:"",error:{name:s,type:n,message:r}}},Y=e=>{var t,n,r,s,i;const{clientIdentifier:o}=e;if($[o])return;const a=$[o]={clientIdentifier:o,subscriptionKey:e.subscriptionKey,userId:e.userId,heartbeatInterval:e.heartbeatInterval,newlyRegistered:!0,offlineClientsCheckInterval:e.workerOfflineClientsCheckInterval,unsubscribeOfflineClients:e.workerUnsubscribeOfflineClients,workerLogVerbosity:e.workerLogVerbosity},c=null!==(t=S[s=e.subscriptionKey])&&void 0!==t?t:S[s]=[];c.every((e=>e.clientIdentifier!==o))&&c.push(a),(null!==(n=E[i=e.subscriptionKey])&&void 0!==n?n:E[i]={})[o]=e.port;const u=`Registered PubNub client with '${o}' identifier. '${c.length}' clients currently active.`;for(const e of c)Ie(u);if(!T[e.subscriptionKey]&&(null!==(r=S[e.subscriptionKey])&&void 0!==r?r:[]).length>0){const{subscriptionKey:t}=e,n=e.workerOfflineClientsCheckInterval;for(const e of c)Ie(`Setup PubNub client ping event ${n} seconds`);T[t]=setTimeout((()=>ye(t)),500*n-1)}},Z=e=>{var t,n,r;const{clientIdentifier:s,userId:i,heartbeatInterval:o,accessToken:a,preProcessedToken:c}=e,u=$[s];if(!u)return;if(we({userId:i,heartbeatInterval:o,authKey:a,token:c},"Update client configuration:",u),i!==u.userId||a&&a!==(null!==(t=u.authKey)&&void 0!==t?t:"")){const e=null!==(n=O[u.subscriptionKey])&&void 0!==n?n:{},t=`${i}_${null!==(r=qe(u))&&void 0!==r?r:""}`;void 0!==e[t]&&delete e[t]}const l=u.heartbeatInterval!==o;u.userId=i,u.heartbeatInterval=o,a&&(u.authKey=a),c&&(u.accessToken=c),l&&oe(u,!0),ce(u),u.heartbeat&&u.heartbeat.heartbeatEvent&&x(u.heartbeat.heartbeatEvent,!1,!0,void 0)},ee=e=>{se(e.subscriptionKey,e.clientIdentifier)},te=e=>{var t,n,r,s,i,o,a,c,u,l,d,h,p,f,b,g,y,q,v,m;const I=e.request.queryParameters,{clientIdentifier:w}=e,T=$[w];let k=!1;if(!T)return;const A=null!==(t=I["channel-group"])&&void 0!==t?t:"",S=null!==(n=I.state)&&void 0!==n?n:"";let O=T.subscription;if(O){if(S.length>0){const e=JSON.parse(S),t=null!==(o=(g=null!==(i=D[b=T.subscriptionKey])&&void 0!==i?i:D[b]={})[y=T.userId])&&void 0!==o?o:g[y]={};Object.entries(e).forEach((([e,n])=>t[e]=n));for(const n of O.objectsWithState)e[n]||delete t[n];O.objectsWithState=Object.keys(e)}else if(O.objectsWithState.length){const e=null!==(c=(v=null!==(a=D[q=T.subscriptionKey])&&void 0!==a?a:D[q]={})[m=T.userId])&&void 0!==c?c:v[m]={};for(const t of O.objectsWithState)delete e[t];O.objectsWithState=[]}}else{if(k=!0,O={path:"",channelGroupQuery:"",channels:[],channelGroups:[],previousTimetoken:"0",timetoken:"0",objectsWithState:[]},S.length>0){const e=JSON.parse(S),t=null!==(s=(p=null!==(r=D[h=T.subscriptionKey])&&void 0!==r?r:D[h]={})[f=T.userId])&&void 0!==s?s:p[f]={};Object.entries(e).forEach((([e,n])=>t[e]=n)),O.objectsWithState=Object.keys(e)}T.subscription=O}if(O.path!==e.request.path){O.path=e.request.path;const t=fe(e.request);k||(k=!ge(O.channels,t)),O.channels=t}if(O.channelGroupQuery!==A){O.channelGroupQuery=A;const t=be(e.request);k||(k=!ge(O.channelGroups,t)),O.channelGroups=t}let{authKey:E}=T;return O.request=e.request,O.filterExpression=null!==(u=I["filter-expr"])&&void 0!==u?u:"",O.timetoken=null!==(l=I.tt)&&void 0!==l?l:"0",void 0!==I.tr&&(O.region=I.tr),T.authKey=null!==(d=I.auth)&&void 0!==d?d:"",T.origin=e.request.origin,T.userId=I.uuid,T.pnsdk=I.pnsdk,T.accessToken=e.preProcessedToken,T.newlyRegistered&&!E&&T.authKey&&(E=T.authKey),T.newlyRegistered=!1,k},ne=e=>{var t,n,r;const{clientIdentifier:s}=e,i=$[s],{request:o}=e,a=null!==(t=o.queryParameters)&&void 0!==t?t:{};if(!i)return;const c=null!==(n=i.heartbeat)&&void 0!==n?n:i.heartbeat={channels:[],channelGroups:[]};c.heartbeatEvent=Object.assign({},e),c.channelGroups=be(o).filter((e=>!e.endsWith("-pnpres"))),c.channels=fe(o).filter((e=>!e.endsWith("-pnpres")));const u=null!==(r=a.state)&&void 0!==r?r:"";if(u.length>0){const e=JSON.parse(u);for(const t of Object.keys(e))c.channels.includes(t)||c.channelGroups.includes(t)||delete e[t];c.presenceState=e}i.accessToken=e.preProcessedToken},re=e=>{const t=$[e.clientIdentifier];t&&(t.lastPongEvent=(new Date).getTime()/1e3)},se=(e,t)=>{var n,r,s;const i=$[t];delete $[t];let o,a=S[e];if(i){if(i.subscription&&(o=i.subscription.serviceRequestId,delete i.subscription.serviceRequestId,o&&U(o)),ae(i),O[e]){const t=null!==(n=O[e])&&void 0!==n?n:O[e]={},s=`${i.userId}_${null!==(r=qe(i))&&void 0!==r?r:""}`;t[s]&&t[s].clientIdentifier===i.clientIdentifier&&delete t[s].clientIdentifier}i.unsubscribeOfflineClients&&ie(i,o)}if(a)if(a=a.filter((e=>e.clientIdentifier!==t)),a.length>0?S[e]=a:(delete S[e],delete O[e]),0===a.length&&delete D[e],a.length>0){const n=E[e];n&&(delete n[t],0===Object.keys(n).length&&delete E[e])}else delete E[e];const c=`Invalidate '${t}' client. '${(null!==(s=S[e])&&void 0!==s?s:[]).length}' clients currently active.`;if(a)for(const e of a)Ie(c);else Ie(c)},ie=(e,n)=>{if(!e.subscription)return;const{channels:r,channelGroups:s}=e.subscription,i=(null!=s?s:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>ke(e))).sort(),o=(null!=r?r:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>ke(e))).sort();if(0===o.length&&0===i.length)return;const c=i.length>0?i.join(","):void 0,u=0===o.length?",":o.join(","),l=Object.assign(Object.assign({instanceid:e.clientIdentifier,uuid:e.userId,requestid:a.createUUID()},e.authKey?{auth:e.authKey}:{}),c?{"channel-group":c}:{}),d={type:"send-request",clientIdentifier:e.clientIdentifier,subscriptionKey:e.subscriptionKey,request:{origin:e.origin,path:`/v2/presence/sub-key/${e.subscriptionKey}/channel/${u}/leave`,queryParameters:l,method:t.GET,headers:{},timeout:10,cancellable:!1,compressible:!1,identifier:l.requestid}};G(d,e,n)},oe=(e,t=!1)=>{const{heartbeat:n,heartbeatInterval:r}=e;if(!(r&&r>0&&void 0!==n&&n.heartbeatEvent&&(n.channels.length>0||n.channelGroups.length>0)))return void ae(e);if(t&&!n.loop)return;let s=r;if(t&&n.loop&&s!==n.loop.heartbeatInterval){const e=(Date.now()-n.loop.startTimestamp)/1e3;e<s&&(s-=e)}if(ae(e),s<=0)return;const i=Date.now(),o=i+1e3*s,d=`hb-${e.clientIdentifier}-${i}`,h={scheduledAt:i,expectedFireAt:o,queueDepthAtFire:l.size};u.set(d,h);const p={targetInterval:s,expectedFireAt:new Date(o).toISOString(),currentPendingRequests:l.size,channels:n.channels.length,channelGroups:n.channelGroups.length};console.log(`[HeartbeatTimer] Scheduling heartbeat for client ${e.clientIdentifier}:`,p),I("HeartbeatTimer",Object.assign({event:"scheduled",clientId:e.clientIdentifier},p)),n.loop={timer:setTimeout((()=>{const t=Date.now();if(h.actualFiredAt=t,h.delayFromExpected=t-o,h.queueDepthAtFire=l.size,Math.abs(h.delayFromExpected)>100&&console.warn(`[HeartbeatTimer] Heartbeat timer fired ${h.delayFromExpected}ms off schedule:`,{clientId:e.clientIdentifier,expected:new Date(o).toISOString(),actual:new Date(t).toISOString(),delay:h.delayFromExpected,pendingRequests:l.size}),ae(e),!e.heartbeat||!e.heartbeat.heartbeatEvent)return h.skipped=!0,void(h.skipReason="No heartbeat event available");const{request:n}=e.heartbeat.heartbeatEvent;n.identifier=a.createUUID(),n.queryParameters.requestid=n.identifier;const r=c.get(n.identifier);r&&(r.timerToFetchDelay=Date.now()-t),x(e.heartbeat.heartbeatEvent,!1,!1,h)}),1e3*s),heartbeatInterval:r,startTimestamp:i}},ae=e=>{const{heartbeat:t}=e;void 0!==t&&t.loop&&(clearTimeout(t.loop.timer),delete t.loop)},ce=e=>{var t,n,r;const{subscription:s,heartbeat:i}=e;if(s&&s.request&&s.request.queryParameters){const t=s.request.queryParameters;e.authKey&&e.authKey.length>0?t.auth=e.authKey:t.auth&&delete t.auth}if((null==i?void 0:i.heartbeatEvent)&&i.heartbeatEvent.request){e.accessToken&&(i.heartbeatEvent.preProcessedToken=e.accessToken);const s=null!==(t=O[r=e.subscriptionKey])&&void 0!==t?t:O[r]={},o=`${e.userId}_${null!==(n=qe(e))&&void 0!==n?n:""}`;s[o]&&s[o].response&&delete s[o].response,i.heartbeatEvent.request.identifier=a.createUUID();const c=i.heartbeatEvent.request.queryParameters;c.requestid=i.heartbeatEvent.request.identifier,e.authKey&&e.authKey.length>0?c.auth=e.authKey:c.auth&&delete c.auth}},ue=e=>{const{clientIdentifier:t,subscriptionKey:n}=e.data;return!(!t||"string"!=typeof t)&&!(!n||"string"!=typeof n)},le=(e,t)=>{var n;const r=null!==(n=t.request.queryParameters["channel-group"])&&void 0!==n?n:"",s=t.request.path;let i,o;for(const n of e){const{subscription:e}=n;if(!e||!e.serviceRequestId)continue;const a=$[t.clientIdentifier],c=e.serviceRequestId;if(e.path===s&&e.channelGroupQuery===r)return Ie(`Found identical request started by '${n.clientIdentifier}' client. \nWaiting for existing '${c}' request completion.`),e.serviceRequestId;{const r=j[e.serviceRequestId];if(i||(i=be(t.request)),o||(o=fe(t.request)),o.length&&!ge(r.channels,o))continue;if(i.length&&!ge(r.channelGroups,i))continue;return we(r,`'${t.request.identifier}' request channels and groups are subset of ongoing '${c}' request \nwhich has started by '${n.clientIdentifier}' client. Waiting for existing '${c}' request completion.`,a),e.serviceRequestId}}},de=(e,t)=>{var n,r;const s=$[t.clientIdentifier];if(!s)return[];const i=t.request.queryParameters,o=qe(s),a=null!==(n=i["filter-expr"])&&void 0!==n?n:"",c=i.uuid;return(null!==(r=S[t.subscriptionKey])&&void 0!==r?r:[]).filter((t=>t.userId===c&&qe(t)===o&&t.subscription&&(0!==t.subscription.channels.length||0!==t.subscription.channelGroups.length)&&t.subscription.filterExpression===a&&("0"===e||"0"===t.subscription.timetoken||t.subscription.timetoken===e)))},he=e=>pe(e),pe=(e,t)=>{var n;const r=null!=t?t:$[e.clientIdentifier];if(!r)return[];const s=e.request.queryParameters,i=qe(r),o=s.uuid;return(null!==(n=S[e.subscriptionKey])&&void 0!==n?n:[]).filter((e=>e.userId===o&&qe(e)===i))},fe=e=>{const t=e.path.split("/")[e.path.startsWith("/v2/subscribe/")?4:6];return","===t?[]:t.split(",").filter((e=>e.length>0))},be=e=>{var t;const n=null!==(t=e.queryParameters["channel-group"])&&void 0!==t?t:"";return 0===n.length?[]:n.split(",").filter((e=>e.length>0))},ge=(e,t)=>{const n=new Set(e);return t.every(n.has,n)},ye=e=>{const t={type:"shared-worker-ping"},n=Object.values($).filter((t=>t&&t.subscriptionKey===e));if(n.forEach((e=>{let r=!1;if(e&&e.lastPingRequest){const t=e.offlineClientsCheckInterval;if(!e.lastPongEvent||Math.abs(e.lastPongEvent-e.lastPingRequest)>.5*t){r=!0;for(const t of n)Ie(`'${e.clientIdentifier}' client is inactive. Invalidating...`);se(e.subscriptionKey,e.clientIdentifier)}}e&&!r&&(e.lastPingRequest=(new Date).getTime()/1e3,B(e,t))})),n&&n.length>0&&n[0]){const t=n[0].offlineClientsCheckInterval;T[e]=setTimeout((()=>ye(e)),500*t-1)}},qe=e=>{var t;return e.accessToken&&null!==(t=e.accessToken.token)&&void 0!==t?t:e.authKey},ve=e=>{const t=e.filter((e=>!!e.accessToken)).sort(((e,t)=>e.accessToken.expiration-t.accessToken.expiration)).pop();return t?t.authKey:void 0},me=e=>{const t=qe(e);let n=`${e.userId}-${e.subscriptionKey}${t?`-${t}`:""}`;return e.subscription&&e.subscription.filterExpression&&(n+=`-${e.subscription.filterExpression}`),n},Ie=(e,t)=>{console.log(e)},we=(e,t,n)=>{const r=(n?[n]:Object.values($)).filter((e=>e&&e.workerLogVerbosity)),s={type:"shared-worker-console-dir",message:t,data:e};r.forEach((e=>{e&&B(e,s)}))},Te=e=>Object.keys(e).map((t=>{const n=e[t];return Array.isArray(n)?n.map((e=>`${t}=${ke(e)}`)).join("&"):`${t}=${ke(n)}`})).join("&"),ke=e=>encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}));
