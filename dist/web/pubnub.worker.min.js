!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";function e(e,t,n,r){return new(n||(n=Promise))((function(s,i){function o(e){try{l(r.next(e))}catch(e){i(e)}}function c(e){try{l(r.throw(e))}catch(e){i(e)}}function l(e){var t;e.done?s(e.value):(t=e.value,t instanceof n?t:new n((function(e){e(t)}))).then(o,c)}l((r=r.apply(e,t||[])).next())}))}var t;"function"==typeof SuppressedError&&SuppressedError,function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.LOCAL="LOCAL"}(t||(t={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function n(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var r,s,i={exports:{}};
/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */r=i,function(e){var t="0.1.0",n={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function r(){var e,t,n="";for(e=0;e<32;e++)t=16*Math.random()|0,8!==e&&12!==e&&16!==e&&20!==e||(n+="-"),n+=(12===e?4:16===e?3&t|8:t).toString(16);return n}function s(e,t){var r=n[t||"all"];return r&&r.test(e)||!1}r.isUUID=s,r.VERSION=t,e.uuid=r,e.isUUID=s}(s=i.exports),null!==r&&(r.exports=s.uuid);var o=n(i.exports),c={createUUID:()=>o.uuid?o.uuid():o()};const l=new Map,a={},u=c.createUUID(),d=new Map,h={},f={},p={},b={},g={},v={};self.onconnect=e=>{oe("New PubNub Client connected to the Subscription Shared Worker."),e.ports.forEach((e=>{e.start(),e.onmessage=t=>{if(!J(t))return;const n=t.data;if("client-register"===n.type)n.port=e,x(n),oe(`Client '${n.clientIdentifier}' registered with '${u}' shared worker`);else if("client-update"===n.type)U(n);else if("client-unregister"===n.type)F(n);else if("client-pong"===n.type)_(n);else if("send-request"===n.type)if(n.request.path.startsWith("/v2/subscribe")){const e=D(n),t=h[n.clientIdentifier];if(t){const r=ie(t);let s=[];if(l.has(r)&&(s=l.get(r)[0]),s.push([t,n]),l.has(r)&&e&&(clearTimeout(l.get(r)[1]),l.delete(r)),!l.has(r)){const e=setTimeout((()=>{y(s,n),l.delete(r)}),50);l.set(r,[s,e])}}}else n.request.path.endsWith("/heartbeat")?(N(n),m(n)):k(n);else"cancel-request"===n.type&&$(n)},e.postMessage({type:"shared-worker-connected"})}))};const y=(e,t)=>{const n=G(t),r=h[t.clientIdentifier];r&&(e=e.filter((e=>e[0].clientIdentifier!==r.clientIdentifier)),I(r,t,n,!0),e.forEach((([e,t])=>I(e,t,n,!1))))},I=(e,t,n,r)=>{var s;let i=!1;if(r||"string"==typeof n||(n=n.identifier),e.subscription&&(i="0"===e.subscription.timetoken),"string"==typeof n){const r=v[n];if(e){if(e.subscription&&(e.subscription.timetoken=r.timetoken,e.subscription.region=r.region,e.subscription.serviceRequestId=n),!i)return;const o=(new TextEncoder).encode(`{"t":{"t":"${r.timetoken}","r":${null!==(s=r.region)&&void 0!==s?s:"0"}},"m":[]}`),c=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${o.length}`}),l=new Response(o,{status:200,headers:c}),a=L([l,o]);a.url=`${t.request.origin}${t.request.path}`,a.clientIdentifier=t.clientIdentifier,a.identifier=t.request.identifier,R(e,a)}return}t.request.cancellable&&d.set(n.identifier,new AbortController);const o=v[n.identifier],{timetokenOverride:c,regionOverride:l}=o;T(n,(()=>E(n.identifier)),((e,r,s)=>{A(e,r,s,t.request),P(e,n.identifier)}),((e,r,s)=>{A(e,r,null,t.request,W(s)),P(e,n.identifier)}),(e=>{let t=e;return i&&c&&"0"!==c&&(t=q(t,c,l)),t})),oe(`'${Object.keys(v).length}' subscription request currently active.`)},q=(e,t,n)=>{if(void 0===t||"0"===t||e[0].status>=400)return e;let r;const s=e[0];let i=s,o=e[1];try{r=JSON.parse((new TextDecoder).decode(o))}catch(t){return oe(`Subscribe response parse error: ${t}`),e}r.t.t=t,n&&(r.t.r=parseInt(n,10));try{if(o=(new TextEncoder).encode(JSON.stringify(r)).buffer,o.byteLength){const e=new Headers(s.headers);e.set("Content-Length",`${o.byteLength}`),i=new Response(o,{status:s.status,statusText:s.statusText,headers:e})}}catch(t){return oe(`Subscribe serialization error: ${t}`),e}return o.byteLength>0?[i,o]:e},m=(e,t=!0)=>{var n;const r=h[e.clientIdentifier],s=K(e,t);if(!r)return;const i=`${r.userId}_${null!==(n=re(r))&&void 0!==n?n:""}`,o=p[r.subscriptionKey],c=(null!=o?o:{})[i];if(!s){let t,n;if(oe(`Previous heartbeat request has been sent less than ${r.heartbeatInterval} seconds ago. Skipping...`,r),c&&c.response&&([t,n]=c.response),!t){n=(new TextEncoder).encode('{ "status": 200, "message": "OK", "service": "Presence" }').buffer;const e=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${n.byteLength}`});t=new Response(n,{status:200,headers:e})}const s=L([t,n]);return s.url=`${e.request.origin}${e.request.path}`,s.clientIdentifier=e.clientIdentifier,s.identifier=e.request.identifier,void R(r,s)}T(s,(()=>[r]),((t,n,r)=>{c&&(c.response=r),A(t,n,r,e.request)}),((t,n,r)=>{A(t,n,null,e.request,W(r))})),oe("Started heartbeat request.",r)},k=(e,t,n)=>{var r,s,i;const o=null!=t?t:h[e.clientIdentifier],c=C(e,t);if(!o)return;const{subscription:l,heartbeat:a}=o,u=null!=n?n:null==l?void 0:l.serviceRequestId;if(l&&0===l.channels.length&&0===l.channelGroups.length&&(l.channelGroupQuery="",l.path="",l.previousTimetoken="0",l.timetoken="0",delete l.region,delete l.serviceRequestId,delete l.request),p[o.subscriptionKey]&&a&&0===a.channels.length&&0===a.channelGroups.length){const e=null!==(r=p[i=o.subscriptionKey])&&void 0!==r?r:p[i]={},t=`${o.userId}_${null!==(s=re(o))&&void 0!==s?s:""}`;e[t]&&e[t].clientIdentifier===o.clientIdentifier&&delete e[t].clientIdentifier,a.timer&&(clearInterval(a.timer),delete a.heartbeatEvent,delete a.timer)}if(!c){const t=(new TextEncoder).encode('{"status": 200, "action": "leave", "message": "OK", "service":"Presence"}'),n=new Headers({"Content-Type":'text/javascript; charset="UTF-8"',"Content-Length":`${t.length}`}),r=new Response(t,{status:200,headers:n}),s=L([r,t]);return s.url=`${e.request.origin}${e.request.path}`,s.clientIdentifier=e.clientIdentifier,s.identifier=e.request.identifier,void R(o,s)}if(T(c,(()=>[o]),((t,n,r)=>{A(t,n,r,e.request)}),((t,n,r)=>{A(t,n,null,e.request,W(r))})),oe("Started leave request.",o),void 0===u)return;const d=E(u);d.forEach((e=>{e&&e.subscription&&delete e.subscription.serviceRequestId})),O(u),w(d)},$=e=>{const t=h[e.clientIdentifier];if(!t||!t.subscription)return;const n=t.subscription.serviceRequestId;t&&n&&(delete t.subscription.serviceRequestId,t.subscription.request&&t.subscription.request.identifier===e.identifier&&delete t.subscription.request,O(n))},w=e=>{let t,n;for(const r of e)if(r.subscription&&r.subscription.request){n=r.subscription.request,t=r;break}if(!n||!t)return;const r={type:"send-request",clientIdentifier:t.clientIdentifier,subscriptionKey:t.subscriptionKey,request:n};y([[t,r]],r)},T=(t,n,r,s,i)=>{e(void 0,void 0,void 0,(function*(){var e;const o=S(t);console.log("~~~~~> TRYING"),console.dir(n());for(const e of n())console.dir("~~~~~> SENDING CONSOLE ABOUT START TO THE CLIENT"),oe({messageType:"network-request",message:t},e);Promise.race([fetch(o,{signal:null===(e=d.get(t.identifier))||void 0===e?void 0:e.signal,keepalive:!0}),j(t.identifier,t.timeout)]).then((e=>e.arrayBuffer().then((t=>[e,t])))).then((e=>i?i(e):e)).then((e=>{const t=n();0!==t.length&&r(t,o,e)})).catch((e=>{const t=n();if(0===t.length)return;let r=e;if("string"==typeof e){const t=e.toLowerCase();r=new Error(e),!t.includes("timeout")&&t.includes("cancel")&&(r.name="AbortError")}s(t,o,r)}))}))},O=e=>{if(0===E(e).length){const t=d.get(e);d.delete(e),delete v[e],t&&t.abort("Cancel request")}},j=(e,t)=>new Promise(((n,r)=>{const s=setTimeout((()=>{d.delete(e),clearTimeout(s),r(new Error("Request timeout"))}),1e3*t)})),E=e=>Object.values(h).filter((t=>void 0!==t&&void 0!==t.subscription&&t.subscription.serviceRequestId===e)),P=(e,t)=>{delete v[t],e.forEach((e=>{e.subscription&&(delete e.subscription.request,delete e.subscription.serviceRequestId)}))},S=e=>{let t;const n=e.queryParameters;let r=e.path;if(e.headers){t={};for(const[n,r]of Object.entries(e.headers))t[n]=r}return n&&0!==Object.keys(n).length&&(r=`${r}?${le(n)}`),new Request(`${e.origin}${r}`,{method:e.method,headers:t,redirect:"follow"})},G=e=>{var t,n,r,s,i;const o=h[e.clientIdentifier],l=o.subscription,a=z(l.timetoken,e),u=c.createUUID(),d=Object.assign({},e.request);let f,p;if(a.length>1){const i=B(a,e);if(i){const e=v[i],{channels:n,channelGroups:r}=null!==(t=o.subscription)&&void 0!==t?t:{channels:[],channelGroups:[]};if((!(n.length>0)||te(e.channels,n))&&(!(r.length>0)||te(e.channelGroups,r)))return i}const c=(null!==(n=b[o.subscriptionKey])&&void 0!==n?n:{})[o.userId],h={},g=new Set(l.channelGroups),y=new Set(l.channels);c&&l.objectsWithState.length&&l.objectsWithState.forEach((e=>{const t=c[e];t&&(h[e]=t)}));for(const e of a){const{subscription:t}=e;if(!t)continue;1!==a.length&&e.clientIdentifier===o.clientIdentifier||!t.timetoken||(f=t.timetoken,p=t.region),t.channelGroups.forEach(g.add,g),t.channels.forEach(y.add,y);const n=t.serviceRequestId;t.serviceRequestId=u,n&&v[n]&&O(n),c&&t.objectsWithState.forEach((e=>{const t=c[e];t&&!h[e]&&(h[e]=t)}))}const I=null!==(r=v[u])&&void 0!==r?r:v[u]={requestId:u,timetoken:null!==(s=d.queryParameters.tt)&&void 0!==s?s:"0",channelGroups:[],channels:[]};if(y.size){I.channels=Array.from(y).sort();const e=d.path.split("/");e[4]=I.channels.join(","),d.path=e.join("/")}if(g.size&&(I.channelGroups=Array.from(g).sort(),d.queryParameters["channel-group"]=I.channelGroups.join(",")),Object.keys(h).length&&(d.queryParameters.state=JSON.stringify(h)),d.queryParameters&&d.queryParameters.auth){const e=se(a);e&&(d.queryParameters.auth=e)}}else v[u]={requestId:u,timetoken:null!==(i=d.queryParameters.tt)&&void 0!==i?i:"0",channelGroups:l.channelGroups,channels:l.channels};v[u]&&(d.queryParameters&&void 0!==d.queryParameters.tt&&void 0!==d.queryParameters.tr&&(v[u].region=d.queryParameters.tr),v[u].timetokenOverride=f,v[u].regionOverride=p),l.serviceRequestId=u,d.identifier=u;const g=a.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");if(g.length>0)for(const e of a)ce(v[u],`Started aggregated request for clients: ${g}`,e);return d},K=(e,t)=>{var n,r,s,i,o;const c=h[e.clientIdentifier],l=Y(e),a=Object.assign({},e.request);if(!c||!c.heartbeat)return;const u=null!==(n=p[o=c.subscriptionKey])&&void 0!==n?n:p[o]={},d=`${c.userId}_${null!==(r=re(c))&&void 0!==r?r:""}`,f=[...c.heartbeat.channelGroups],b=[...c.heartbeat.channels];let g,v,y=!1;if(u[d]){const{channels:e,channelGroups:t,response:n}=u[d];g=null!==(i=c.heartbeat.presenceState)&&void 0!==i?i:{},v=te(e,b)&&te(t,f),n&&(y=n[0].status>=400)}else u[d]={channels:b,channelGroups:f,clientIdentifier:c.clientIdentifier,timestamp:Date.now()},g=null!==(s=c.heartbeat.presenceState)&&void 0!==s?s:{},v=!1;let I=c.heartbeatInterval;for(const e of l)e.heartbeatInterval&&(I=Math.min(I,e.heartbeatInterval));if(v&&u[d].clientIdentifier){const e=u[d].timestamp+1e3*I,n=Date.now();if(t&&!y&&n<e&&e-n>.05*I*1e3)return}delete u[d].response,u[d].clientIdentifier=c.clientIdentifier;for(const t of l){const{heartbeat:n}=t;void 0!==n&&t.clientIdentifier!==e.clientIdentifier&&(n.presenceState&&(g=Object.assign(Object.assign({},g),n.presenceState)),f.push(...n.channelGroups.filter((e=>!f.includes(e)))),b.push(...n.channels.filter((e=>!b.includes(e)))))}u[d].channels=b,u[d].channelGroups=f,t&&(u[d].timestamp=Date.now());for(const e in Object.keys(g))b.includes(e)||f.includes(e)||delete g[e];if(0!==b.length||0!==f.length){if(b.length||f.length){const e=a.path.split("/");e[6]=b.length?b.join(","):",",a.path=e.join("/")}if(f.length&&(a.queryParameters["channel-group"]=f.join(",")),Object.keys(g).length?a.queryParameters.state=JSON.stringify(g):delete a.queryParameters.state,l.length>1&&a.queryParameters&&a.queryParameters.auth){const e=se(l);e&&(a.queryParameters.auth=e)}return a}},C=(e,t)=>{var n;const r=null!=t?t:h[e.clientIdentifier],s=X(e,t);let i=ee(e.request),o=Z(e.request);const c=Object.assign({},e.request);if(r&&r.subscription){const{subscription:e}=r;if(o.length){e.channels=e.channels.filter((e=>!o.includes(e)));const t=e.path.split("/");if(","!==t[4]){const n=t[4].split(",").filter((e=>!o.includes(e)));t[4]=n.length?n.join(","):",",e.path=t.join("/")}}if(i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))),e.channelGroupQuery.length>0)){const t=e.channelGroupQuery.split(",").filter((e=>!i.includes(e)));e.channelGroupQuery=t.length?t.join(","):""}}if(r&&r.heartbeat){const{heartbeat:e}=r;o.length&&(e.channels=e.channels.filter((e=>!o.includes(e)))),i.length&&(e.channelGroups=e.channelGroups.filter((e=>!i.includes(e))))}for(const t of s){const n=t.subscription;void 0!==n&&(t.clientIdentifier!==e.clientIdentifier&&(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")&&!n.channels.includes(e)))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")&&!n.channelGroups.includes(e))))))}const l=o.length+i.length;if(o.length&&(o=o.filter((e=>!e.endsWith("-pnpres")))),i.length&&(i=i.filter((e=>!e.endsWith("-pnpres")))),0!==o.length||0!==i.length){if(r&&p[r.subscriptionKey]&&(o.length||i.length)){const e=p[r.subscriptionKey],t=`${r.userId}_${null!==(n=re(r))&&void 0!==n?n:""}`;if(e[t]){let{channels:n,channelGroups:r}=e[t];i.length&&(r=r.filter((e=>!o.includes(e)))),o.length&&(n=n.filter((e=>!o.includes(e)))),e[t].channelGroups=r,e[t].channels=n}}if(o.length){const e=c.path.split("/");e[6]=o.join(","),c.path=e.join("/")}if(i.length&&(c.queryParameters["channel-group"]=i.join(",")),s.length>1&&c.queryParameters&&c.queryParameters.auth){const e=se(s);e&&(c.queryParameters.auth=e)}return c}if(r&&r.workerLogVerbosity){const e=s.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ");oe(l>0?"Leaving only presence channels which doesn't require presence leave. Ignoring leave request.":`Specified channels and groups still in use by other clients: ${e}. Ignoring leave request.`,r)}},R=(e,t)=>{var n;const r=(null!==(n=g[e.subscriptionKey])&&void 0!==n?n:{})[e.clientIdentifier];if(!r)return!1;try{return r.postMessage(t),!0}catch(t){e.workerLogVerbosity&&console.error(`[SharedWorker] Unable send message using message port: ${t}`)}return!1},A=(e,t,n,r,s)=>{var i,o;if(0===e.length)return;if(!s&&!n)return;const c=e.some((e=>e&&e.workerLogVerbosity)),l=null!==(i=g[e[0].subscriptionKey])&&void 0!==i?i:{},a=r.path.startsWith("/v2/subscribe");!s&&n&&(s=n[0].status>=400?W(void 0,n):L(n));const u={};let d,h=200;if(n){d=n[1].byteLength>0?n[1]:void 0;const{headers:e}=n[0];h=n[0].status,e.forEach(((e,t)=>u[t]=e.toLowerCase()))}const f={status:h,url:t.url,headers:u,body:d};if(c&&r&&!r.path.endsWith("/heartbeat")){const t=`Notify clients about ${a?"subscribe":"leave"} request completion: ${e.reduce(((e,{clientIdentifier:t})=>(e.push(t),e)),[]).join(", ")}`;for(const n of e)oe(t,n)}for(const t of e){if(a&&!t.subscription){if(c){const n=`${t.clientIdentifier} doesn't have active subscription. Don't notify about completion.`;for(const t of e)oe(n,t)}continue}const n=l[t.clientIdentifier],{request:i}=null!==(o=t.subscription)&&void 0!==o?o:{};let u=null!=i?i:r;if(a||(u=r),n&&u){const e=Object.assign(Object.assign({},s),{clientIdentifier:t.clientIdentifier,identifier:u.identifier,url:`${u.origin}${u.path}`});if("request-process-success"===s.type)oe({messageType:"network-response",message:f},t);else{const e="TIMEOUT"===s.error.type||"ABORTED"===s.error.type;oe({messageType:"network-request",message:r,details:s.error.message,canceled:e,failed:!e},t)}R(t,e)}else if(!n&&c){const n=`${t.clientIdentifier} doesn't have Shared Worker's communication channel. Don't notify about completion.`;for(const r of e)r.clientIdentifier!==t.clientIdentifier&&oe(n,r)}}},L=e=>{var t;const[n,r]=e,s=r.byteLength>0?r:void 0,i=parseInt(null!==(t=n.headers.get("Content-Length"))&&void 0!==t?t:"0",10),o=n.headers.get("Content-Type"),c={};return n.headers.forEach(((e,t)=>c[t]=e.toLowerCase())),{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentLength:i,contentType:o,headers:c,status:n.status,body:s}}},W=(e,t)=>{if(t)return Object.assign(Object.assign({},L(t)),{type:"request-process-error"});let n="NETWORK_ISSUE",r="Unknown error",s="Error";e&&e instanceof Error&&(r=e.message,s=e.name);const i=r.toLowerCase();return i.includes("timeout")?n="TIMEOUT":("AbortError"===s||i.includes("aborted")||i.includes("cancel"))&&(r="Request aborted",n="ABORTED"),{type:"request-process-error",clientIdentifier:"",identifier:"",url:"",error:{name:s,type:n,message:r}}},x=e=>{var t,n,r,s,i;const{clientIdentifier:o}=e;if(h[o])return;const c=h[o]={clientIdentifier:o,subscriptionKey:e.subscriptionKey,userId:e.userId,heartbeatInterval:e.heartbeatInterval,newlyRegistered:!0,offlineClientsCheckInterval:e.workerOfflineClientsCheckInterval,unsubscribeOfflineClients:e.workerUnsubscribeOfflineClients,workerLogVerbosity:e.workerLogVerbosity},l=null!==(t=f[s=e.subscriptionKey])&&void 0!==t?t:f[s]=[];l.every((e=>e.clientIdentifier!==o))&&l.push(c),(null!==(n=g[i=e.subscriptionKey])&&void 0!==n?n:g[i]={})[o]=e.port;const u=`Registered PubNub client with '${o}' identifier. '${l.length}' clients currently active.`;for(const e of l)oe(u,e);if(!a[e.subscriptionKey]&&(null!==(r=f[e.subscriptionKey])&&void 0!==r?r:[]).length>0){const{subscriptionKey:t}=e,n=e.workerOfflineClientsCheckInterval;for(const e of l)oe(`Setup PubNub client ping event ${n} seconds`,e);a[t]=setTimeout((()=>ne(t)),500*n-1)}},U=e=>{const{clientIdentifier:t,accessToken:n,preProcessedToken:r}=e,s=h[t];s&&(ce({authKey:n,token:r},"Update client configuration:",s),s.accessToken=r,H(s,null!=n?n:""))},F=e=>{Q(e.subscriptionKey,e.clientIdentifier)},D=e=>{var t,n,r,s,i,o,c,l,a,u,d,f,p,g,v,y,I,q,m,k;const $=e.request.queryParameters,{clientIdentifier:w}=e,T=h[w];let O=!1;if(!T)return;const j=null!==(t=$["channel-group"])&&void 0!==t?t:"",E=null!==(n=$.state)&&void 0!==n?n:"";let P=T.subscription;if(P){if(E.length>0){const e=JSON.parse(E),t=null!==(o=(y=null!==(i=b[v=T.subscriptionKey])&&void 0!==i?i:b[v]={})[I=T.userId])&&void 0!==o?o:y[I]={};Object.entries(e).forEach((([e,n])=>t[e]=n));for(const n of P.objectsWithState)e[n]||delete t[n];P.objectsWithState=Object.keys(e)}else if(P.objectsWithState.length){const e=null!==(l=(m=null!==(c=b[q=T.subscriptionKey])&&void 0!==c?c:b[q]={})[k=T.userId])&&void 0!==l?l:m[k]={};for(const t of P.objectsWithState)delete e[t];P.objectsWithState=[]}}else{if(O=!0,P={path:"",channelGroupQuery:"",channels:[],channelGroups:[],previousTimetoken:"0",timetoken:"0",objectsWithState:[]},E.length>0){const e=JSON.parse(E),t=null!==(s=(p=null!==(r=b[f=T.subscriptionKey])&&void 0!==r?r:b[f]={})[g=T.userId])&&void 0!==s?s:p[g]={};Object.entries(e).forEach((([e,n])=>t[e]=n)),P.objectsWithState=Object.keys(e)}T.subscription=P}if(P.path!==e.request.path){P.path=e.request.path;const t=Z(e.request);O||(O=!te(P.channels,t)),P.channels=t}if(P.channelGroupQuery!==j){P.channelGroupQuery=j;const t=ee(e.request);O||(O=!te(P.channelGroups,t)),P.channelGroups=t}let{authKey:S}=T;const{userId:G}=T;return P.request=e.request,P.filterExpression=null!==(a=$["filter-expr"])&&void 0!==a?a:"",P.timetoken=null!==(u=$.tt)&&void 0!==u?u:"0",void 0!==$.tr&&(P.region=$.tr),T.authKey=null!==(d=$.auth)&&void 0!==d?d:"",T.origin=e.request.origin,T.userId=$.uuid,T.pnsdk=$.pnsdk,T.accessToken=e.preProcessedToken,T.newlyRegistered&&!S&&T.authKey&&(S=T.authKey),T.newlyRegistered=!1,M(T,G,S),H(T,S),O},N=e=>{var t,n,r,s;const{clientIdentifier:i}=e,o=h[i],{request:c}=e,l=null!==(t=c.queryParameters)&&void 0!==t?t:{};if(!o)return;const a=null!==(n=o.heartbeat)&&void 0!==n?n:o.heartbeat={channels:[],channelGroups:[]};a.heartbeatEvent=Object.assign({},e),a.timer||(a.timer=setInterval((()=>{const e=h[i];e&&e.heartbeat&&e.heartbeat.heartbeatEvent&&m(e.heartbeat.heartbeatEvent)}),1e3*o.heartbeatInterval)),a.channelGroups=ee(c).filter((e=>!e.endsWith("-pnpres"))),a.channels=Z(c).filter((e=>!e.endsWith("-pnpres")));const u=null!==(r=l.state)&&void 0!==r?r:"";if(u.length>0){const e=JSON.parse(u);for(const t of Object.keys(e))a.channels.includes(t)||a.channelGroups.includes(t)||delete e[t];a.presenceState=e}o.accessToken=e.preProcessedToken,H(o,null!==(s=l.auth)&&void 0!==s?s:"")},M=(e,t,n)=>{var r,s,i;if(!e||t===e.userId&&(null!=n?n:"")===(null!==(r=e.authKey)&&void 0!==r?r:""))return;const o=null!==(s=p[e.subscriptionKey])&&void 0!==s?s:{},c=`${t}_${null!==(i=re(e))&&void 0!==i?i:""}`;void 0!==o[c]&&delete o[c]},_=e=>{const t=h[e.clientIdentifier];t&&(t.lastPongEvent=(new Date).getTime()/1e3)},Q=(e,t)=>{var n,r,s;const i=h[t];delete h[t];let o,c=f[e];if(i){if(i.subscription&&(o=i.subscription.serviceRequestId,delete i.subscription.serviceRequestId,o&&O(o)),i.heartbeat&&i.heartbeat.timer&&clearInterval(i.heartbeat.timer),p[e]){const t=null!==(n=p[e])&&void 0!==n?n:p[e]={},s=`${i.userId}_${null!==(r=re(i))&&void 0!==r?r:""}`;t[s]&&t[s].clientIdentifier===i.clientIdentifier&&delete t[s].clientIdentifier}i.unsubscribeOfflineClients&&V(i,o)}if(c)if(c=c.filter((e=>e.clientIdentifier!==t)),c.length>0?f[e]=c:(delete f[e],delete p[e]),0===c.length&&delete b[e],c.length>0){const n=g[e];n&&(delete n[t],0===Object.keys(n).length&&delete g[e])}else delete g[e];const l=`Invalidate '${t}' client. '${(null!==(s=f[e])&&void 0!==s?s:[]).length}' clients currently active.`;if(c)for(const e of c)oe(l,e);else oe(l)},V=(e,n)=>{if(!e.subscription)return;const{channels:r,channelGroups:s}=e.subscription,i=(null!=s?s:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>ae(e))).sort(),o=(null!=r?r:[]).filter((e=>!e.endsWith("-pnpres"))).map((e=>ae(e))).sort();if(0===o.length&&0===i.length)return;const l=i.length>0?i.join(","):void 0,a=0===o.length?",":o.join(","),u=Object.assign(Object.assign({instanceid:e.clientIdentifier,uuid:e.userId,requestid:c.createUUID()},e.authKey?{auth:e.authKey}:{}),l?{"channel-group":l}:{}),d={type:"send-request",clientIdentifier:e.clientIdentifier,subscriptionKey:e.subscriptionKey,request:{origin:e.origin,path:`/v2/presence/sub-key/${e.subscriptionKey}/channel/${a}/leave`,queryParameters:u,method:t.GET,headers:{},timeout:10,cancellable:!1,compressible:!1,identifier:u.requestid}};k(d,e,n)},H=(e,t)=>{const{subscription:n,heartbeat:r}=e;if(e.authKey=t,n&&n.request&&n.request.queryParameters){const e=n.request.queryParameters;t&&t.length>0?e.auth=t:e.auth&&delete e.auth}if((null==r?void 0:r.heartbeatEvent)&&r.heartbeatEvent.request&&r.heartbeatEvent.request.queryParameters){const e=r.heartbeatEvent.request.queryParameters;t&&t.length>0?e.auth=t:e.auth&&delete e.auth}},J=e=>{const{clientIdentifier:t,subscriptionKey:n}=e.data;return!(!t||"string"!=typeof t)&&!(!n||"string"!=typeof n)},B=(e,t)=>{var n;const r=null!==(n=t.request.queryParameters["channel-group"])&&void 0!==n?n:"",s=t.request.path;let i,o;for(const n of e){const{subscription:e}=n;if(!e||!e.serviceRequestId)continue;const c=h[t.clientIdentifier],l=e.serviceRequestId;if(e.path===s&&e.channelGroupQuery===r)return oe(`Found identical request started by '${n.clientIdentifier}' client. \nWaiting for existing '${l}' request completion.`,c),e.serviceRequestId;{const r=v[e.serviceRequestId];if(i||(i=ee(t.request)),o||(o=Z(t.request)),o.length&&!te(r.channels,o))continue;if(i.length&&!te(r.channelGroups,i))continue;return ce(r,`'${t.request.identifier}' request channels and groups are subset of ongoing '${l}' request \nwhich has started by '${n.clientIdentifier}' client. Waiting for existing '${l}' request completion.`,c),e.serviceRequestId}}},z=(e,t)=>{var n,r;const s=h[t.clientIdentifier];if(!s)return[];const i=t.request.queryParameters,o=re(s),c=null!==(n=i["filter-expr"])&&void 0!==n?n:"",l=i.uuid;return(null!==(r=f[t.subscriptionKey])&&void 0!==r?r:[]).filter((t=>t.userId===l&&re(t)===o&&t.subscription&&(0!==t.subscription.channels.length||0!==t.subscription.channelGroups.length)&&t.subscription.filterExpression===c&&("0"===e||"0"===t.subscription.timetoken||t.subscription.timetoken===e)))},Y=e=>X(e),X=(e,t)=>{var n;const r=null!=t?t:h[e.clientIdentifier];if(!r)return[];const s=e.request.queryParameters,i=re(r),o=s.uuid;return(null!==(n=f[e.subscriptionKey])&&void 0!==n?n:[]).filter((e=>e.userId===o&&re(e)===i))},Z=e=>{const t=e.path.split("/")[e.path.startsWith("/v2/subscribe/")?4:6];return","===t?[]:t.split(",").filter((e=>e.length>0))},ee=e=>{var t;const n=null!==(t=e.queryParameters["channel-group"])&&void 0!==t?t:"";return 0===n.length?[]:n.split(",").filter((e=>e.length>0))},te=(e,t)=>{const n=new Set(e);return t.every(n.has,n)},ne=e=>{const t={type:"shared-worker-ping"},n=Object.values(h).filter((t=>t&&t.subscriptionKey===e));if(n.forEach((e=>{let r=!1;if(e&&e.lastPingRequest){const t=e.offlineClientsCheckInterval;if(!e.lastPongEvent||Math.abs(e.lastPongEvent-e.lastPingRequest)>.5*t){r=!0;for(const t of n)oe(`'${e.clientIdentifier}' client is inactive. Invalidating...`,t);Q(e.subscriptionKey,e.clientIdentifier)}}e&&!r&&(e.lastPingRequest=(new Date).getTime()/1e3,R(e,t))})),n&&n.length>0&&n[0]){const t=n[0].offlineClientsCheckInterval;a[e]=setTimeout((()=>ne(e)),500*t-1)}},re=e=>{var t;return e.accessToken&&null!==(t=e.accessToken.token)&&void 0!==t?t:e.authKey},se=e=>{const t=e.filter((e=>!!e.accessToken)).sort(((e,t)=>e.accessToken.expiration-t.accessToken.expiration)).pop();return t?t.authKey:void 0},ie=e=>{const t=re(e);let n=`${e.userId}-${e.subscriptionKey}${t?`-${t}`:""}`;return e.subscription&&e.subscription.filterExpression&&(n+=`-${e.subscription.filterExpression}`),n},oe=(e,t)=>{const n=(t?[t]:Object.values(h)).filter((e=>e&&e.workerLogVerbosity)),r={type:"shared-worker-console-log",message:e};n.forEach((e=>{e&&R(e,r)}))},ce=(e,t,n)=>{const r=(n?[n]:Object.values(h)).filter((e=>e&&e.workerLogVerbosity)),s={type:"shared-worker-console-dir",message:t,data:e};r.forEach((e=>{e&&R(e,s)}))},le=e=>Object.keys(e).map((t=>{const n=e[t];return Array.isArray(n)?n.map((e=>`${t}=${ae(e)}`)).join("&"):`${t}=${ae(n)}`})).join("&"),ae=e=>encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}));
