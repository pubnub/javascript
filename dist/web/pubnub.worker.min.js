!function(e){"function"==typeof define&&define.amd?define(e):e()}((function(){"use strict";var e,t,s,n;!function(e){e.Unregister="unregister",e.Disconnect="disconnect",e.IdentityChange="identityChange",e.AuthChange="authChange",e.HeartbeatIntervalChange="heartbeatIntervalChange",e.SendSubscribeRequest="sendSubscribeRequest",e.SendHeartbeatRequest="sendHeartbeatRequest",e.SendLeaveRequest="sendLeaveRequest"}(e||(e={}));class r extends CustomEvent{get client(){return this.detail.client}}class i extends r{constructor(t){super(e.Unregister,{detail:{client:t}})}clone(){return new i(this.client)}}class a extends r{constructor(t){super(e.Disconnect,{detail:{client:t}})}clone(){return new a(this.client)}}class o extends r{constructor(t,s,n){super(e.IdentityChange,{detail:{client:t,oldUserId:s,newUserId:n}})}get oldUserId(){return this.detail.oldUserId}get newUserId(){return this.detail.newUserId}clone(){return new o(this.client,this.oldUserId,this.newUserId)}}class c extends r{constructor(t,s,n){super(e.AuthChange,{detail:{client:t,oldAuth:n,newAuth:s}})}get oldAuth(){return this.detail.oldAuth}get newAuth(){return this.detail.newAuth}clone(){return new c(this.client,this.newAuth,this.oldAuth)}}class h extends r{constructor(t,s,n){super(e.HeartbeatIntervalChange,{detail:{client:t,oldInterval:n,newInterval:s}})}get oldInterval(){return this.detail.oldInterval}get newInterval(){return this.detail.newInterval}clone(){return new h(this.client,this.newInterval,this.oldInterval)}}class l extends r{constructor(t,s){super(e.SendSubscribeRequest,{detail:{client:t,request:s}})}get request(){return this.detail.request}clone(){return new l(this.client,this.request)}}class u extends r{constructor(t,s){super(e.SendHeartbeatRequest,{detail:{client:t,request:s}})}get request(){return this.detail.request}clone(){return new u(this.client,this.request)}}class d extends r{constructor(t,s){super(e.SendLeaveRequest,{detail:{client:t,request:s}})}get request(){return this.detail.request}clone(){return new d(this.client,this.request)}}!function(e){e.Registered="Registered",e.Unregistered="Unregistered"}(t||(t={}));class g extends CustomEvent{constructor(e){super(t.Registered,{detail:e})}get client(){return this.detail}clone(){return new g(this.client)}}class f extends CustomEvent{constructor(e,s=!1){super(t.Unregistered,{detail:{client:e,withLeave:s}})}get client(){return this.detail.client}get withLeave(){return this.detail.withLeave}clone(){return new f(this.client,this.withLeave)}}!function(e){e.Changed="changed"}(s||(s={}));class p extends CustomEvent{constructor(e,t){super(s.Changed,{detail:{newRequests:e,canceledRequests:t}})}get newRequests(){return this.detail.newRequests}get canceledRequests(){return this.detail.canceledRequests}clone(){return new p(this.newRequests,this.canceledRequests)}}!function(e){e.GET="GET",e.POST="POST",e.PATCH="PATCH",e.DELETE="DELETE",e.LOCAL="LOCAL"}(n||(n={}));"undefined"!=typeof globalThis?globalThis:"undefined"!=typeof window?window:"undefined"!=typeof global?global:"undefined"!=typeof self&&self;function b(e){return e&&e.__esModule&&Object.prototype.hasOwnProperty.call(e,"default")?e.default:e}var q,v,m={exports:{}};
/*! lil-uuid - v0.1 - MIT License - https://github.com/lil-js/uuid */q=m,function(e){var t="0.1.0",s={3:/^[0-9A-F]{8}-[0-9A-F]{4}-3[0-9A-F]{3}-[0-9A-F]{4}-[0-9A-F]{12}$/i,4:/^[0-9A-F]{8}-[0-9A-F]{4}-4[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,5:/^[0-9A-F]{8}-[0-9A-F]{4}-5[0-9A-F]{3}-[89AB][0-9A-F]{3}-[0-9A-F]{12}$/i,all:/^[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12}$/i};function n(){var e,t,s="";for(e=0;e<32;e++)t=16*Math.random()|0,8!==e&&12!==e&&16!==e&&20!==e||(s+="-"),s+=(12===e?4:16===e?3&t|8:t).toString(16);return s}function r(e,t){var n=s[t||"all"];return n&&n.test(e)||!1}n.isUUID=r,n.VERSION=t,e.uuid=n,e.isUUID=r}(v=m.exports),null!==q&&(q.exports=v.uuid);var C,y=b(m.exports),E={createUUID:()=>y.uuid?y.uuid():y()};!function(e){e.Started="started",e.Canceled="canceled",e.Success="success",e.Error="error"}(C||(C={}));class S extends CustomEvent{get request(){return this.detail.request}}class R extends S{constructor(e){super(C.Started,{detail:{request:e}})}clone(){return new R(this.request)}}class w extends S{constructor(e,t,s){super(C.Success,{detail:{request:e,fetchRequest:t,response:s}})}get fetchRequest(){return this.detail.fetchRequest}get response(){return this.detail.response}clone(){return new w(this.request,this.fetchRequest,this.response)}}class T extends S{constructor(e,t,s){super(C.Error,{detail:{request:e,fetchRequest:t,error:s}})}get fetchRequest(){return this.detail.fetchRequest}get error(){return this.detail.error}clone(){return new T(this.request,this.fetchRequest,this.error)}}class k extends S{constructor(e){super(C.Canceled,{detail:{request:e}})}clone(){return new k(this.request)}}class A extends EventTarget{constructor(e,t,s,n,r,i){super(),this.request=e,this.subscribeKey=t,this.channelGroups=s,this.channels=n,this._completed=!1,this.queryStringFromObject=e=>Object.keys(e).map((t=>{const s=e[t];return Array.isArray(s)?s.map((e=>`${t}=${this.encodeString(e)}`)).join("&"):`${t}=${this.encodeString(s)}`})).join("&"),this._accessToken=i,this._userId=r}cancel(){this.completed||(this.serviceRequest=void 0,this.request.cancellable&&this.dispatchEvent(new k(this)))}get origin(){return this.request.origin}get userId(){return this._userId}set userId(e){this._userId=e,this.request.queryParameters.uuid=e}get accessToken(){return this._accessToken}set accessToken(e){this._accessToken=e,e?this.request.queryParameters.auth=e.toString():delete this.request.queryParameters.auth}get client(){return this._client}set client(e){this._client=e}get completed(){return this._completed}get cancellable(){return this.request.cancellable}get asFetchRequest(){let e;const t=this.request.queryParameters;let s=this.request.path;if(this.request.headers){e={};for(const[t,s]of Object.entries(this.request.headers))e[t]=s}return t&&0!==Object.keys(t).length&&(s=`${s}?${this.queryStringFromObject(t)}`),new Request(`${this.request.origin}${s}`,{method:this.request.method,headers:e,redirect:"follow"})}get serviceRequest(){return this._serviceRequest}set serviceRequest(e){if(this.listenerAbortController){if(this._serviceRequest&&e&&this._serviceRequest.request.identifier===e.request.identifier)return;this.listenerAbortController&&(this.listenerAbortController.abort(),this.listenerAbortController=void 0)}this._serviceRequest=e,e&&!this.completed&&(this.listenerAbortController=new AbortController,e.addEventListener(C.Started,(e=>{if(!(e instanceof R))return;const t=e;this.logRequestStart(t.request),this.dispatchEvent(t.clone())}),{signal:this.listenerAbortController.signal,once:!0}),e.addEventListener(C.Success,(e=>{if(!(e instanceof w))return;const t=e;this.listenerAbortController&&(this.listenerAbortController.abort(),this.listenerAbortController=void 0),this.addRequestInformationForResult(t.request,t.fetchRequest,t.response),this.logRequestSuccess(t.request,t.response),this._completed=!0,this.dispatchEvent(t.clone())}),{signal:this.listenerAbortController.signal,once:!0}),e.addEventListener(C.Error,(e=>{if(!(e instanceof T))return;const t=e;this.listenerAbortController&&(this.listenerAbortController.abort(),this.listenerAbortController=void 0),this.addRequestInformationForResult(t.request,t.fetchRequest,t.error),this.logRequestError(t.request,t.error),this._completed=!0,this.dispatchEvent(t.clone())}),{signal:this.listenerAbortController.signal,once:!0}))}handleProcessingStarted(){this.logRequestStart(this),this.dispatchEvent(new R(this))}handleProcessingSuccess(e,t){this.addRequestInformationForResult(this,e,t),this.logRequestSuccess(this,t),this._completed=!0,this.dispatchEvent(new w(this,e,t))}handleProcessingError(e,t){this.addRequestInformationForResult(this,e,t),this.logRequestError(this,t),this._completed=!0,this.dispatchEvent(new T(this,e,t))}addRequestInformationForResult(e,t,s){this._client&&(s.clientIdentifier=this._client.identifier,s.identifier=this.request.identifier,s.url=t.url)}logRequestStart(e){this._client&&this._client.logger.debug((()=>({messageType:"network-request",message:e.request})))}logRequestSuccess(e,t){this._client&&this._client.logger.debug((()=>{const{status:s,headers:n,body:r}=t.response,i=e.asFetchRequest,a={};return Object.entries(n).forEach((([e,t])=>a[e.toLowerCase()]=t.toLowerCase())),{messageType:"network-response",message:{status:s,url:i.url,headers:n,body:r}}}))}logRequestError(e,t){this._client&&((t.error?t.error.message:"Unknown").toLowerCase().includes("timeout")?this._client.logger.debug((()=>({messageType:"network-request",message:e.request,details:"Timeout",canceled:!0}))):this._client.logger.warn((()=>{const{details:s,canceled:n}=this.errorDetailsFromSendingError(t);let r=s;return n?r="Aborted":s.toLowerCase().includes("network")&&(r="Network error"),{messageType:"network-request",message:e.request,details:r,canceled:n,failed:!n}})))}errorDetailsFromSendingError(e){const t=!!e.error&&("TIMEOUT"===e.error.type||"ABORTED"===e.error.type);let s=e.error?e.error.message:"Unknown";if(e.response){const t=e.response.headers["content-type"];if(e.response.body&&t&&(-1!==t.indexOf("javascript")||-1!==t.indexOf("json")))try{const t=JSON.parse((new TextDecoder).decode(e.response.body));"message"in t?s=t.message:"error"in t&&("string"==typeof t.error?s=t.error:"object"==typeof t.error&&"message"in t.error&&(s=t.error.message))}catch(e){}"Unknown"===s&&(s=e.response.status>=500?"Internal Server Error":400==e.response.status?"Bad request":403==e.response.status?"Access denied":`${e.response.status}`)}return{details:s,canceled:t}}encodeString(e){return encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}}class O extends A{static fromTransportRequest(e,t,s){return new O(e,t,s)}static fromCachedState(e,t,s,n,r,i){return new O(e,t,i,n,s,r)}static fromRequests(e,t,s,n){const r=e[Math.floor(Math.random()*e.length)],i=Object.assign({},r.request);let a={};const o=new Set,c=new Set;for(const t of e)t.state&&(a=Object.assign(Object.assign({},a),t.state)),t.channelGroups.forEach(o.add,o),t.channels.forEach(c.add,c);if(c.size||o.size){const e=i.path.split("/");e[4]=c.size?[...c].sort().join(","):",",i.path=e.join("/")}o.size&&(i.queryParameters["channel-group"]=[...o].sort().join(",")),Object.keys(a).length?i.queryParameters.state=JSON.stringify(a):delete i.queryParameters.state,t&&(i.queryParameters.auth=t.toString()),i.identifier=E.createUUID();const h=new O(i,r.subscribeKey,t);for(const t of e)t.serviceRequest=h;return h.isInitialSubscribe&&s&&"0"!==s&&(h.timetokenOverride=s,n&&(h.timetokenRegionOverride=n)),h}constructor(e,t,s,n,r,i){var a;const o=!!e.queryParameters&&"on-demand"in e.queryParameters;if(o&&delete e.queryParameters["on-demand"],super(e,t,null!=n?n:O.channelGroupsFromRequest(e),null!=r?r:O.channelsFromRequest(e),e.queryParameters.uuid,s),this.creationDate=Date.now(),this.timetokenRegionOverride="0",this.requireCachedStateReset=o,e.queryParameters["filter-expr"]&&(this.filterExpression=e.queryParameters["filter-expr"]),this.timetoken=null!==(a=e.queryParameters.tt)&&void 0!==a?a:"0",e.queryParameters.tr&&(this.region=e.queryParameters.tr),i&&(this.state=i),this.state||!e.queryParameters.state||0===e.queryParameters.state.length)return;const c=JSON.parse(e.queryParameters.state);for(const e of Object.keys(c))this.channels.includes(e)||this.channelGroups.includes(e)||delete c[e];this.state=c}get asIdentifier(){const e=this.accessToken?this.accessToken.asIdentifier:void 0,t=`${this.userId}-${this.subscribeKey}${e?`-${e}`:""}`;return this.filterExpression?`${t}-${this.filterExpression}`:t}get isInitialSubscribe(){return"0"===this.timetoken}static useCachedState(e){return!!e.queryParameters&&"on-demand"in e.queryParameters}isSubsetOf(e){return!(e.channelGroups.length&&!this.includesStrings(this.channelGroups,e.channelGroups))&&(!(e.channels.length&&!this.includesStrings(this.channels,e.channels))&&this.filterExpression===e.filterExpression)}static channelsFromRequest(e){const t=e.path.split("/")[4];return","===t?[]:t.split(",").filter((e=>e.length>0))}static channelGroupsFromRequest(e){if(!e.queryParameters||!e.queryParameters["channel-group"])return[];const t=e.queryParameters["channel-group"];return 0===t.length?[]:t.split(",").filter((e=>e.length>0))}includesStrings(e,t){const s=new Set(e);return t.every(s.has,s)}}class I{static compare(e,t){var s,n;return(null!==(s=e.expiration)&&void 0!==s?s:0)-(null!==(n=t.expiration)&&void 0!==n?n:0)}constructor(e,t,s){this.token=e,this.simplifiedToken=t,this.expiration=s}get asIdentifier(){var e;return null!==(e=this.simplifiedToken)&&void 0!==e?e:this.token}equalTo(e){return this.asIdentifier===e.asIdentifier}toString(){return this.token}}class L extends EventTarget{constructor(){super(...arguments),this.requestListenersAbort={},this.clientsState={},this.requests={},this.serviceRequests=[],this.channelGroups=new Set,this.state={},this.channels=new Set}stateForClient(e){const t=this.clientsState[e.identifier];return t?{channels:[...t.channels],channelGroups:[...t.channelGroups],state:t.state}:{channels:[],channelGroups:[]}}uniqueStateForClient(e,t,s){let n=[...s],r=[...t];return Object.entries(this.clientsState).forEach((([t,s])=>{t!==e.identifier&&(n=n.filter((e=>!s.channelGroups.has(e))),r=r.filter((e=>!s.channels.has(e))))})),{channels:r,channelGroups:n}}requestsForClient(e){var t;return[...null!==(t=this.requests[e.identifier])&&void 0!==t?t:[]]}beginChanges(){this.changesBatch?console.error("Looks like there is incomplete change transaction. 'commitChanges()' should be called before 'beginChanges()'"):this.changesBatch={}}addClientRequests(e,t){this.changesBatch?this.changesBatch[e.identifier]?this.changesBatch[e.identifier].add?this.changesBatch[e.identifier].add.push(...t):this.changesBatch[e.identifier].add=t:this.changesBatch[e.identifier]={add:t}:console.error("'beginChanges()' should be called before 'addClientRequests(...)'")}removeClientRequests(e,t){this.changesBatch?this.changesBatch[e.identifier]?this.changesBatch[e.identifier].remove?this.changesBatch[e.identifier].remove.push(...t):this.changesBatch[e.identifier].remove=t:this.changesBatch[e.identifier]={remove:t}:console.error("'beginChanges()' should be called before 'removeClientRequests(...)'")}removeClient(e){if(!this.changesBatch)return void console.error("'beginChanges()' should be called before 'removeClient(...)'");if(delete this.clientsState[e.identifier],!this.requests[e.identifier]||0===this.requests[e.identifier].length)return;const t=this.requests[e.identifier];this.changesBatch[e.identifier]?this.changesBatch[e.identifier].remove?this.changesBatch[e.identifier].remove.push(...t):this.changesBatch[e.identifier].remove=t:this.changesBatch[e.identifier]={remove:t}}commitChanges(){if(!this.changesBatch)return void console.error("'beginChanges()' should be called before 'commitChanges()'");if(0===Object.keys(this.changesBatch).length)return;let e,t=0===this.channelGroups.size&&0===this.channels.size;t||(t=Object.values(this.changesBatch).some((e=>e.remove&&e.remove.length||e.add&&e.add.some((e=>e.requireCachedStateReset)))));const s=this.applyBatchedRequestChanges();if(t){const t=new Set,s=new Set;this.state={},Object.entries(this.requests).forEach((([e,n])=>{var r,i;const a=null!==(r=(i=this.clientsState)[e])&&void 0!==r?r:i[e]={channels:new Set,channelGroups:new Set};n.forEach((e=>{e.state&&(a.state||(a.state={}),a.state=Object.assign(Object.assign({},a.state),e.state),this.state=Object.assign(Object.assign({},this.state),e.state)),e.channelGroups.forEach(a.channelGroups.add,a.channelGroups),e.channels.forEach(a.channels.add,a.channels),e.channelGroups.forEach(t.add,t),e.channels.forEach(s.add,s)}))})),e=this.subscriptionStateChanges(s,t),this.channelGroups=t,this.channels=s;const n=Object.values(this.requests).flat().filter((e=>!!e.accessToken)).map((e=>e.accessToken)).sort(I.compare);n&&n.length>0&&(this.accessToken=n.pop())}return this.changesBatch=void 0,this.handleSubscriptionStateChange(e,s.initial,s.continuation,s.removed),e}handleSubscriptionStateChange(e,t,s,n){var r,i;const a=this.serviceRequests.filter((e=>!e.completed)),o=[],c=[];let h,l,u;(t.length?s:[]).forEach((e=>{let t=!l;t||"0"===e.timetoken||("0"===l?t=!0:e.timetoken<l&&(t=e.creationDate>h)),t&&(h=e.creationDate,l=e.timetoken,u=e.region)}));const d=e=>{if(0===e.length)return;const t=O.fromRequests(e,this.accessToken,l,u);this.addListenersForRequestEvents(t),e.forEach((e=>e.serviceRequest=t)),this.serviceRequests.push(t),c.push(t)};if(t.length){const e=[];a.forEach((s=>{for(const n of t)n.isSubsetOf(s)?s.isInitialSubscribe?n.serviceRequest=s:(n.handleProcessingStarted(),this.makeResponseOnHandshakeRequest(n,s.timetoken,s.region)):e.push(n)})),a.length||e.length||e.push(...t),d(e)}const g={};if(s.forEach((e=>{g[e.timetoken]?g[e.timetoken].push(e):g[e.timetoken]=[e]})),Object.values(g).forEach((e=>d(e))),n.length&&e&&(e.channelGroups.removed||e.channels.removed)){const t=null!==(r=e.channelGroups.removed)&&void 0!==r?r:[],s=null!==(i=e.channels.removed)&&void 0!==i?i:[];n.forEach((e=>{const{channels:n,channelGroups:r}=e.serviceRequest;(r.some((e=>t.includes(e)))||n.some((e=>s.includes(e))))&&o.push(e.serviceRequest)}))}(c.length||o.length)&&this.dispatchEvent(new p(c,o))}addListenersForRequestEvents(e){const t=this.requestListenersAbort[e.request.identifier]=new AbortController,s=t=>{if(this.removeListenersFromRequestEvents(e),e.serviceRequest&&t instanceof k){const{request:e}=t;this.beginChanges(),this.removeClientRequests(e.client,[e]),this.commitChanges()}};e.addEventListener(C.Success,s,{signal:t.signal,once:!0}),e.addEventListener(C.Error,s,{signal:t.signal,once:!0}),e.addEventListener(C.Canceled,s,{signal:t.signal,once:!0})}removeListenersFromRequestEvents(e){this.requestListenersAbort[e.request.identifier]&&(this.requestListenersAbort[e.request.identifier].abort(),delete this.requestListenersAbort[e.request.identifier])}makeResponseOnHandshakeRequest(e,t,s){const n=(new TextEncoder).encode(`{"t":{"t":"${t}","r":${null!=s?s:"0"}},"m":[]}`);e.handleProcessingSuccess(e.asFetchRequest,{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentType:'text/javascript; charset="UTF-8"',contentLength:n.length,headers:{"content-type":'text/javascript; charset="UTF-8"',"content-length":`${n.length}`},status:200,body:n}})}applyBatchedRequestChanges(){const e=[],t=[],s=[],n=this.changesBatch;return Object.keys(n).forEach((e=>{if(n[e].add&&n[e].remove)for(const t of n[e].remove){const s=n[e].add.indexOf(t);s>=0&&n[e].add.splice(s,1)}})),Object.keys(n).forEach((r=>{if(n[r].add){this.requests[r]||(this.requests[r]=[]);for(const s of n[r].add)s.isInitialSubscribe?t.push(s):e.push(s),this.requests[r].push(s),this.addListenersForRequestEvents(s)}if(this.requests[r]&&n[r].remove)for(const e of n[r].remove){const t=this.requests[r].indexOf(e);t<0||(!e.completed&&e.serviceRequest&&s.push(e),this.requests[r].splice(t,1),this.removeListenersFromRequestEvents(e),0===this.requests[r].length&&delete this.requests[r])}})),{initial:t,continuation:e,removed:s}}subscriptionStateChanges(e,t){const s=0===this.channelGroups.size&&0===this.channels.size,n={channelGroups:{},channels:{}},r=[],i=[],a=[],o=[];for(const e of t)this.channelGroups.has(e)||i.push(e);for(const t of e)this.channels.has(t)||o.push(t);if(!s){for(const e of this.channelGroups)t.has(e)||r.push(e);for(const t of this.channels)e.has(t)||a.push(t)}return(o.length||a.length)&&(n.channels=Object.assign(Object.assign({},o.length?{added:o}:{}),a.length?{removed:a}:{})),(i.length||r.length)&&(n.channelGroups=Object.assign(Object.assign({},i.length?{added:i}:{}),r.length?{removed:r}:{})),0===Object.keys(n.channelGroups).length&&0===Object.keys(n.channels).length?void 0:n}}function F(e,t,s,n){return new(s||(s=Promise))((function(r,i){function a(e){try{c(n.next(e))}catch(e){i(e)}}function o(e){try{c(n.throw(e))}catch(e){i(e)}}function c(e){var t;e.done?r(e.value):(t=e.value,t instanceof s?t:new s((function(e){e(t)}))).then(a,o)}c((n=n.apply(e,t||[])).next())}))}"function"==typeof SuppressedError&&SuppressedError;class P extends EventTarget{constructor(){super(...arguments),this.abortControllers={}}sendRequest(e,t,s,n){e.handleProcessingStarted(),e.cancellable&&(this.abortControllers[e.request.identifier]=new AbortController);const r=e.asFetchRequest;(()=>{F(this,void 0,void 0,(function*(){var i;Promise.race([fetch(r,{signal:null===(i=this.abortControllers[e.request.identifier])||void 0===i?void 0:i.signal,keepalive:!0}),this.requestTimeoutTimer(e.request)]).then((e=>e.arrayBuffer().then((t=>[e,t])))).then((e=>n?n(e):e)).then((e=>{e[0].status>=400?s(r,this.requestProcessingError(void 0,e)):t(r,this.requestProcessingSuccess(e))})).catch((e=>{let t=e;if("string"==typeof e){const s=e.toLowerCase();t=new Error(e),!s.includes("timeout")&&s.includes("cancel")&&(t.name="AbortError")}s(r,this.requestProcessingError(t))}))}))})()}cancelRequest(e){const t=this.abortControllers[e.request.identifier];delete this.abortControllers[e.request.identifier],t&&t.abort("Cancel request")}requestProcessingSuccess(e){var t;const[s,n]=e,r=n.byteLength>0?n:void 0,i=parseInt(null!==(t=s.headers.get("Content-Length"))&&void 0!==t?t:"0",10),a=s.headers.get("Content-Type"),o={};return s.headers.forEach(((e,t)=>o[t.toLowerCase()]=e.toLowerCase())),{type:"request-process-success",clientIdentifier:"",identifier:"",url:"",response:{contentLength:i,contentType:a,headers:o,status:s.status,body:r}}}requestProcessingError(e,t){if(t)return Object.assign(Object.assign({},this.requestProcessingSuccess(t)),{type:"request-process-error"});let s="NETWORK_ISSUE",n="Unknown error",r="Error";e&&e instanceof Error&&(n=e.message,r=e.name);const i=n.toLowerCase();return i.includes("timeout")?s="TIMEOUT":("AbortError"===r||i.includes("aborted")||i.includes("cancel"))&&(n="Request aborted",s="ABORTED"),{type:"request-process-error",clientIdentifier:"",identifier:"",url:"",error:{name:r,type:s,message:n}}}requestTimeoutTimer(e){return new Promise(((t,s)=>{const n=setTimeout((()=>{delete this.abortControllers[e.identifier],clearTimeout(n),s(new Error("Request timeout"))}),1e3*e.timeout)}))}encodeString(e){return encodeURIComponent(e).replace(/[!~*'()]/g,(e=>`%${e.charCodeAt(0).toString(16).toUpperCase()}`))}}class j extends A{static fromTransportRequest(e,t,s){return new j(e,t,s)}constructor(e,t,s){const n=j.channelGroupsFromRequest(e),r=j.channelsFromRequest(e);super(e,t,n.filter((e=>!e.endsWith("-pnpres"))),r.filter((e=>!e.endsWith("-pnpres"))),e.queryParameters.uuid,s),this.allChannelGroups=n,this.allChannels=r}static channelsFromRequest(e){const t=e.path.split("/")[6];return","===t?[]:t.split(",").filter((e=>e.length>0))}static channelGroupsFromRequest(e){if(!e.queryParameters||!e.queryParameters["channel-group"])return[];const t=e.queryParameters["channel-group"];return 0===t.length?[]:t.split(",").filter((e=>e.length>0))}}class x extends P{constructor(e){super(),this.clientsManager=e,this.delayedAggregationQueue={},this.clientAbortControllers={},this.subscriptionStates={},this.subscribeOnClientEvents(e)}subscriptionStateForClient(e){let t;for(const s of Object.keys(this.delayedAggregationQueue))if(this.delayedAggregationQueue[s].requests[e.identifier]){t=this.subscriptionStates[s];break}return t||Object.values(this.subscriptionStates).forEach((s=>!t&&(t=s.requestsForClient(e).length?s:void 0))),t}moveClient(e){let t=this.aggregateQueueForClient(e);t.length||Object.values(this.subscriptionStates).forEach((s=>0===t.length&&(t=s.requestsForClient(e)))),t.length&&(this.removeClient(e,!1),this.enqueueForAggregation(e,t))}removeClient(e,t){this.removeFromAggregationQueue(e);const s=this.subscriptionStateForClient(e);if(!s)return;const n=s.stateForClient(e),r=s.uniqueStateForClient(e,n.channels,n.channelGroups);if(s.beginChanges(),s.removeClient(e),s.commitChanges(),!t||!r.channels.length&&!r.channelGroups.length)return;const i=this.leaveRequest(e,r.channels,r.channelGroups);i&&this.sendRequest(i,((e,t)=>i.handleProcessingSuccess(e,t)),((e,t)=>i.handleProcessingError(e,t)))}aggregateQueueForClient(e){let t;for(const s of Object.keys(this.delayedAggregationQueue))if(this.delayedAggregationQueue[s].requests[e.identifier]){t=this.delayedAggregationQueue[s];break}return t?t.requests[e.identifier]:[]}enqueueForAggregation(e,t){const s=t[0].asIdentifier;if(this.delayedAggregationQueue[s]){const n=this.delayedAggregationQueue[s].requests;n[e.identifier]?t.forEach((t=>!n[e.identifier].includes(t)&&n[e.identifier].push(t))):n[e.identifier]=t}else this.delayedAggregationQueue[s]={timeout:setTimeout((()=>this.handleDelayedAggregation(s)),50),requests:{[e.identifier]:t}}}removeFromAggregationQueue(e,t){let s,n,r=[];if(t)n=t.asIdentifier,s=this.delayedAggregationQueue[n];else for(const t of Object.keys(this.delayedAggregationQueue))if(this.delayedAggregationQueue[t].requests[e.identifier]){s=this.delayedAggregationQueue[t],n=t;break}if(!n||!s)return r;if(!s||!s.requests[e.identifier])return[];if(t){const n=s.requests[e.identifier].indexOf(t);n>=0&&(s.requests[e.identifier].splice(n,1),0===s.requests[e.identifier].length&&delete s.requests[e.identifier],r=[t])}else r=[...s.requests[e.identifier]],delete s.requests[e.identifier];return 0===Object.keys(s.requests).length&&s.timeout&&(clearTimeout(s.timeout),delete this.delayedAggregationQueue[n]),r}handleDelayedAggregation(e){if(!this.delayedAggregationQueue[e])return;let t=this.subscriptionStates[e];t||(t=this.subscriptionStates[e]=new L,this.addListenerForSubscriptionStateEvents(t));const s=Object.values(this.delayedAggregationQueue[e].requests).map((e=>Object.values(e))).flat();delete this.delayedAggregationQueue[e],t.beginChanges(),s.forEach((e=>t.addClientRequests(e.client,[e]))),t.commitChanges()}subscribeOnClientEvents(s){s.addEventListener(t.Registered,(t=>{const{client:s}=t,n=new AbortController;this.clientAbortControllers[s.identifier]=n,s.addEventListener(e.Disconnect,(()=>this.removeClient(s,!0)),{signal:n.signal}),s.addEventListener(e.IdentityChange,(()=>this.moveClient(s)),{signal:n.signal}),s.addEventListener(e.SendSubscribeRequest,(e=>{const t=e;this.enqueueForAggregation(t.client,[t.request])}),{signal:n.signal}),s.addEventListener(e.SendLeaveRequest,(e=>{const t=e,s=this.patchedLeaveRequest(t.request);s&&this.sendRequest(s,((e,t)=>s.handleProcessingSuccess(e,t)),((e,t)=>s.handleProcessingError(e,t)))}),{signal:n.signal})})),s.addEventListener(t.Unregistered,(e=>{const{client:t,withLeave:s}=e,n=this.clientAbortControllers[t.identifier];delete this.clientAbortControllers[t.identifier],n&&n.abort(),this.removeClient(t,s)}))}addListenerForSubscriptionStateEvents(e){e.addEventListener(s.Changed,(e=>{const t=e;t.canceledRequests.forEach((e=>this.cancelRequest(e))),t.newRequests.forEach((e=>{this.sendRequest(e,((t,s)=>e.handleProcessingSuccess(t,s)),((t,s)=>e.handleProcessingError(t,s)),e.isInitialSubscribe&&"0"!==e.timetokenOverride?t=>this.patchInitialSubscribeResponse(t,e.timetokenOverride,e.timetokenRegionOverride):void 0)}))}))}patchedLeaveRequest(e){const t=this.subscriptionStateForClient(e.client);if(!t)return void e.cancel();const s=t.uniqueStateForClient(e.client,e.channels,e.channelGroups),n=this.leaveRequest(e.client,s.channels,s.channelGroups);return n&&(e.serviceRequest=n),n}leaveRequest(e,t,s){if(t=t.filter((e=>!e.endsWith("-pnpres"))).map((e=>this.encodeString(e))).sort(),s=s.filter((e=>!e.endsWith("-pnpres"))).map((e=>this.encodeString(e))).sort(),0===t.length&&0===s.length)return;const r=s.length>0?s.join(","):void 0,i=0===t.length?",":t.join(","),a=Object.assign(Object.assign({instanceid:e.identifier,uuid:e.userId,requestid:E.createUUID()},e.accessToken?{auth:e.accessToken.toString()}:{}),r?{"channel-group":r}:{}),o={origin:e.origin,path:`/v2/presence/sub-key/${e.subKey}/channel/${i}/leave`,queryParameters:a,method:n.GET,headers:{},timeout:10,cancellable:!1,compressible:!1,identifier:a.requestid};return j.fromTransportRequest(o,e.subKey,e.accessToken)}patchInitialSubscribeResponse(e,t,s){if(void 0===t||"0"===t||e[0].status>=400)return e;let n;const r=e[0];let i=r,a=e[1];try{n=JSON.parse(x.textDecoder.decode(a))}catch(t){return console.error(`Subscribe response parse error: ${t}`),e}n.t.t=t,s&&(n.t.r=parseInt(s,10));try{if(a=x.textEncoder.encode(JSON.stringify(n)).buffer,a.byteLength){const e=new Headers(r.headers);e.set("Content-Length",`${a.byteLength}`),i=new Response(a,{status:r.status,statusText:r.statusText,headers:e})}}catch(t){return console.error(`Subscribe serialization error: ${t}`),e}return a.byteLength>0?[i,a]:e}}var G,_;x.textDecoder=new TextDecoder,x.textEncoder=new TextEncoder,function(e){e.Heartbeat="heartbeat"}(G||(G={}));class U extends CustomEvent{constructor(e){super(G.Heartbeat,{detail:e})}get request(){return this.detail}clone(){return new U(this.request)}}class B extends A{static fromTransportRequest(e,t,s){return new B(e,t,s)}static fromCachedState(e,t,s,n,r,i){if(n.length||s.length){const t=e.path.split("/");t[6]=n.length?[...n].sort().join(","):",",e.path=t.join("/")}return s.length&&(e.queryParameters["channel-group"]=[...s].sort().join(",")),r&&Object.keys(r).length?e.queryParameters.state=JSON.stringify(r):delete e.queryParameters.aggregatedState,i&&(e.queryParameters.auth=i.toString()),e.identifier=E.createUUID(),new B(e,t,i)}constructor(e,t,s){if(super(e,t,B.channelGroupsFromRequest(e).filter((e=>!e.endsWith("-pnpres"))),B.channelsFromRequest(e).filter((e=>!e.endsWith("-pnpres"))),e.queryParameters.uuid,s),!e.queryParameters.state||0===e.queryParameters.state.length)return;const n=JSON.parse(e.queryParameters.state);for(const e of Object.keys(n))this.channels.includes(e)||this.channelGroups.includes(e)||delete n[e];this.state=n}get asIdentifier(){const e=this.accessToken?this.accessToken.asIdentifier:void 0;return`${this.userId}-${this.subscribeKey}${e?`-${e}`:""}`}static channelsFromRequest(e){const t=e.path.split("/")[6];return","===t?[]:t.split(",").filter((e=>e.length>0))}static channelGroupsFromRequest(e){if(!e.queryParameters||!e.queryParameters["channel-group"])return[];const t=e.queryParameters["channel-group"];return 0===t.length?[]:t.split(",").filter((e=>e.length>0))}}class D extends EventTarget{constructor(){super(...arguments),this.clientsState={},this.requests={},this.lastHeartbeatTimestamp=0,this.canSendBackupHeartbeat=!0,this.isAccessDeniedError=!1,this._interval=0}set interval(e){const t=this._interval!==e;this._interval=e,t&&(0===e?this.stopTimer():this.startTimer())}set accessToken(e){if(!e)return void(this._accessToken=e);const t=Object.values(this.requests).filter((e=>!!e.accessToken)).map((e=>e.accessToken));t.push(e),this._accessToken=t.sort(I.compare).pop(),this.isAccessDeniedError&&(this.canSendBackupHeartbeat=!0,this.startTimer(this.presenceTimerTimeout()))}stateForClient(e){if(!this.clientsState[e.identifier])return;const t=this.clientsState[e.identifier];return t?{channels:[...t.channels],channelGroups:[...t.channelGroups],state:t.state}:{channels:[],channelGroups:[]}}requestForClient(e){return this.requests[e.identifier]}addClientRequest(e,t){this.requests[e.identifier]=t,this.clientsState[e.identifier]={channels:t.channels,channelGroups:t.channelGroups},t.state&&(this.clientsState[e.identifier].state=Object.assign({},t.state));const s=Object.values(this.requests).filter((e=>!!e.accessToken)).map((e=>e.accessToken)).sort(I.compare);s&&s.length>0&&(this._accessToken=s.pop()),this.sendAggregatedHeartbeat(t)}removeClient(e){delete this.clientsState[e.identifier],delete this.requests[e.identifier],0===Object.keys(this.clientsState).length&&this.stopTimer()}removeFromClientState(e,t,s){const n=this.clientsState[e.identifier];n&&(n.channelGroups=n.channelGroups.filter((e=>!s.includes(e))),n.channels=n.channels.filter((e=>!t.includes(e))),0!==n.channels.length||0!==n.channelGroups.length?n.state&&Object.keys(n.state).forEach((e=>{n.channels.includes(e)||n.channelGroups.includes(e)||delete n.state[e]})):this.removeClient(e))}startTimer(e){this.stopTimer(),0!==Object.keys(this.clientsState).length&&(this.timeout=setTimeout((()=>this.handlePresenceTimer()),1e3*(null!=e?e:this._interval)))}stopTimer(){this.timeout&&clearTimeout(this.timeout),this.timeout=void 0}sendAggregatedHeartbeat(e){if(0!==this.lastHeartbeatTimestamp){const t=this.lastHeartbeatTimestamp+1e3*this._interval;let s=.05*this._interval;this._interval-s<3&&(s=0);if(t-Date.now()>1e3*s)if(e&&this.previousRequestResult)e.handleProcessingStarted(),e.handleProcessingSuccess(e.asFetchRequest,this.previousRequestResult);else if(!e)return}const t=Object.values(this.requests),s=t[Math.floor(Math.random()*t.length)],n=Object.assign({},s.request);let r={};const i=new Set,a=new Set;Object.values(this.clientsState).forEach((e=>{e.state&&(r=Object.assign(Object.assign({},r),e.state)),e.channelGroups.forEach(i.add,i),e.channels.forEach(a.add,a)})),this.lastHeartbeatTimestamp=Date.now();const o=B.fromCachedState(n,t[0].subscribeKey,[...i],[...a],Object.keys(r).length>0?r:void 0,this._accessToken);Object.values(this.requests).forEach((e=>!e.serviceRequest&&(e.serviceRequest=o))),this.addListenersForRequest(o),this.dispatchEvent(new U(o)),e&&this.startTimer()}addListenersForRequest(e){const t=new AbortController,s=e=>{if(t.abort(),e instanceof w){const{response:t}=e;this.previousRequestResult=t}else if(e instanceof T){const{error:t}=e;this.canSendBackupHeartbeat=!0,this.isAccessDeniedError=!1,t.response&&t.response.status>=400&&t.response.status<500&&(this.isAccessDeniedError=403===t.response.status,this.canSendBackupHeartbeat=!1)}};e.addEventListener(C.Success,s,{signal:t.signal,once:!0}),e.addEventListener(C.Error,s,{signal:t.signal,once:!0}),e.addEventListener(C.Canceled,s,{signal:t.signal,once:!0})}handlePresenceTimer(){if(0===Object.keys(this.clientsState).length||!this.canSendBackupHeartbeat)return;const e=this.presenceTimerTimeout();this.sendAggregatedHeartbeat(),this.startTimer(e)}presenceTimerTimeout(){const e=(Date.now()-this.lastHeartbeatTimestamp)/1e3;let t=this._interval;return e<t&&(t-=e),t===this._interval&&(t+=.05),t=Math.max(t,3),t}}class $ extends P{constructor(e){super(),this.clientsManager=e,this.heartbeatStates={},this.clientAbortControllers={},this.subscribeOnClientEvents(e)}heartbeatStateForClient(e){for(const t of Object.values(this.heartbeatStates))if(t.stateForClient(e))return t}moveClient(e){const t=this.heartbeatStateForClient(e),s=t?t.requestForClient(e):void 0;t&&s&&(this.removeClient(e),this.addClient(e,s))}addClient(e,t){var s;const n=t.asIdentifier;let r=this.heartbeatStates[n];r?e.heartbeatInterval&&r.interval>0&&e.heartbeatInterval>0&&e.heartbeatInterval<r.interval&&(r.interval=e.heartbeatInterval):(r=this.heartbeatStates[n]=new D,r.interval=null!==(s=e.heartbeatInterval)&&void 0!==s?s:0,this.addListenerForHeartbeatStateEvents(r)),r.addClientRequest(e,t)}removeClient(e){const t=this.heartbeatStateForClient(e);t&&t.removeClient(e)}subscribeOnClientEvents(s){s.addEventListener(t.Registered,(t=>{const{client:s}=t,n=new AbortController;this.clientAbortControllers[s.identifier]=n,s.addEventListener(e.Disconnect,(()=>this.removeClient(s)),{signal:n.signal}),s.addEventListener(e.IdentityChange,(()=>this.moveClient(s)),{signal:n.signal}),s.addEventListener(e.AuthChange,(e=>{const t=this.heartbeatStateForClient(s);t&&(t.accessToken=e.newAuth)}),{signal:n.signal}),s.addEventListener(e.HeartbeatIntervalChange,(e=>{var t;const n=e,r=this.heartbeatStateForClient(s);r&&(r.interval=null!==(t=n.newInterval)&&void 0!==t?t:0)}),{signal:n.signal}),s.addEventListener(e.SendHeartbeatRequest,(e=>this.addClient(s,e.request)),{signal:n.signal}),s.addEventListener(e.SendLeaveRequest,(e=>{const{request:t}=e,n=this.heartbeatStateForClient(s);n&&n.removeFromClientState(s,t.channels,t.channelGroups)}),{signal:n.signal})})),s.addEventListener(t.Unregistered,(e=>{const{client:t}=e,s=this.clientAbortControllers[t.identifier];delete this.clientAbortControllers[t.identifier],s&&s.abort(),this.removeClient(t)}))}addListenerForHeartbeatStateEvents(e){e.addEventListener(G.Heartbeat,(e=>{const{request:t}=e;this.sendRequest(t,((e,s)=>t.handleProcessingSuccess(e,s)),((e,s)=>t.handleProcessingError(e,s)))}))}}$.textDecoder=new TextDecoder,function(e){e[e.Trace=0]="Trace",e[e.Debug=1]="Debug",e[e.Info=2]="Info",e[e.Warn=3]="Warn",e[e.Error=4]="Error",e[e.None=5]="None"}(_||(_={}));class K{constructor(e,t){this.minLogLevel=e,this.port=t}debug(e){this.log(e,_.Debug)}error(e){this.log(e,_.Error)}info(e){this.log(e,_.Info)}trace(e){this.log(e,_.Trace)}warn(e){this.log(e,_.Warn)}log(e,t){if(t<this.minLogLevel)return;let s;s="string"==typeof e?{messageType:"text",message:e}:"function"==typeof e?e():e,s.level=t;try{this.port.postMessage({type:"shared-worker-console-log",message:s})}catch(e){this.minLogLevel!==_.None&&console.error(`[SharedWorker] Unable send message using message port: ${e}`)}}}class H extends EventTarget{constructor(e,t,s,n,r,i){super(),this.identifier=e,this.subKey=t,this.userId=s,this.port=n,this.requests={},this.listenerAbortController=new AbortController,this.cachedSubscriptionChannelGroups=[],this.cachedSubscriptionChannels=[],this.logger=new K(r,this.port),this._heartbeatInterval=i,this.subscribeOnEvents()}invalidate(e=!1){this.listenerAbortController.abort(),this.cancelRequests()}get origin(){var e;return null!==(e=this._origin)&&void 0!==e?e:""}get heartbeatInterval(){return this._heartbeatInterval}get accessToken(){return this._accessToken}get lastPongEvent(){return this._lastPongEvent}postEvent(e){try{return this.port.postMessage(e),!0}catch(e){this.logger.error(`Unable send message using message port: ${e}`)}return!1}subscribeOnEvents(){this.port.addEventListener("message",(e=>{"client-unregister"===e.data.type?this.handleUnregisterEvent():"client-update"===e.data.type?this.handleConfigurationUpdateEvent(e.data):"send-request"===e.data.type?this.handleSendRequestEvent(e.data):"cancel-request"===e.data.type?this.handleCancelRequestEvent(e.data):"client-disconnect"===e.data.type?this.handleDisconnectEvent():"client-pong"===e.data.type&&this.handlePongEvent()}),{signal:this.listenerAbortController.signal})}handleUnregisterEvent(){this.invalidate(),this.dispatchEvent(new i(this))}handleConfigurationUpdateEvent(e){const{userId:t,accessToken:s,preProcessedToken:n,heartbeatInterval:r,workerLogLevel:i}=e;if(this.logger.minLogLevel=i,this.logger.debug((()=>({messageType:"object",message:{userId:t,authKey:s,token:n,heartbeatInterval:r,workerLogLevel:i},details:"Update client configuration with parameters:"}))),s){const e=new I(s,(null!=n?n:{}).token,(null!=n?n:{}).expiration);if(!this.accessToken||!e.equalTo(this.accessToken)){const t=this.accessToken;this._accessToken=e,Object.values(this.requests).filter((e=>!e.completed&&e instanceof O)).forEach((t=>t.accessToken=e)),this.dispatchEvent(new c(this,e,t))}}if(this.userId!==t){const e=this.userId;this.userId=t,Object.values(this.requests).filter((e=>!e.completed&&e instanceof O)).forEach((e=>e.userId=t)),this.dispatchEvent(new o(this,e,t))}if(this._heartbeatInterval!==r){const e=this._heartbeatInterval;this._heartbeatInterval=r,this.dispatchEvent(new h(this,r,e))}}handleSendRequestEvent(e){let t;e.request.path.startsWith("/v2/subscribe")?O.useCachedState(e.request)&&(this.cachedSubscriptionChannelGroups.length||this.cachedSubscriptionChannels.length)?t=O.fromCachedState(e.request,this.subKey,this.cachedSubscriptionChannelGroups,this.cachedSubscriptionChannels,this.cachedSubscriptionState,this.accessToken):(t=O.fromTransportRequest(e.request,this.subKey,this.accessToken),this.cachedSubscriptionChannelGroups=[...t.channelGroups],this.cachedSubscriptionChannels=[...t.channels],t.state?this.cachedSubscriptionState=Object.assign({},t.state):this.cachedSubscriptionState=void 0):t=e.request.path.endsWith("/heartbeat")?B.fromTransportRequest(e.request,this.subKey,this.accessToken):j.fromTransportRequest(e.request,this.subKey,this.accessToken),t.client=this,this.requests[t.request.identifier]=t,this._origin||(this._origin=t.origin),this.listenRequestCompletion(t),this.dispatchEvent(this.eventWithRequest(t))}handleCancelRequestEvent(e){this.requests[e.identifier]&&this.requests[e.identifier].cancel()}handleDisconnectEvent(){this.dispatchEvent(new a(this))}handlePongEvent(){this._lastPongEvent=Date.now()/1e3}listenRequestCompletion(e){const t=new AbortController,s=s=>{delete this.requests[e.request.identifier],t.abort(),s instanceof w?this.postEvent(s.response):s instanceof T?this.postEvent(s.error):s instanceof k&&this.postEvent(this.requestCancelError(e))};e.addEventListener(C.Success,s,{signal:t.signal,once:!0}),e.addEventListener(C.Error,s,{signal:t.signal,once:!0}),e.addEventListener(C.Canceled,s,{signal:t.signal,once:!0})}cancelRequests(){Object.values(this.requests).forEach((e=>e.cancel()))}eventWithRequest(e){let t;return t=e instanceof O?new l(this,e):e instanceof B?new u(this,e):new d(this,e),t}requestCancelError(e){return{type:"request-process-error",clientIdentifier:this.identifier,identifier:e.request.identifier,url:e.asFetchRequest.url,error:{name:"AbortError",type:"ABORTED",message:"Request aborted"}}}}class Q extends EventTarget{constructor(e){super(),this.sharedWorkerIdentifier=e,this.timeouts={},this.clients={},this.clientBySubscribeKey={}}createClient(e,t){var s;if(this.clients[e.clientIdentifier])return this.clients[e.clientIdentifier];const n=new H(e.clientIdentifier,e.subscriptionKey,e.userId,t,e.workerLogLevel,e.heartbeatInterval);return this.registerClient(n),e.workerOfflineClientsCheckInterval&&this.startClientTimeoutCheck(e.subscriptionKey,e.workerOfflineClientsCheckInterval,null!==(s=e.workerUnsubscribeOfflineClients)&&void 0!==s&&s),n}registerClient(e){this.clients[e.identifier]={client:e,abortController:new AbortController},this.clientBySubscribeKey[e.subKey]?this.clientBySubscribeKey[e.subKey].push(e):this.clientBySubscribeKey[e.subKey]=[e],this.forEachClient(e.subKey,(t=>t.logger.debug(`'${e.identifier}' client registered with '${this.sharedWorkerIdentifier}' shared worker (${this.clientBySubscribeKey[e.subKey].length} active clients).`))),this.subscribeOnClientEvents(e),this.dispatchEvent(new g(e))}unregisterClient(e,t=!1){if(!this.clients[e.identifier])return;this.clients[e.identifier].abortController.abort(),delete this.clients[e.identifier];const s=this.clientBySubscribeKey[e.subKey];if(s){const t=s.indexOf(e);s.splice(t,1),0===s.length&&(delete this.clientBySubscribeKey[e.subKey],this.stopClientTimeoutCheck(e))}this.forEachClient(e.subKey,(t=>t.logger.debug(`'${this.sharedWorkerIdentifier}' shared worker unregistered '${e.identifier}' client (${this.clientBySubscribeKey[e.subKey].length} active clients).`))),this.dispatchEvent(new f(e,t))}startClientTimeoutCheck(e,t,s){this.timeouts[e]||(this.forEachClient(e,(e=>e.logger.debug(`Setup PubNub client ping for every ${t} seconds.`))),this.timeouts[e]={interval:t,unsubscribeOffline:s,timeout:setTimeout((()=>this.handleTimeoutCheck(e)),500*t-1)})}stopClientTimeoutCheck(e){this.timeouts[e.subKey]&&(this.timeouts[e.subKey].timeout&&clearTimeout(this.timeouts[e.subKey].timeout),delete this.timeouts[e.subKey])}handleTimeoutCheck(e){if(!this.timeouts[e])return;const t=this.timeouts[e].interval;[...this.clientBySubscribeKey[e]].forEach((s=>{s.lastPingRequest&&(!s.lastPongEvent||Math.abs(s.lastPongEvent-s.lastPingRequest)>.5*t)&&(this.unregisterClient(s,this.timeouts[e].unsubscribeOffline),this.forEachClient(e,(e=>{e.identifier!==s.identifier&&e.logger.debug(`'${s.identifier}' client is inactive. Invalidating...`)}))),this.clients[s.identifier]&&(s.lastPingRequest=(new Date).getTime()/1e3,s.postEvent({type:"shared-worker-ping"}))})),this.timeouts[e]&&(this.timeouts[e].timeout=setTimeout((()=>this.handleTimeoutCheck(e)),500*t))}subscribeOnClientEvents(t){t.addEventListener(e.Unregister,(()=>this.unregisterClient(t,!!this.timeouts[t.subKey]&&this.timeouts[t.subKey].unsubscribeOffline)),{signal:this.clients[t.identifier].abortController.signal,once:!0})}forEachClient(e,t){this.clientBySubscribeKey[e]&&this.clientBySubscribeKey[e].forEach(t)}}const W=new Q(E.createUUID());new x(W),new $(W),self.onconnect=e=>{e.ports.forEach((e=>{e.start(),e.onmessage=t=>{const s=t.data;"client-register"===s.type&&W.createClient(s,e)},e.postMessage({type:"shared-worker-connected"})}))}}));
